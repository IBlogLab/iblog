{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"222b6240-7cee-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.215.77.70","x-forwarded-proto":"https","x-real-ip":"3.215.77.70","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"69ms"},"msg":"","time":"2019-05-23T00:03:02.955Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"2f4a9b30-7cee-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.215.77.70","x-forwarded-proto":"https","x-real-ip":"3.215.77.70","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"164ms"},"msg":"","time":"2019-05-23T00:03:25.065Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4434c340-7cee-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.54.172.183","x-forwarded-proto":"https","x-real-ip":"52.54.172.183","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"96ms"},"msg":"","time":"2019-05-23T00:04:00.086Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"36784e00-7cf0-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.239.178.190","x-forwarded-proto":"https","x-real-ip":"34.239.178.190","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"66ms"},"msg":"","time":"2019-05-23T00:17:56.003Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"49aa65d0-7cf0-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.239.178.190","x-forwarded-proto":"https","x-real-ip":"34.239.178.190","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"80ms"},"msg":"","time":"2019-05-23T00:18:28.223Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4c2cf200-7cf0-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.239.178.190","x-forwarded-proto":"https","x-real-ip":"34.239.178.190","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"154ms"},"msg":"","time":"2019-05-23T00:18:32.511Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"a8756820-7cf1-11e9-9c14-5974b6bdc985","userId":null},"url":"/rss/","method":"GET","originalUrl":"/rss/","params":{},"headers":{"x-forwarded-for":"62.210.215.110","x-forwarded-proto":"https","x-real-ip":"62.210.215.110","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.66 Safari/537.36","cache-control":"max-age=0, no-cache","pragma":"no-cache","accept-encoding":"gzip"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/xml; charset=utf-8","etag":"W/\"23b6b-wUc5fkSwKDF7Ctuyxl4R7+OECnw\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"108ms"},"msg":"","time":"2019-05-23T00:28:16.783Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4b7f13e0-7cf2-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.239.178.190","x-forwarded-proto":"https","x-real-ip":"34.239.178.190","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"101ms"},"msg":"","time":"2019-05-23T00:32:50.309Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"86274080-7cf2-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.90.70.77","x-forwarded-proto":"https","x-real-ip":"54.90.70.77","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"89ms"},"msg":"","time":"2019-05-23T00:34:28.706Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"86c5ca70-7cf2-11e9-9c14-5974b6bdc985","userId":null},"url":"/robots.txt","method":"GET","originalUrl":"/robots.txt","params":{},"headers":{"x-forwarded-for":"203.208.60.10","x-forwarded-proto":"https","x-real-ip":"203.208.60.10","host":"lancexlab.cn","connection":"close","accept":"text/plain,text/html,*/*","user-agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","accept-encoding":"gzip,deflate,br"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","content-type":"text/plain","content-length":88,"etag":"\"f15f756fcf0b8854e4d47b134faf739c\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"1ms"},"msg":"","time":"2019-05-23T00:34:29.657Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"8734b8e0-7cf2-11e9-9c14-5974b6bdc985","userId":null},"url":"/sitemap-posts.xml","method":"GET","originalUrl":"/sitemap-posts.xml","params":{"resource":"posts"},"headers":{"x-forwarded-for":"203.208.60.96","x-forwarded-proto":"https","x-real-ip":"203.208.60.96","host":"lancexlab.cn","connection":"close","accept":"*/*","from":"googlebot(at)googlebot.com","user-agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","accept-encoding":"gzip,deflate,br"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=3600","content-type":"text/xml; charset=utf-8","etag":"W/\"c51-OeDJdsKZmzpb3cwNWzjbdPKzwec\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2019-05-23T00:34:30.385Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"99285d40-7cf2-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.215.77.70","x-forwarded-proto":"https","x-real-ip":"3.215.77.70","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"89ms"},"msg":"","time":"2019-05-23T00:35:00.591Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"a0e9e110-7cf3-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"216.218.206.68","x-forwarded-proto":"https","x-real-ip":"216.218.206.68","host":"140.143.4.220","connection":"close"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","content-length":"84251","etag":"W/\"1491b-br+IalD3BbWlsloaRZYyEhhW77A\"","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"252ms"},"msg":"","time":"2019-05-23T00:42:23.262Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"bc2c0750-7cf3-11e9-9c14-5974b6bdc985","userId":null},"url":"/author/lance/","method":"GET","originalUrl":"/author/lance/","params":{"slug":"lance"},"headers":{"x-forwarded-for":"203.208.60.117","x-forwarded-proto":"https","x-real-ip":"203.208.60.117","host":"lancexlab.cn","connection":"close","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","from":"googlebot(at)googlebot.com","user-agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","accept-encoding":"gzip,deflate,br","if-modified-since":"Wed, 22 May 2019 15:11:14 GMT"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"12690-0v655vBT9jYsT4/sniXQ/IWMvFo\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"288ms"},"msg":"","time":"2019-05-23T00:43:09.035Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"3c7732e0-7cf4-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.86.99.151","x-forwarded-proto":"https","x-real-ip":"3.86.99.151","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"70ms"},"msg":"","time":"2019-05-23T00:46:44.054Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"50054d60-7cf4-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.86.99.151","x-forwarded-proto":"https","x-real-ip":"3.86.99.151","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"74ms"},"msg":"","time":"2019-05-23T00:47:16.865Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"62fe05b0-7cf4-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.215.77.70","x-forwarded-proto":"https","x-real-ip":"3.215.77.70","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"65ms"},"msg":"","time":"2019-05-23T00:47:48.685Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"ef6a3410-7cf4-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"157.55.39.104","x-forwarded-proto":"http","x-real-ip":"157.55.39.104","host":"lancexlab.cn","connection":"close","cache-control":"no-cache","pragma":"no-cache","accept":"*/*","accept-encoding":"gzip, deflate","from":"bingbot(at)microsoft.com","user-agent":"Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm)"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=31536000","location":"https://lancexlab.cn/","vary":"Accept, Accept-Encoding","content-type":"text/plain; charset=utf-8","content-length":"55"},"statusCode":301,"responseTime":"1ms"},"msg":"","time":"2019-05-23T00:51:44.212Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"1a5d9350-7cf6-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.215.77.70","x-forwarded-proto":"https","x-real-ip":"3.215.77.70","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"78ms"},"msg":"","time":"2019-05-23T01:00:05.845Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"5ddd8b30-7cf6-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"60.191.38.77","x-forwarded-proto":"https","x-real-ip":"60.191.38.77","host":"www.lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:47.0) Gecko/20100101 Firefox/47.0","accept":"*/*"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","content-length":"84251","etag":"W/\"1491b-br+IalD3BbWlsloaRZYyEhhW77A\"","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"247ms"},"msg":"","time":"2019-05-23T01:01:59.260Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"69bd3f40-7cf6-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"18.212.12.64","x-forwarded-proto":"https","x-real-ip":"18.212.12.64","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"79ms"},"msg":"","time":"2019-05-23T01:02:19.012Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"be181880-7cf6-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.215.77.70","x-forwarded-proto":"https","x-real-ip":"3.215.77.70","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"70ms"},"msg":"","time":"2019-05-23T01:04:40.528Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"77736b90-7cf7-11e9-9c14-5974b6bdc985","userId":null},"url":"/author/lance","method":"GET","originalUrl":"/author/lance","params":{},"headers":{"x-forwarded-for":"163.177.90.152","x-forwarded-proto":"https","x-real-ip":"163.177.90.152","host":"www.lancexlab.cn","connection":"close","accept-encoding":"deflate, gzip","referer":"http://www.lancexlab.cn/author/lance","accept":"*/*","accept-language":"zh-cn","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 9_3_4 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13G35 QQ/6.5.3.410 V1_IPH_SQ_6.5.3_1_APP_A Pixel/750 Core/UIWebView NetType/2G Mem/117"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=31536000","location":"/author/lance/"},"statusCode":301,"responseTime":"1ms"},"msg":"","time":"2019-05-23T01:09:51.435Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"778a7600-7cf7-11e9-9c14-5974b6bdc985","userId":null},"url":"/author/lance/","method":"GET","originalUrl":"/author/lance/","params":{"slug":"lance"},"headers":{"x-forwarded-for":"163.177.90.152","x-forwarded-proto":"https","x-real-ip":"163.177.90.152","host":"www.lancexlab.cn","connection":"close","accept-encoding":"deflate, gzip","referer":"https://www.lancexlab.cn/author/lance","accept":"*/*","accept-language":"zh-cn","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 9_3_4 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13G35 QQ/6.5.3.410 V1_IPH_SQ_6.5.3_1_APP_A Pixel/750 Core/UIWebView NetType/2G Mem/117"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"12690-0v655vBT9jYsT4/sniXQ/IWMvFo\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"167ms"},"msg":"","time":"2019-05-23T01:09:51.752Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"69c6a330-7cf8-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.83.125.179","x-forwarded-proto":"https","x-real-ip":"54.83.125.179","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"106ms"},"msg":"","time":"2019-05-23T01:16:38.094Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"73082cc0-7cf8-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.90.62.191","x-forwarded-proto":"https","x-real-ip":"3.90.62.191","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"74ms"},"msg":"","time":"2019-05-23T01:16:53.592Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"c0b1c440-7cf8-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.90.62.191","x-forwarded-proto":"https","x-real-ip":"3.90.62.191","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"81ms"},"msg":"","time":"2019-05-23T01:19:03.894Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4b253a70-7cfa-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"18.205.96.212","x-forwarded-proto":"https","x-real-ip":"18.205.96.212","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"70ms"},"msg":"","time":"2019-05-23T01:30:05.662Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"680e32e0-7cfa-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.83.125.179","x-forwarded-proto":"https","x-real-ip":"54.83.125.179","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"70ms"},"msg":"","time":"2019-05-23T01:30:54.166Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"e56fac00-7cfa-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"60.191.38.77","x-forwarded-proto":"https","x-real-ip":"60.191.38.77","host":"www.lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:47.0) Gecko/20100101 Firefox/47.0","accept":"*/*"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","content-length":"84251","etag":"W/\"1491b-br+IalD3BbWlsloaRZYyEhhW77A\"","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"203ms"},"msg":"","time":"2019-05-23T01:34:24.654Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"08b50f70-7cfb-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"18.205.96.212","x-forwarded-proto":"https","x-real-ip":"18.205.96.212","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"72ms"},"msg":"","time":"2019-05-23T01:35:23.697Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"1e7e5770-7cfc-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"18.212.12.64","x-forwarded-proto":"https","x-real-ip":"18.212.12.64","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"76ms"},"msg":"","time":"2019-05-23T01:43:09.748Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"6b394930-7cfc-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.161.32.158","x-forwarded-proto":"https","x-real-ip":"54.161.32.158","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"70ms"},"msg":"","time":"2019-05-23T01:45:18.474Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"15584fb0-7cfd-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.54.172.183","x-forwarded-proto":"https","x-real-ip":"52.54.172.183","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"74ms"},"msg":"","time":"2019-05-23T01:50:03.894Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"1a33ca90-7cfe-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.54.172.183","x-forwarded-proto":"https","x-real-ip":"52.54.172.183","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"71ms"},"msg":"","time":"2019-05-23T01:57:21.537Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"ab3d75e0-7cfe-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.215.183.68","x-forwarded-proto":"https","x-real-ip":"3.215.183.68","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"165ms"},"msg":"","time":"2019-05-23T02:01:24.969Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"3957f080-7cff-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.215.183.68","x-forwarded-proto":"https","x-real-ip":"3.215.183.68","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"69ms"},"msg":"","time":"2019-05-23T02:05:23.279Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4915d3b0-7d00-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.81.15.76","x-forwarded-proto":"https","x-real-ip":"3.81.15.76","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"97ms"},"msg":"","time":"2019-05-23T02:12:59.213Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"e25a46f0-7d00-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"18.212.12.64","x-forwarded-proto":"https","x-real-ip":"18.212.12.64","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"75ms"},"msg":"","time":"2019-05-23T02:17:16.331Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4de25a70-7d01-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.81.15.76","x-forwarded-proto":"https","x-real-ip":"3.81.15.76","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"101ms"},"msg":"","time":"2019-05-23T02:20:16.766Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"a015a350-7d02-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.215.183.68","x-forwarded-proto":"https","x-real-ip":"3.215.183.68","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"177ms"},"msg":"","time":"2019-05-23T02:29:44.248Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"2f62f8a0-7d03-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.210.222.169","x-forwarded-proto":"https","x-real-ip":"54.210.222.169","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"80ms"},"msg":"","time":"2019-05-23T02:33:44.572Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"3c98ede0-7d03-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.161.32.158","x-forwarded-proto":"https","x-real-ip":"54.161.32.158","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"81ms"},"msg":"","time":"2019-05-23T02:34:06.737Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"758a4d50-7d04-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.210.222.169","x-forwarded-proto":"https","x-real-ip":"54.210.222.169","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"90ms"},"msg":"","time":"2019-05-23T02:42:51.777Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"16cbe340-7d05-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"18.212.12.64","x-forwarded-proto":"https","x-real-ip":"18.212.12.64","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"106ms"},"msg":"","time":"2019-05-23T02:47:22.335Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4cdb74f0-7d05-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"18.212.12.64","x-forwarded-proto":"https","x-real-ip":"18.212.12.64","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"156ms"},"msg":"","time":"2019-05-23T02:48:53.085Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"6ed32d40-7d06-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.161.32.158","x-forwarded-proto":"https","x-real-ip":"54.161.32.158","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"68ms"},"msg":"","time":"2019-05-23T02:56:59.481Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"6dd43e60-7d07-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.54.172.183","x-forwarded-proto":"https","x-real-ip":"52.54.172.183","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"89ms"},"msg":"","time":"2019-05-23T03:04:07.329Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"6f904640-7d07-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.81.15.76","x-forwarded-proto":"https","x-real-ip":"3.81.15.76","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"76ms"},"msg":"","time":"2019-05-23T03:04:10.225Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"c94a4950-7d08-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.54.172.183","x-forwarded-proto":"https","x-real-ip":"52.54.172.183","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"89ms"},"msg":"","time":"2019-05-23T03:13:50.272Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"ce02ef60-7d08-11e9-9c14-5974b6bdc985","userId":null},"url":"/robots.txt","method":"GET","originalUrl":"/robots.txt","params":{},"headers":{"x-forwarded-for":"203.208.60.36","x-forwarded-proto":"https","x-real-ip":"203.208.60.36","host":"www.lancexlab.cn","connection":"close","accept":"text/plain,text/html,*/*","user-agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","accept-encoding":"gzip,deflate,br"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","content-type":"text/plain","content-length":88,"etag":"\"f15f756fcf0b8854e4d47b134faf739c\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"1ms"},"msg":"","time":"2019-05-23T03:13:58.104Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"cf0ac270-7d08-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"203.208.60.64","x-forwarded-proto":"https","x-real-ip":"203.208.60.64","host":"www.lancexlab.cn","connection":"close","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","from":"googlebot(at)googlebot.com","user-agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","accept-encoding":"gzip,deflate,br"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"1491b-br+IalD3BbWlsloaRZYyEhhW77A\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"274ms"},"msg":"","time":"2019-05-23T03:14:00.111Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"93211fb0-7d09-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.81.15.76","x-forwarded-proto":"https","x-real-ip":"3.81.15.76","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"68ms"},"msg":"","time":"2019-05-23T03:19:28.880Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"c9107f30-7d09-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.215.183.68","x-forwarded-proto":"https","x-real-ip":"3.215.183.68","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"67ms"},"msg":"","time":"2019-05-23T03:20:59.367Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f9f308b0-7d0a-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.210.222.169","x-forwarded-proto":"https","x-real-ip":"54.210.222.169","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"82ms"},"msg":"","time":"2019-05-23T03:29:30.894Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"655c70a0-7d0b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.161.32.158","x-forwarded-proto":"https","x-real-ip":"54.161.32.158","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"72ms"},"msg":"","time":"2019-05-23T03:32:31.091Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"20841f40-7d0c-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.54.172.183","x-forwarded-proto":"https","x-real-ip":"52.54.172.183","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"70ms"},"msg":"","time":"2019-05-23T03:37:45.083Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"bb39fcd0-7d0c-11e9-9c14-5974b6bdc985","userId":null},"url":"/sitemap-posts.xml","method":"GET","originalUrl":"/sitemap-posts.xml","params":{"resource":"posts"},"headers":{"x-forwarded-for":"207.46.13.108","x-forwarded-proto":"https","x-real-ip":"207.46.13.108","host":"lancexlab.cn","connection":"close","cache-control":"no-cache","pragma":"no-cache","accept":"*/*","accept-encoding":"gzip, deflate","user-agent":"Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm)"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=3600","content-type":"text/xml; charset=utf-8","etag":"W/\"c51-OeDJdsKZmzpb3cwNWzjbdPKzwec\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"4ms"},"msg":"","time":"2019-05-23T03:42:04.579Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"607d9300-7d0d-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.54.172.183","x-forwarded-proto":"https","x-real-ip":"52.54.172.183","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"168ms"},"msg":"","time":"2019-05-23T03:46:42.014Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"62488f00-7d0d-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.83.125.179","x-forwarded-proto":"https","x-real-ip":"54.83.125.179","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"73ms"},"msg":"","time":"2019-05-23T03:46:44.923Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"46986f40-7d0e-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.210.222.169","x-forwarded-proto":"https","x-real-ip":"54.210.222.169","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"70ms"},"msg":"","time":"2019-05-23T03:53:07.964Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"3fb838d0-7d0f-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.210.222.169","x-forwarded-proto":"https","x-real-ip":"54.210.222.169","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"65ms"},"msg":"","time":"2019-05-23T04:00:05.919Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"c5578720-7d0f-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.54.172.183","x-forwarded-proto":"https","x-real-ip":"52.54.172.183","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"83ms"},"msg":"","time":"2019-05-23T04:03:50.118Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"21c79ef0-7d10-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.54.172.183","x-forwarded-proto":"https","x-real-ip":"52.54.172.183","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"180ms"},"msg":"","time":"2019-05-23T04:06:25.305Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"814c7b60-7d11-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.83.125.179","x-forwarded-proto":"https","x-real-ip":"54.83.125.179","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"83ms"},"msg":"","time":"2019-05-23T04:16:14.954Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"e962c0b0-7d11-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.23.205.121","x-forwarded-proto":"https","x-real-ip":"52.23.205.121","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"90ms"},"msg":"","time":"2019-05-23T04:19:09.591Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"7b78fa00-7d12-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.236.42.39","x-forwarded-proto":"https","x-real-ip":"54.236.42.39","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"74ms"},"msg":"","time":"2019-05-23T04:23:14.667Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"9e69b850-7d13-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"18.207.158.180","x-forwarded-proto":"https","x-real-ip":"18.207.158.180","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"71ms"},"msg":"","time":"2019-05-23T04:31:22.781Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"b1cd6770-7d13-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"18.207.158.180","x-forwarded-proto":"https","x-real-ip":"18.207.158.180","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"144ms"},"msg":"","time":"2019-05-23T04:31:55.388Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"ff931270-7d13-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"207.46.13.108","x-forwarded-proto":"https","x-real-ip":"207.46.13.108","host":"www.lancexlab.cn","connection":"close","cache-control":"no-cache","pragma":"no-cache","accept":"*/*","accept-encoding":"gzip, deflate","from":"bingbot(at)microsoft.com","user-agent":"Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm)"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"1491b-br+IalD3BbWlsloaRZYyEhhW77A\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"201ms"},"msg":"","time":"2019-05-23T04:34:05.922Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"48627220-7d14-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.83.125.179","x-forwarded-proto":"https","x-real-ip":"54.83.125.179","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"72ms"},"msg":"","time":"2019-05-23T04:36:07.948Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"6b44a6f0-7d14-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"106.14.190.222","x-forwarded-proto":"https","x-real-ip":"106.14.190.222","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (Linux; Android 4.1.1; Nexus 7 Build/JRO03D))","accept":"text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","content-length":"84251","etag":"W/\"1491b-br+IalD3BbWlsloaRZYyEhhW77A\"","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"172ms"},"msg":"","time":"2019-05-23T04:37:06.572Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"96436d50-7d14-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"47.97.192.46","x-forwarded-proto":"https","x-real-ip":"47.97.192.46","host":"www.lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (Linux; Android 4.1.1; Nexus 7 Build/JRO03D))","accept":"text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","content-length":"84251","etag":"W/\"1491b-br+IalD3BbWlsloaRZYyEhhW77A\"","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"209ms"},"msg":"","time":"2019-05-23T04:38:18.744Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"eae90b30-7d14-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"47.92.103.177","x-forwarded-proto":"http","x-real-ip":"47.92.103.177","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (Linux; Android 4.1.1; Nexus 7 Build/JRO03D))","accept":"text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=31536000","location":"https://lancexlab.cn/","vary":"Accept, Accept-Encoding","content-type":"text/html; charset=utf-8","content-length":"98"},"statusCode":301,"responseTime":"1ms"},"msg":"","time":"2019-05-23T04:40:40.550Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"eaf232f0-7d14-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"47.92.103.177","x-forwarded-proto":"https","x-real-ip":"47.92.103.177","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (Linux; Android 4.1.1; Nexus 7 Build/JRO03D))","accept":"text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","content-length":"84251","etag":"W/\"1491b-br+IalD3BbWlsloaRZYyEhhW77A\"","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"178ms"},"msg":"","time":"2019-05-23T04:40:40.786Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"fde03ce0-7d14-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"47.92.50.96","x-forwarded-proto":"https","x-real-ip":"47.92.50.96","host":"www.lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (Linux; Android 4.1.1; Nexus 7 Build/JRO03D))","accept":"text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","content-length":"84251","etag":"W/\"1491b-br+IalD3BbWlsloaRZYyEhhW77A\"","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"194ms"},"msg":"","time":"2019-05-23T04:41:12.562Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"90e67b80-7d15-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.236.42.39","x-forwarded-proto":"https","x-real-ip":"54.236.42.39","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"73ms"},"msg":"","time":"2019-05-23T04:45:19.107Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"92195630-7d15-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.54.172.183","x-forwarded-proto":"https","x-real-ip":"52.54.172.183","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"87ms"},"msg":"","time":"2019-05-23T04:45:21.131Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"499254b0-7d16-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.236.42.39","x-forwarded-proto":"https","x-real-ip":"54.236.42.39","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"70ms"},"msg":"","time":"2019-05-23T04:50:28.930Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"d56274b0-7d17-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.147.214.101","x-forwarded-proto":"https","x-real-ip":"54.147.214.101","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"94ms"},"msg":"","time":"2019-05-23T05:01:33.019Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f4aeb180-7d17-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"18.207.158.180","x-forwarded-proto":"https","x-real-ip":"18.207.158.180","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"77ms"},"msg":"","time":"2019-05-23T05:02:25.510Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"8f844c10-7d18-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"18.207.158.180","x-forwarded-proto":"https","x-real-ip":"18.207.158.180","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"91ms"},"msg":"","time":"2019-05-23T05:06:45.293Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"b0c585a0-7d19-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.147.214.101","x-forwarded-proto":"https","x-real-ip":"54.147.214.101","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"75ms"},"msg":"","time":"2019-05-23T05:14:50.566Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4b741030-7d1a-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"18.207.158.180","x-forwarded-proto":"https","x-real-ip":"18.207.158.180","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"108ms"},"msg":"","time":"2019-05-23T05:19:10.113Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"b9f4f150-7d1a-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"18.207.158.180","x-forwarded-proto":"https","x-real-ip":"18.207.158.180","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-47NCgp5keXi8Gqkar7teP0Bg134\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"92ms"},"msg":"","time":"2019-05-23T05:22:15.490Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"da2f5eb0-7d1a-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/images/upload/","method":"POST","originalUrl":"/ghost/api/v2/admin/images/upload/","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"42530","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"multipart/form-data; boundary=----WebKitFormBoundaryrDAD0hwQ9Jx00WoA","accept":"text/plain, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"purpose":"image"},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","content-type":"application/json; charset=utf-8","content-length":"89","etag":"W/\"59-p3vaRdmHLmrQ4g7c5I77fYGVE2s\""},"statusCode":201,"responseTime":"137ms"},"msg":"","time":"2019-05-23T05:23:09.607Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"dc1ef9b0-7d1a-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4185","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image.png\",\"caption\":\"Observer Design\"}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-22T17:06:16.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-22T16:38:30.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-22T16:38:30.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"146b-ZKHF9BqrIP0iIHYxrl+O9NOxOYw\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"208ms"},"msg":"","time":"2019-05-23T05:23:12.926Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"e2bd4fb0-7d1a-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4208","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image.png\",\"caption\":\"Observer Design\"}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:23:12.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"148c-amMwvw7uQ23zkh6HmQr6JdKykFk\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"138ms"},"msg":"","time":"2019-05-23T05:23:23.959Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"e7ace440-7d1a-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4236","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n观察","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image.png\",\"caption\":\"Observer Design\"}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订阅订单状态\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:23:23.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"14b0-Z3+CO4SLGFlDJdeZV+qLs9HjnME\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"123ms"},"msg":"","time":"2019-05-23T05:23:32.225Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"ef738da0-7d1a-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4257","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n观察订阅订单状态","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image.png\",\"caption\":\"Observer Design\"}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订阅订单状态的\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:23:32.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"14b6-rBagOeOS6mBFAS2/L2X1Jn6/XHo\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"142ms"},"msg":"","time":"2019-05-23T05:23:45.292Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f201b290-7d1a-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4272","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n观察订阅订单状态的","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image.png\",\"caption\":\"Observer Design\"}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订阅订单状态的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:23:45.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"14ce-h1ysKH+a5gOjENwWLTNnueN1XY8\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"154ms"},"msg":"","time":"2019-05-23T05:23:49.591Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f7ff5bc0-7d1a-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4285","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n观察订阅订单状态的生命周期","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image.png\",\"caption\":\"Observer Design\"}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:23:49.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"14c3-uJ3Aox3kEv06jfFpYGKxBYwO2pI\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"134ms"},"msg":"","time":"2019-05-23T05:23:59.624Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"09a7c650-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/images/upload/","method":"POST","originalUrl":"/ghost/api/v2/admin/images/upload/","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"29179","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"multipart/form-data; boundary=----WebKitFormBoundaryReHL4CBf1BnCgvrj","accept":"text/plain, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"purpose":"image"},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","content-type":"application/json; charset=utf-8","content-length":"89","etag":"W/\"59-lY0ehO4kHs3pKGO5Qy5HnO20Zx0\""},"statusCode":201,"responseTime":"104ms"},"msg":"","time":"2019-05-23T05:24:29.216Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"0b89a5b0-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4362","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n观察订单的生命周期","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image.png\",\"caption\":\"Observer Design\"}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\"}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[10,2],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:23:59.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1508-EogQH5GmRLEs41YcG2H74m6/l4c\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"108ms"},"msg":"","time":"2019-05-23T05:24:32.377Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"0ebbd2d0-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4275","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n观察订单的生命周期","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:24:32.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"14c5-RpCKubV+GkyF5Df8s1PNbaxd2zQ\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"117ms"},"msg":"","time":"2019-05-23T05:24:37.750Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"1b61e420-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4301","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n观察订单的生命周期","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[1,\"p\",[]],[1,\"p\",[]],[10,2],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:24:37.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"14e7-IMqSz3iMjZRNI5p+r6JWnH+DYGE\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"112ms"},"msg":"","time":"2019-05-23T05:24:58.965Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"1f121ae0-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4315","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n\n\n\n观察订单的生命周期","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"p\",[]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:24:58.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"14fc-FJlKTK/S9W2vdkMKAkkBxmDRrAI\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"212ms"},"msg":"","time":"2019-05-23T05:25:05.253Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"214e9d60-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4343","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"p\",[]],[1,\"p\",[]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:25:05.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1509-fkZFIT7JwffvVWQZhzXCiyUk6BY\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"145ms"},"msg":"","time":"2019-05-23T05:25:08.938Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"23a362d0-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4365","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"p\",[[0,[],0,\"观察者\"]]],[1,\"p\",[]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:25:08.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"151f-UGe62Yt1MP4aymQQyR0Rqz/cxak\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"101ms"},"msg":"","time":"2019-05-23T05:25:12.805Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"27539990-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4377","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"p\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:25:12.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"152b-WtHM3OxQffrnNHAnEZkqMfF9iEk\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"104ms"},"msg":"","time":"2019-05-23T05:25:18.996Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"289c9450-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4386","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:25:18.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1534-BAQoZoccXtYlmJvFkGkSYM0TZkI\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"142ms"},"msg":"","time":"2019-05-23T05:25:21.191Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"2eff8f00-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4402","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:25:21.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1544-KEjYmz4JNasIiAKbT+CQ8KaMVM0\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"105ms"},"msg":"","time":"2019-05-23T05:25:31.869Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"32cc2760-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4420","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:25:31.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1556-pHXjuHcQc0FUegNIzMa4D51mprs\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"127ms"},"msg":"","time":"2019-05-23T05:25:38.264Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"32ed9210-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4420","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:25:38.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1556-pHXjuHcQc0FUegNIzMa4D51mprs\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"87ms"},"msg":"","time":"2019-05-23T05:25:38.444Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"347f55a0-7d1b-11e9-9c14-5974b6bdc985","userId":null},"url":"/p/659366bf-1709-424e-9e03-eb11322b09df/","method":"GET","originalUrl":"/p/659366bf-1709-424e-9e03-eb11322b09df/","params":{"uuid":"659366bf-1709-424e-9e03-eb11322b09df"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","upgrade-insecure-requests":"1","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"6248-Cx0KaoEfO5Xaqj62XFbdb+8uXwk\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"18ms"},"msg":"","time":"2019-05-23T05:25:41.006Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"34b5a7e0-7d1b-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/05/image-2.png","method":"GET","originalUrl":"/content/images/2019/05/image-2.png","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/p/659366bf-1709-424e-9e03-eb11322b09df/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 23 May 2019 05:24:29 GMT","etag":"W/\"50ac-16ae325d795\"","content-type":"image/png","content-length":20652},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2019-05-23T05:25:41.345Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"34b6e060-7d1b-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/05/image-1.png","method":"GET","originalUrl":"/content/images/2019/05/image-1.png","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/p/659366bf-1709-424e-9e03-eb11322b09df/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 23 May 2019 05:23:09 GMT","etag":"W/\"6036-16ae324a0a1\"","content-type":"image/png","content-length":24630},"statusCode":200,"responseTime":"1ms"},"msg":"","time":"2019-05-23T05:25:41.352Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"34c1dce0-7d1b-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w30/2019/03/----_20190325174953.png","method":"GET","originalUrl":"/content/images/size/w30/2019/03/----_20190325174953.png","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/p/659366bf-1709-424e-9e03-eb11322b09df/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Mon, 25 Mar 2019 11:06:30 GMT","etag":"W/\"2f2-169b487c568\"","content-type":"image/png","content-length":754},"statusCode":200,"responseTime":"25ms"},"msg":"","time":"2019-05-23T05:25:41.448Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"3613d850-7d1b-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","upgrade-insecure-requests":"1","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3","referer":"https://lancexlab.cn/p/659366bf-1709-424e-9e03-eb11322b09df/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8","if-none-match":"W/\"1491b-br+IalD3BbWlsloaRZYyEhhW77A\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","etag":"W/\"1491b-br+IalD3BbWlsloaRZYyEhhW77A\""},"statusCode":304,"responseTime":"178ms"},"msg":"","time":"2019-05-23T05:25:43.816Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"3654d8f0-7d1b-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w1000/2019/04/201904211-25-43.png","method":"GET","originalUrl":"/content/images/size/w1000/2019/04/201904211-25-43.png","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8","range":"bytes=360448-360448","if-range":"W/\"ea85d-169dc153109\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Tue, 02 Apr 2019 03:26:10 GMT","etag":"W/\"ea85d-169dc153109\"","content-type":"image/png","content-range":"bytes 360448-360448/960605","content-length":1},"statusCode":206,"responseTime":"21ms"},"msg":"","time":"2019-05-23T05:25:44.086Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"36515680-7d1b-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w1000/2019/04/201904416-25-08.png","method":"GET","originalUrl":"/content/images/size/w1000/2019/04/201904416-25-08.png","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8","range":"bytes=663267-663267","if-range":"W/\"e6196-169e77518df\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 04 Apr 2019 08:26:44 GMT","etag":"W/\"e6196-169e77518df\"","content-type":"image/png","content-range":"bytes 663267-663267/942486","content-length":1},"statusCode":206,"responseTime":"53ms"},"msg":"","time":"2019-05-23T05:25:44.095Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"3661aa30-7d1b-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w1000/2019/04/201904219-27-11.png","method":"GET","originalUrl":"/content/images/size/w1000/2019/04/201904219-27-11.png","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8","range":"bytes=502758-502758","if-range":"W/\"eaa17-169ddd0b929\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Tue, 02 Apr 2019 11:30:37 GMT","etag":"W/\"eaa17-169ddd0b929\"","content-type":"image/png","content-range":"bytes 502758-502758/961047","content-length":1},"statusCode":206,"responseTime":"16ms"},"msg":"","time":"2019-05-23T05:25:44.164Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"36802eb0-7d1b-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w1000/2019/03/redis-micro-logo.png","method":"GET","originalUrl":"/content/images/size/w1000/2019/03/redis-micro-logo.png","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8","range":"bytes=196323-196323","if-range":"W/\"35c3f-169b80f4525\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Tue, 26 Mar 2019 03:33:22 GMT","etag":"W/\"35c3f-169b80f4525\"","content-type":"image/png","content-range":"bytes 196323-196323/220223","content-length":1},"statusCode":206,"responseTime":"19ms"},"msg":"","time":"2019-05-23T05:25:44.367Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"367d6f90-7d1b-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w1000/2019/04/201904219-27-11.png","method":"GET","originalUrl":"/content/images/size/w1000/2019/04/201904219-27-11.png","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8","range":"bytes=502758-961046","if-range":"W/\"eaa17-169ddd0b929\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Tue, 02 Apr 2019 11:30:37 GMT","etag":"W/\"eaa17-169ddd0b929\"","content-type":"image/png","content-range":"bytes 502758-961046/961047","content-length":458289},"statusCode":206,"responseTime":"47ms"},"msg":"","time":"2019-05-23T05:25:44.377Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"3674bd00-7d1b-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w1000/2019/04/201904211-25-43.png","method":"GET","originalUrl":"/content/images/size/w1000/2019/04/201904211-25-43.png","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8","range":"bytes=360448-960604","if-range":"W/\"ea85d-169dc153109\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Tue, 02 Apr 2019 03:26:10 GMT","etag":"W/\"ea85d-169dc153109\"","content-type":"image/png","content-range":"bytes 360448-960604/960605","content-length":600157},"statusCode":206,"responseTime":"108ms"},"msg":"","time":"2019-05-23T05:25:44.381Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"3682edd0-7d1b-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w1000/2019/04/201904416-25-08.png","method":"GET","originalUrl":"/content/images/size/w1000/2019/04/201904416-25-08.png","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8","range":"bytes=663267-942485","if-range":"W/\"e6196-169e77518df\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 04 Apr 2019 08:26:44 GMT","etag":"W/\"e6196-169e77518df\"","content-type":"image/png","content-range":"bytes 663267-942485/942486","content-length":279219},"statusCode":206,"responseTime":"60ms"},"msg":"","time":"2019-05-23T05:25:44.426Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"375e0b90-7d1b-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w1000/2019/03/redis-micro-logo.png","method":"GET","originalUrl":"/content/images/size/w1000/2019/03/redis-micro-logo.png","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8","range":"bytes=196323-220222","if-range":"W/\"35c3f-169b80f4525\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Tue, 26 Mar 2019 03:33:22 GMT","etag":"W/\"35c3f-169b80f4525\"","content-type":"image/png","content-range":"bytes 196323-220222/220223","content-length":23900},"statusCode":206,"responseTime":"13ms"},"msg":"","time":"2019-05-23T05:25:45.814Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"44fb9c40-7d1b-11e9-9c14-5974b6bdc985","userId":null},"url":"/favicon.png","method":"GET","originalUrl":"/favicon.png","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","content-type":"image/png","content-length":22234,"etag":"\"b588a0bc9e25c8ee42bc7deb77f9a0c9\"","cache-control":"public, max-age=86400"},"statusCode":200,"responseTime":"25ms"},"msg":"","time":"2019-05-23T05:26:08.672Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4aff5ff0-7d1b-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w100/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","method":"GET","originalUrl":"/content/images/size/w100/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","params":{},"headers":{"x-forwarded-for":"207.46.13.118","x-forwarded-proto":"https","x-real-ip":"207.46.13.118","host":"www.lancexlab.cn","connection":"close","cache-control":"no-cache","pragma":"no-cache","accept":"*/*","accept-encoding":"gzip, deflate","from":"bingbot(at)microsoft.com","user-agent":"Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm)"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Mon, 25 Mar 2019 23:29:53 GMT","etag":"W/\"e43-169b7305ac3\"","content-type":"image/jpeg","content-length":3651},"statusCode":200,"responseTime":"18ms"},"msg":"","time":"2019-05-23T05:26:18.755Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"5158e4c0-7d1b-11e9-9c14-5974b6bdc985","userId":null},"url":"/chain/","method":"GET","originalUrl":"/chain/","params":{"slug":"chain"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","upgrade-insecure-requests":"1","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3","referer":"https://lancexlab.cn/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"c646-4qPrRbcKBrLy74pt6vO1UhtoriI\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"97ms"},"msg":"","time":"2019-05-23T05:26:29.487Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"517b60e0-7d1b-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/04/image-82.png","method":"GET","originalUrl":"/content/images/2019/04/image-82.png","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/chain/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 25 Apr 2019 05:52:46 GMT","etag":"W/\"8310-16a530dad16\"","content-type":"image/png","content-length":33552},"statusCode":200,"responseTime":"52ms"},"msg":"","time":"2019-05-23T05:26:29.668Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"517bd610-7d1b-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/04/image-83.png","method":"GET","originalUrl":"/content/images/2019/04/image-83.png","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/chain/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 25 Apr 2019 06:06:46 GMT","etag":"W/\"5223-16a531a7f21\"","content-type":"image/png","content-length":21027},"statusCode":200,"responseTime":"67ms"},"msg":"","time":"2019-05-23T05:26:29.685Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"519c2f50-7d1b-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w600/2019/04/empathy-group-pixabay.png","method":"GET","originalUrl":"/content/images/size/w600/2019/04/empathy-group-pixabay.png","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/chain/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Wed, 17 Apr 2019 15:00:24 GMT","etag":"W/\"22129-16a2bd02cd6\"","content-type":"image/png","content-length":139561},"statusCode":200,"responseTime":"33ms"},"msg":"","time":"2019-05-23T05:26:29.864Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"689e13d0-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4414","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:25:38.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1550-SNVWO7CBCdyhSWLqbuvXs63rt/8\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"169ms"},"msg":"","time":"2019-05-23T05:27:08.600Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"6ed78d80-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4432","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:27:08.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1562-09aAL+2dzkCcRC7gZrOMug8CBj0\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"143ms"},"msg":"","time":"2019-05-23T05:27:19.017Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"70fcb770-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4438","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:27:18.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1568-9hi7fEcVkD7a/4AVzV7NPZJjdFU\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"131ms"},"msg":"","time":"2019-05-23T05:27:22.604Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"75ff10b0-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4450","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:27:22.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1574-JZZTfcgWDlQO6+UG+uOSXlHbCJg\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"135ms"},"msg":"","time":"2019-05-23T05:27:31.013Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"77864cf0-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4459","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:27:30.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"157d-3nD3j9svc4l+Q57wyhdwfalpi/8\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"128ms"},"msg":"","time":"2019-05-23T05:27:33.570Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"7c16f8a0-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4465","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，订单\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:27:33.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1583-liNZ2ua6Ow3CKX6hXF5fTI7kJ3Y\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"166ms"},"msg":"","time":"2019-05-23T05:27:41.268Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"7f09f9e0-7d1b-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"207.46.13.108","x-forwarded-proto":"https","x-real-ip":"207.46.13.108","host":"lancexlab.cn","connection":"close","cache-control":"no-cache","pragma":"no-cache","accept":"*/*","accept-encoding":"gzip, deflate","from":"bingbot(at)microsoft.com","user-agent":"Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm)"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"1491b-br+IalD3BbWlsloaRZYyEhhW77A\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"316ms"},"msg":"","time":"2019-05-23T05:27:46.364Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"7f04f0d0-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4459","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:27:41.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"157d-v9Be76wZ8+lQH0MN+MhNe+x/xHc\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"418ms"},"msg":"","time":"2019-05-23T05:27:46.434Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"845235c0-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4474","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:27:46.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"158c-iw3HKytDPo6L40jsidyh6PUkwNs\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"113ms"},"msg":"","time":"2019-05-23T05:27:55.024Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"866d9bb0-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4480","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:27:54.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1592-unwqTzOm/vUJ/Fuyov/Xm72nkms\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"111ms"},"msg":"","time":"2019-05-23T05:27:58.557Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"9019f500-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4507","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:27:58.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"15ad-eMsV7xwPIEyP0mGZb39U3j76wOU\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"111ms"},"msg":"","time":"2019-05-23T05:28:14.793Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"94db9bc0-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4516","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:28:14.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"15b6-UxCrm6gaEghPYI4QoBbijO2d25U\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"124ms"},"msg":"","time":"2019-05-23T05:28:22.779Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"980bf420-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4531","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:28:22.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"15c5-BE+4xIQGqNXC2HGHqcx+Vxx4zZ8\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"127ms"},"msg":"","time":"2019-05-23T05:28:28.131Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"9db95a70-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4552","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:28:28.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"15da-e0a6SMGa10q6ybzQLZIn4BvS8O8\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"107ms"},"msg":"","time":"2019-05-23T05:28:37.639Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"a5376210-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4570","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:28:37.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"15ec-qvGuwyVEV5tMuXB18U5xq8/e5ZM\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"119ms"},"msg":"","time":"2019-05-23T05:28:50.220Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"abf463a0-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4600","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:28:50.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"160a-b8RXv0l0kDpIVpAFF1D4NmKCjpo\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"220ms"},"msg":"","time":"2019-05-23T05:29:01.627Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"b2091740-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4621","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:29:01.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"161f-adkGv+7gJI9//lL/FznPcLUGu20\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"128ms"},"msg":"","time":"2019-05-23T05:29:11.736Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"b4db4a10-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4627","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:29:11.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1625-M5znQkogEQE6/OqeI21vujBbebw\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"121ms"},"msg":"","time":"2019-05-23T05:29:16.462Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"bb35e050-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4636","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:29:16.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"162e-/C4xs80OJR9LiH6rqeiFM3lJXLU\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"113ms"},"msg":"","time":"2019-05-23T05:29:27.113Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"bec23b60-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4642","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:29:27.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1634-sKiOldvsrHkIMW3jeS2vJO2qEsU\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"114ms"},"msg":"","time":"2019-05-23T05:29:33.066Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"c1ed8ab0-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4654","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:29:33.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1640-vt1Ko8ZxaLw044HSmkJvpbAOIrY\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"186ms"},"msg":"","time":"2019-05-23T05:29:38.460Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"c73c2f30-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4669","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:29:38.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"164f-dY8wwcbgWVGbGg+J3x9ENnfDgC4\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"103ms"},"msg":"","time":"2019-05-23T05:29:47.284Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"c9c30120-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4672","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:29:47.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1652-2XJijNXUWj7yJxxULZzcFeEkc6s\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"130ms"},"msg":"","time":"2019-05-23T05:29:51.543Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"d4735cf0-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4690","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:29:51.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1664-8lXs8V9jusrlOR7zislZQjZFK94\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"148ms"},"msg":"","time":"2019-05-23T05:30:09.496Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"e41967d0-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4756","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:30:09.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"16a6-77LZN6fbnm4rACpMmZpQ48Vti+s\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"114ms"},"msg":"","time":"2019-05-23T05:30:35.715Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"e9f494e0-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.23.205.121","x-forwarded-proto":"https","x-real-ip":"52.23.205.121","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-VOa2bXxuKuSiRe/FWAfGkNUhLAc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"150ms"},"msg":"","time":"2019-05-23T05:30:45.573Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"ee368450-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4783","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:30:35.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"16c1-e/vrjnKS9fm/5Y6s4oa3tNXyhyQ\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"156ms"},"msg":"","time":"2019-05-23T05:30:52.724Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f56c8670-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4795","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:30:52.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"16cd-ria91zvJ+FTwZE4Yt+rWRlolW1g\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"159ms"},"msg":"","time":"2019-05-23T05:31:04.825Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"fc308ce0-7d1b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4814","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:31:04.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"16e0-ERFJG4gHXGmN39Iu1O+KnGhMWII\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"162ms"},"msg":"","time":"2019-05-23T05:31:16.178Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"0869f9b0-7d1c-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4836","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"p\",[[0,[],0,\"观察者\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:31:16.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"16f6-KEgiTAag8V2qFVnzAiyWJiUqPHs\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"138ms"},"msg":"","time":"2019-05-23T05:31:36.663Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"0c1cef90-7d1c-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4848","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"p\",[[0,[],0,\"观察者模式设计\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:31:36.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1702-xJkrNa+ffaujBmrb4NxuPTLvQzw\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"185ms"},"msg":"","time":"2019-05-23T05:31:42.917Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"0f2092a0-7d1c-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4857","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:31:42.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"170b-ddMfeTMvvgjaS+pIollscsHUS98\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"145ms"},"msg":"","time":"2019-05-23T05:31:47.933Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"1127ad40-7d1c-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4870","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:31:47.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1718-tDRxZVfHLonvJ3yddHhsbTJFW6M\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"146ms"},"msg":"","time":"2019-05-23T05:31:51.337Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"5eb669c0-7d1c-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.236.42.39","x-forwarded-proto":"https","x-real-ip":"54.236.42.39","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-VOa2bXxuKuSiRe/FWAfGkNUhLAc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"78ms"},"msg":"","time":"2019-05-23T05:34:01.387Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"efa31730-7d1c-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.23.205.121","x-forwarded-proto":"https","x-real-ip":"52.23.205.121","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-VOa2bXxuKuSiRe/FWAfGkNUhLAc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"106ms"},"msg":"","time":"2019-05-23T05:38:04.559Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"e34515f0-7d1d-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.236.42.39","x-forwarded-proto":"https","x-real-ip":"54.236.42.39","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-VOa2bXxuKuSiRe/FWAfGkNUhLAc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"129ms"},"msg":"","time":"2019-05-23T05:44:53.331Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"01fd5020-7d1e-11e9-9c14-5974b6bdc985","userId":null},"url":"/robots.txt","method":"GET","originalUrl":"/robots.txt","params":{},"headers":{"x-forwarded-for":"203.208.60.36","x-forwarded-proto":"https","x-real-ip":"203.208.60.36","host":"lancexlab.cn","connection":"close","accept":"text/plain,text/html,*/*","user-agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","accept-encoding":"gzip,deflate,br"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","content-type":"text/plain","content-length":88,"etag":"\"f15f756fcf0b8854e4d47b134faf739c\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"1ms"},"msg":"","time":"2019-05-23T05:45:44.741Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"75b444b0-7d1e-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.23.205.121","x-forwarded-proto":"https","x-real-ip":"52.23.205.121","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-VOa2bXxuKuSiRe/FWAfGkNUhLAc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"76ms"},"msg":"","time":"2019-05-23T05:48:58.953Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"357d19c0-7d1f-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/images/upload/","method":"POST","originalUrl":"/ghost/api/v2/admin/images/upload/","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"41839","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"multipart/form-data; boundary=----WebKitFormBoundary39Y4tzSxEta73Ym6","accept":"text/plain, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"purpose":"image"},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","content-type":"application/json; charset=utf-8","content-length":"89","etag":"W/\"59-F0zE6q1m1NTkKR4MWfdtAJP5EkY\""},"statusCode":201,"responseTime":"108ms"},"msg":"","time":"2019-05-23T05:54:20.746Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"376561c0-7d1f-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4959","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-3.png\"}],[\"hr\",{}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[10,5],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:31:51.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"175d-hxPPs4iNuUzS2JLkfPzdzWZuOvA\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"164ms"},"msg":"","time":"2019-05-23T05:54:24.004Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"3cdb6460-7d1f-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4870","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-3.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:54:23.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1718-HIGx8deH6aLBiMFTMBYDXEW3TuM\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"129ms"},"msg":"","time":"2019-05-23T05:54:33.130Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"3cf8fe80-7d1f-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4870","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-3.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:54:33.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1718-HIGx8deH6aLBiMFTMBYDXEW3TuM\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"105ms"},"msg":"","time":"2019-05-23T05:54:33.299Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4fb6d0b0-7d1f-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.23.205.121","x-forwarded-proto":"https","x-real-ip":"52.23.205.121","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-VOa2bXxuKuSiRe/FWAfGkNUhLAc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"102ms"},"msg":"","time":"2019-05-23T05:55:04.739Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4c31ac20-7d20-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.23.205.121","x-forwarded-proto":"https","x-real-ip":"52.23.205.121","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-VOa2bXxuKuSiRe/FWAfGkNUhLAc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"96ms"},"msg":"","time":"2019-05-23T06:02:08.323Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"82469500-7d20-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/05/image-3.png","method":"GET","originalUrl":"/content/images/2019/05/image-3.png","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 23 May 2019 05:54:20 GMT","etag":"W/\"6100-16ae3412dc2\"","content-type":"image/png","content-length":24832},"statusCode":200,"responseTime":"3ms"},"msg":"","time":"2019-05-23T06:03:38.966Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"82647d40-7d20-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/images/upload/","method":"POST","originalUrl":"/ghost/api/v2/admin/images/upload/","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"41839","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"multipart/form-data; boundary=----WebKitFormBoundary9aLX1Rl8PLpjtZWk","accept":"text/plain, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"purpose":"image"},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","content-type":"application/json; charset=utf-8","content-length":"89","etag":"W/\"59-POi4EJEDjVL4sxD+XnTKrtHQ604\""},"statusCode":201,"responseTime":"95ms"},"msg":"","time":"2019-05-23T06:03:39.252Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"82f8f510-7d20-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/images/upload/","method":"POST","originalUrl":"/ghost/api/v2/admin/images/upload/","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"41839","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"multipart/form-data; boundary=----WebKitFormBoundaryFShq0oYd1MBB3xCZ","accept":"text/plain, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"purpose":"image"},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","content-type":"application/json; charset=utf-8","content-length":"89","etag":"W/\"59-gzcM5JRPhPAmQAGmS9S92Rzx7sQ\""},"statusCode":201,"responseTime":"92ms"},"msg":"","time":"2019-05-23T06:03:40.222Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"833f4ce0-7d20-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/images/upload/","method":"POST","originalUrl":"/ghost/api/v2/admin/images/upload/","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"41839","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"multipart/form-data; boundary=----WebKitFormBoundary8WaBKtfAivWBBz6p","accept":"text/plain, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"purpose":"image"},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","content-type":"application/json; charset=utf-8","content-length":"89","etag":"W/\"59-pW4jPQHV53LxIpKQL5ihLsT8xRA\""},"statusCode":201,"responseTime":"89ms"},"msg":"","time":"2019-05-23T06:03:40.681Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"83af73d0-7d20-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/images/upload/","method":"POST","originalUrl":"/ghost/api/v2/admin/images/upload/","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"41839","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"multipart/form-data; boundary=----WebKitFormBoundaryuh73pm5AabCPYNBK","accept":"text/plain, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"purpose":"image"},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","content-type":"application/json; charset=utf-8","content-length":"89","etag":"W/\"59-LlAW2Q4TE9CUMj++DjKtBv+1i5w\""},"statusCode":201,"responseTime":"100ms"},"msg":"","time":"2019-05-23T06:03:41.426Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"83fb70f0-7d20-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/images/upload/","method":"POST","originalUrl":"/ghost/api/v2/admin/images/upload/","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"41839","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"multipart/form-data; boundary=----WebKitFormBoundary6vcyLxstCzSlM5jK","accept":"text/plain, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"purpose":"image"},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","content-type":"application/json; charset=utf-8","content-length":"89","etag":"W/\"59-T//sTW3kOG3XKH5IJGSaCkyfwTU\""},"statusCode":201,"responseTime":"106ms"},"msg":"","time":"2019-05-23T06:03:41.930Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"85e00f70-7d20-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4959","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-8.png\"}],[\"hr\",{}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[10,5],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T05:54:33.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"175d-o1n1e/di3DELraRECxg7dSZX/mY\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"160ms"},"msg":"","time":"2019-05-23T06:03:45.161Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"885666a0-7d20-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4870","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:03:45.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1718-x/rjwAPGZKXEuJDWCnK00ozok+4\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"120ms"},"msg":"","time":"2019-05-23T06:03:49.252Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"93895ff0-7d20-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/images/upload/","method":"POST","originalUrl":"/ghost/api/v2/admin/images/upload/","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"41487","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"multipart/form-data; boundary=----WebKitFormBoundaryktrlM4AckQRx8xBn","accept":"text/plain, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"purpose":"image"},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","content-type":"application/json; charset=utf-8","content-length":"89","etag":"W/\"59-f9F98ndBFmbiF8/dKwT7lkn0MP8\""},"statusCode":201,"responseTime":"102ms"},"msg":"","time":"2019-05-23T06:04:08.023Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"956c9ee0-7d20-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4959","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"观察订单的生命周期\"}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-9.png\"}],[\"hr\",{}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[10,5],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:03:49.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"175d-vS7LvSw7KErnH0NunYe8UhUUmcA\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"173ms"},"msg":"","time":"2019-05-23T06:04:11.261Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"9753ae60-7d20-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4932","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-1.png\",\"caption\":\"\"}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-9.png\"}],[\"hr\",{}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[10,5],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:04:11.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1742-HDtIPp8jLcFWMCR1urZSh6W6fgM\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"118ms"},"msg":"","time":"2019-05-23T06:04:14.400Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"9a8b0ba0-7d20-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4870","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-9.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:04:14.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1718-WEiq6s7wTns4ZcAZIZsGaxWyhpQ\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"127ms"},"msg":"","time":"2019-05-23T06:04:19.803Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"9d51f3d0-7d20-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4870","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-9.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:04:19.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1718-WEiq6s7wTns4ZcAZIZsGaxWyhpQ\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"93ms"},"msg":"","time":"2019-05-23T06:04:24.429Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"a2f9dbe0-7d20-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.81.15.76","x-forwarded-proto":"https","x-real-ip":"3.81.15.76","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-VOa2bXxuKuSiRe/FWAfGkNUhLAc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"71ms"},"msg":"","time":"2019-05-23T06:04:33.894Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"ad11ef50-7d20-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"14.17.21.58","x-forwarded-proto":"https","x-real-ip":"14.17.21.58","host":"www.lancexlab.cn","connection":"close","accept-encoding":"deflate, gzip","referer":"http://www.lancexlab.cn/","accept":"*/*","accept-language":"zh-cn","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 9_3_4 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13G35 QQ/6.5.3.410 V1_IPH_SQ_6.5.3_1_APP_A Pixel/750 Core/UIWebView NetType/2G Mem/117"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"1491b-br+IalD3BbWlsloaRZYyEhhW77A\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"271ms"},"msg":"","time":"2019-05-23T06:04:51.030Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"e762d430-7d20-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/images/upload/","method":"POST","originalUrl":"/ghost/api/v2/admin/images/upload/","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"40897","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"multipart/form-data; boundary=----WebKitFormBoundaryvLmBFLFw404jZZ59","accept":"text/plain, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"purpose":"image"},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","content-type":"application/json; charset=utf-8","content-length":"90","etag":"W/\"5a-NWMYrG1cZhwohcsY/KXdyAsf/9k\""},"statusCode":201,"responseTime":"124ms"},"msg":"","time":"2019-05-23T06:06:28.721Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"eb98dcc0-7d20-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4827","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\"}],[\"hr\",{}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:04:19.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"16ed-aJspcyg4gDT2sb6wRNX4vlO7vbo\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"156ms"},"msg":"","time":"2019-05-23T06:06:35.820Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"ed906700-7d20-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4871","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:06:35.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1719-mfKgtMXYBuJ4KaPZQNUtwwTHe3Y\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"156ms"},"msg":"","time":"2019-05-23T06:06:39.119Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"edb2e320-7d20-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4871","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:06:39.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1719-mfKgtMXYBuJ4KaPZQNUtwwTHe3Y\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"96ms"},"msg":"","time":"2019-05-23T06:06:39.284Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"62db4200-7d21-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.83.125.179","x-forwarded-proto":"https","x-real-ip":"54.83.125.179","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-VOa2bXxuKuSiRe/FWAfGkNUhLAc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"179ms"},"msg":"","time":"2019-05-23T06:09:55.928Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"48498a90-7d22-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"18.207.158.180","x-forwarded-proto":"https","x-real-ip":"18.207.158.180","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-VOa2bXxuKuSiRe/FWAfGkNUhLAc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"99ms"},"msg":"","time":"2019-05-23T06:16:20.766Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"e4a61340-7d22-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.23.205.121","x-forwarded-proto":"https","x-real-ip":"52.23.205.121","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-VOa2bXxuKuSiRe/FWAfGkNUhLAc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"97ms"},"msg":"","time":"2019-05-23T06:20:43.095Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"7e5d6c90-7d23-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.87.37.91","x-forwarded-proto":"https","x-real-ip":"3.87.37.91","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-VOa2bXxuKuSiRe/FWAfGkNUhLAc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"118ms"},"msg":"","time":"2019-05-23T06:25:01.009Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"2c329d40-7d24-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.81.15.76","x-forwarded-proto":"https","x-real-ip":"3.81.15.76","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-VOa2bXxuKuSiRe/FWAfGkNUhLAc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"96ms"},"msg":"","time":"2019-05-23T06:29:52.630Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f999ed60-7d24-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.147.214.101","x-forwarded-proto":"https","x-real-ip":"54.147.214.101","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-VOa2bXxuKuSiRe/FWAfGkNUhLAc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"111ms"},"msg":"","time":"2019-05-23T06:35:37.255Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"a05c0d40-7d25-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"18.232.105.31","x-forwarded-proto":"https","x-real-ip":"18.232.105.31","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-VOa2bXxuKuSiRe/FWAfGkNUhLAc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"73ms"},"msg":"","time":"2019-05-23T06:40:16.990Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"fc7af7d0-7d25-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"18.232.105.31","x-forwarded-proto":"https","x-real-ip":"18.232.105.31","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-VOa2bXxuKuSiRe/FWAfGkNUhLAc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"90ms"},"msg":"","time":"2019-05-23T06:42:51.561Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"b156b630-7d26-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/images/upload/","method":"POST","originalUrl":"/ghost/api/v2/admin/images/upload/","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"28693","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"multipart/form-data; boundary=----WebKitFormBoundaryR2R9VfuiO3AtzpZv","accept":"text/plain, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"purpose":"image"},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","content-type":"application/json; charset=utf-8","content-length":"90","etag":"W/\"5a-YQkWbK9YuJWrfi6TMWOL0L2NY2A\""},"statusCode":201,"responseTime":"106ms"},"msg":"","time":"2019-05-23T06:47:55.007Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"b4510a70-7d26-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4961","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:06:39.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T05:23:09.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T05:23:09.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"175f-N5M0hAMtFRcP3j5v+4dZTEqk8f4\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"174ms"},"msg":"","time":"2019-05-23T06:48:00.075Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"b87511a0-7d26-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4961","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:47:59.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"175f-N5M0hAMtFRcP3j5v+4dZTEqk8f4\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"111ms"},"msg":"","time":"2019-05-23T06:48:06.957Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"bd54eec0-7d26-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"4979","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[[0,[],0,\"Order\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:47:59.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1771-HrkdgCny1cahf6lZH5d1oKD55Y4\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"157ms"},"msg":"","time":"2019-05-23T06:48:15.180Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"bfcec860-7d26-11e9-9c14-5974b6bdc985","userId":null},"url":"/codemirror/codemirror-fd157cf5e83a4eefb22a2df3562c6ae7.js","method":"GET","originalUrl":"/ghost/assets/codemirror/codemirror-fd157cf5e83a4eefb22a2df3562c6ae7.js","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"*/*","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Sat, 26 Oct 1985 08:15:00 GMT","etag":"W/\"35663-7438674ba0\"","content-type":"application/javascript; charset=UTF-8","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"73ms"},"msg":"","time":"2019-05-23T06:48:19.248Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"c197efa0-7d26-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"5018","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:48:15.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1798-+5k3OelbyQ6Cp82vBMLaNA9tw6A\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"147ms"},"msg":"","time":"2019-05-23T06:48:22.321Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"c9225350-7d26-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"5343","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:48:22.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"18dd-PcVQT7B7FRrjSUDyszsj8y5g+JQ\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"160ms"},"msg":"","time":"2019-05-23T06:48:34.983Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"dd27c0b0-7d26-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"5523","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:48:34.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1991-Rzn2PVvmMpf/qkmM8ZsEdXkRkP0\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"152ms"},"msg":"","time":"2019-05-23T06:49:08.565Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"e89ca500-7d26-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"5575","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:49:08.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"19c5-Ljm/uO4p7bSmDcYtXrw/yMVIfNQ\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"149ms"},"msg":"","time":"2019-05-23T06:49:27.784Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"ed95fd90-7d26-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"5948","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:49:27.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1b3a-dAz1jBNQRKctTfTacYSrGSEtCOo\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"146ms"},"msg":"","time":"2019-05-23T06:49:36.126Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f9499890-7d26-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"6018","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:49:36.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1b80-ZxBXVFSWjpNUKc0WaXnZF188Sas\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"156ms"},"msg":"","time":"2019-05-23T06:49:55.768Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"fc276420-7d26-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"6381","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:49:55.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1ceb-G06dkHXzl+y6VPcRz6W8SbHgimg\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"245ms"},"msg":"","time":"2019-05-23T06:50:00.666Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"047f9f20-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.81.15.76","x-forwarded-proto":"https","x-real-ip":"3.81.15.76","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-t0wgc9suvwSaQlG13weiIRfY1Bc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"73ms"},"msg":"","time":"2019-05-23T06:50:14.492Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"058a5860-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"6838","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:50:00.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1eb4-Arbt2+onph7cwn7E20PYkCn1G5k\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"135ms"},"msg":"","time":"2019-05-23T06:50:16.305Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"11ba9d70-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"6908","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:50:16.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"1efa-heB9V4OD3ryfRRBLG+cFzWbcNJg\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"126ms"},"msg":"","time":"2019-05-23T06:50:36.744Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"148185a0-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"7267","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:50:36.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"2061-sKTxRkxRX3FSpZXy/cPkI6onIpQ\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"350ms"},"msg":"","time":"2019-05-23T06:50:41.627Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"1cd04ac0-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"7316","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:50:41.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"2092-GljcRPUG5jJbASKn6IzwmtVSlCI\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"136ms"},"msg":"","time":"2019-05-23T06:50:55.351Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"20e20270-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"8546","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:50:55.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"2560-DwKQ5xOyAjLbc8NjhdQkz7aC3PI\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"134ms"},"msg":"","time":"2019-05-23T06:51:02.176Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"272c1df0-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"8607","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,13],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:51:02.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"259d-nEedVdtAzjdbdKN2J6KHbzhPhEw\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"148ms"},"msg":"","time":"2019-05-23T06:51:12.742Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"29c78950-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"9070","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,13],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:51:12.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"276c-2nqIvnCIVPggJPpNdQEhIG6NU40\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"150ms"},"msg":"","time":"2019-05-23T06:51:17.118Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"36993e80-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"9096","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,13],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:51:17.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"2786-DqCEja8lZ8D88hzY5zxv+z2EgeY\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"113ms"},"msg":"","time":"2019-05-23T06:51:38.588Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"3a5498d0-7d27-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/05/image-10.png","method":"GET","originalUrl":"/content/images/2019/05/image-10.png","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 23 May 2019 06:06:28 GMT","etag":"W/\"5e92-16ae34c4966\"","content-type":"image/png","content-length":24210},"statusCode":200,"responseTime":"3ms"},"msg":"","time":"2019-05-23T06:51:44.737Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"3a54e6f0-7d27-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/05/image-11.png","method":"GET","originalUrl":"/content/images/2019/05/image-11.png","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 23 May 2019 06:47:54 GMT","etag":"W/\"37bf-16ae3723976\"","content-type":"image/png","content-length":14271},"statusCode":200,"responseTime":"3ms"},"msg":"","time":"2019-05-23T06:51:44.739Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"3f683020-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"9128","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:51:38.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"27a6-u1aK+VgzfPPZQZB0nCqhdjjZ/Vg\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"119ms"},"msg":"","time":"2019-05-23T06:51:53.372Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"42a66b30-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"9505","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:51:53.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"291f-IYqyLVfObnatKrsgsAHwxi5q6+c\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"101ms"},"msg":"","time":"2019-05-23T06:51:58.794Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4d493270-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"10644","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:51:58.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"2d92-2VLV1COWemOeYN7Wlj6tKxffMiM\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"136ms"},"msg":"","time":"2019-05-23T06:52:16.676Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"54b1b640-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"10699","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:52:16.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"2dc9-5FTjx8yKScKH17WPWbMRAARk/h8\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"164ms"},"msg":"","time":"2019-05-23T06:52:29.132Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"59599370-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"10920","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[1,\"p\",[]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:52:29.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"2ea6-0sIhAqyiFiPq4gRZyEQpFxB7ZVw\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"212ms"},"msg":"","time":"2019-05-23T06:52:36.990Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"7b7f5610-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"18.232.105.31","x-forwarded-proto":"https","x-real-ip":"18.232.105.31","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"5d0aa-t0wgc9suvwSaQlG13weiIRfY1Bc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"85ms"},"msg":"","time":"2019-05-23T06:53:34.152Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"7e9b8a30-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"10974","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"p\",[[0,[],0,\"Jdk中观察者模式\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:52:36.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"2edc-x/sRAv4BGP6YzUha84VpV9h5l3Y\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"121ms"},"msg":"","time":"2019-05-23T06:53:39.406Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"847be760-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11463","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:53:39.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"30c5-gSrEI/tr2e9/VLC/W/O6eX9BjJA\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"120ms"},"msg":"","time":"2019-05-23T06:53:49.264Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"8ecb8590-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11489","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[1,\"p\",[]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:53:49.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"30df-JQUHVZNxbYPQ/mRr089wO0UIurI\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"113ms"},"msg":"","time":"2019-05-23T06:54:06.558Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"91facc80-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11492","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:54:06.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"30e2-DTDPEDY5h+zKHV8p9keD9imLjEM\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"115ms"},"msg":"","time":"2019-05-23T06:54:11.903Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"94b0c4c0-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11510","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order\"]]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:54:11.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"30f4-QTl8rdsQ8KRB7phEtz+IjR6yaQc\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"145ms"},"msg":"","time":"2019-05-23T06:54:16.480Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"9c161440-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11522","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者\"]]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:54:16.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"3100-wbS/1CldrM8yadeqodiVdqNMe+Q\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"118ms"},"msg":"","time":"2019-05-23T06:54:28.861Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"a2e9d220-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11537","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，\"]]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:54:28.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"310f-PCO89f4hX6SLhqv8lRznn4F0HNg\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"116ms"},"msg":"","time":"2019-05-23T06:54:40.313Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"acb217e0-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11578","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来\"]]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:54:40.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"3138-YvoKJTSCw0auhzEPAPGnRHpB86w\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"193ms"},"msg":"","time":"2019-05-23T06:54:56.803Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"aff31210-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11587","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来设计的\"]]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:54:56.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"3141-bD0t0Xypmgsb4Wy4fb+dtNvCTkM\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"161ms"},"msg":"","time":"2019-05-23T06:55:02.229Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"b59ecab0-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11602","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来设计的发布订阅\"]],[]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:55:02.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"3150-eSmfNUc/Za/SQ7Er4T1HzClwSfM\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"115ms"},"msg":"","time":"2019-05-23T06:55:11.697Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"bafbee20-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11620","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来设计的发布订阅\"]],[[0,[],0,\"Order\"]]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:55:11.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"3162-utu8IWZVqnd/xn493B8cLoluNAI\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"166ms"},"msg":"","time":"2019-05-23T06:55:20.748Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"c0200030-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11636","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来设计的发布订阅\"]],[[0,[],0,\"OrderUpdateManager：\"]]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:55:20.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"3172-Gvf+9LmDIh9S5f/pXrL5YXEurpk\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"149ms"},"msg":"","time":"2019-05-23T06:55:29.355Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"d15f96d0-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11662","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来设计的发布订阅\"]],[[0,[],0,\"OrderUpdateManager：Order状态维护对象，\"]]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:55:29.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"318c-r0fsxz3BuPDi/477TDzctRPmlhU\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"186ms"},"msg":"","time":"2019-05-23T06:55:58.330Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"d9a31150-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11692","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来设计的发布订阅\"]],[[0,[],0,\"OrderUpdateManager：Order状态维护对象，扮演即时通知的角色\"]],[]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:55:58.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"31aa-2UP33pST35yBIX2/fZEfi7OPPQA\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"139ms"},"msg":"","time":"2019-05-23T06:56:12.147Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"df7da220-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11716","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来设计的发布订阅\"]],[[0,[],0,\"OrderUpdateManager：Order状态维护对象，扮演即时通知的角色\"]],[[0,[],0,\"Observer：\"]]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:56:12.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"31c2-+wyRcRYG/b1q8nU7m9FUmKHBFBs\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"149ms"},"msg":"","time":"2019-05-23T06:56:21.977Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"e21479a0-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11725","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来设计的发布订阅\"]],[[0,[],0,\"OrderUpdateManager：Order状态维护对象，扮演即时通知的角色\"]],[[0,[],0,\"Observer：观察者\"]]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:56:21.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"31cb-XFicOpBo+e8hqqgjq9i1X6WaHyQ\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"140ms"},"msg":"","time":"2019-05-23T06:56:26.313Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"e5eb4b30-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11740","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来设计的发布订阅\"]],[[0,[],0,\"OrderUpdateManager：Order状态维护对象，扮演即时通知的角色\"]],[[0,[],0,\"Observer：观察者接口抽象，\"]]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:56:26.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"31da-TNPDjOkVen2zdPp9MQ8IbsjPemA\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"157ms"},"msg":"","time":"2019-05-23T06:56:32.772Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"e8792200-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11746","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来设计的发布订阅\"]],[[0,[],0,\"OrderUpdateManager：Order状态维护对象，扮演即时通知的角色\"]],[[0,[],0,\"Observer：观察者接口抽象，将其\"]]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:56:32.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"31e0-H6EkVkYU3dyqtVAxFOt2MedIHtA\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"124ms"},"msg":"","time":"2019-05-23T06:56:37.022Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"ebd9b220-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11761","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来设计的发布订阅\"]],[[0,[],0,\"OrderUpdateManager：Order状态维护对象，扮演即时通知的角色\"]],[[0,[],0,\"Observer：观察者接口抽象，将其实现类对象\"]]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:56:36.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"31ef-QHTPni5EpSnawBhmwBzW2qEOQl4\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"218ms"},"msg":"","time":"2019-05-23T06:56:42.784Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"eecadea0-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11761","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来设计的发布订阅\"]],[[0,[],0,\"OrderUpdateManager：Order状态维护对象，扮演即时通知的角色\"]],[[0,[],0,\"Observer：观察者接口抽象，将其实现类对象\"]]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:56:42.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"31ef-QHTPni5EpSnawBhmwBzW2qEOQl4\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"101ms"},"msg":"","time":"2019-05-23T06:56:47.601Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f14358b0-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11770","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来设计的发布订阅\"]],[[0,[],0,\"OrderUpdateManager：Order状态维护对象，扮演即时通知的角色\"]],[[0,[],0,\"Observer：观察者接口抽象，将其实现类对象注册与\"]]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:56:42.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"31f8-IX2Pmftip+BVzKLBcmiQaRz1tdI\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"149ms"},"msg":"","time":"2019-05-23T06:56:51.794Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f31a62a0-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11776","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来设计的发布订阅\"]],[[0,[],0,\"OrderUpdateManager：Order状态维护对象，扮演即时通知的角色\"]],[[0,[],0,\"Observer：观察者接口抽象，将其实现类对象注册与注销\"]]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:56:51.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"31fe-KP9tw9F3JrCVgPNTR9wNs3QCiM0\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"116ms"},"msg":"","time":"2019-05-23T06:56:54.849Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f9793ea0-7d27-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11785","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来设计的发布订阅\"]],[[0,[],0,\"OrderUpdateManager：Order状态维护对象，扮演即时通知的角色\"]],[[0,[],0,\"Observer：观察者接口抽象，将其实现类对象注册与注销绑定至\"]]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:56:54.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"3207-6gi9GJZPiz3KA+H1SYk5XjskhFQ\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"137ms"},"msg":"","time":"2019-05-23T06:57:05.558Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"01a316a0-7d28-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11806","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来设计的发布订阅\"]],[[0,[],0,\"OrderUpdateManager：Order状态维护对象，扮演即时通知的角色\"]],[[0,[],0,\"Observer：观察者接口抽象，将其实现类对象注册与注销绑定至OrderUpdateManager\"]],[]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:57:05.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"321c-sga3K66Yhz/xvvwGbpe5bISP4co\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"118ms"},"msg":"","time":"2019-05-23T06:57:19.236Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"098ab580-7d28-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11839","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来设计的发布订阅\"]],[[0,[],0,\"OrderUpdateManager：Order状态维护对象，扮演即时通知的角色\"]],[[0,[],0,\"Observer：观察者接口抽象，将其实现类对象注册与注销绑定至OrderUpdateManager\"]],[[0,[],0,\"DeliveredObserver：\"]]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:57:19.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"323d-cieSD7eMEfx9xHzBgfomMJCpL6Q\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"144ms"},"msg":"","time":"2019-05-23T06:57:32.526Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"0cc56e20-7d28-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11857","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来设计的发布订阅\"]],[[0,[],0,\"OrderUpdateManager：Order状态维护对象，扮演即时通知的角色\"]],[[0,[],0,\"Observer：观察者接口抽象，将其实现类对象注册与注销绑定至OrderUpdateManager\"]],[[0,[],0,\"DeliveredObserver：观察者实现，\"]]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:57:32.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"324f-RBQcNDGeVQ+4vAwtAmgG/FAYkEw\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"134ms"},"msg":"","time":"2019-05-23T06:57:37.932Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"163d7100-7d28-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11883","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来设计的发布订阅\"]],[[0,[],0,\"OrderUpdateManager：Order状态维护对象，扮演即时通知的角色\"]],[[0,[],0,\"Observer：观察者接口抽象，将其实现类对象注册与注销绑定至OrderUpdateManager\"]],[[0,[],0,\"DeliveredObserver：观察者实现，观察Order状态变更，\"]]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:57:37.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"3269-Ddqyb9E457RaiteliF2TY4e1mFg\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"212ms"},"msg":"","time":"2019-05-23T06:57:53.896Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"1a353810-7d28-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11898","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来设计的发布订阅\"]],[[0,[],0,\"OrderUpdateManager：Order状态维护对象，扮演即时通知的角色\"]],[[0,[],0,\"Observer：观察者接口抽象，将其实现类对象注册与注销绑定至OrderUpdateManager\"]],[[0,[],0,\"DeliveredObserver：观察者实现，观察Order状态变更，作出相应的\"]]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:57:53.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"3278-l9F+vYzuPBr3zmBswyx7ZCuG6Ys\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"125ms"},"msg":"","time":"2019-05-23T06:58:00.465Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"2138b880-7d28-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11897","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":null,"canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来设计的发布订阅\"]],[[0,[],0,\"OrderUpdateManager：Order状态维护对象，扮演即时通知的角色\"]],[[0,[],0,\"Observer：观察者接口抽象，将其实现类对象注册与注销绑定至OrderUpdateManager\"]],[[0,[],0,\"DeliveredObserver：观察者实现，观察Order状态变更，作出相应的应对事件\"]]]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:58:00.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"3277-Q0eLtPQk+edgxQyoevTFBDdwQj0\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"121ms"},"msg":"","time":"2019-05-23T06:58:12.229Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"370159b0-7d28-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"11987","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":"https://images.unsplash.com/photo-1558509825-97fd4feedd88?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来设计的发布订阅\"]],[[0,[],0,\"OrderUpdateManager：Order状态维护对象，扮演即时通知的角色\"]],[[0,[],0,\"Observer：观察者接口抽象，将其实现类对象注册与注销绑定至OrderUpdateManager\"]],[[0,[],0,\"DeliveredObserver：观察者实现，观察Order状态变更，作出相应的应对事件\"]]]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"draft","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:58:12.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/p/659366bf-1709-424e-9e03-eb11322b09df/","content-type":"application/json; charset=utf-8","etag":"W/\"330d-sDoHeAe0BPoKn23EHoB68rnjpwI\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"188ms"},"msg":"","time":"2019-05-23T06:58:48.842Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4376be10-7d28-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"12426","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":"https://images.unsplash.com/photo-1558509825-97fd4feedd88?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来设计的发布订阅\"]],[[0,[],0,\"OrderUpdateManager：Order状态维护对象，扮演即时通知的角色\"]],[[0,[],0,\"Observer：观察者接口抽象，将其实现类对象注册与注销绑定至OrderUpdateManager\"]],[[0,[],0,\"DeliveredObserver：观察者实现，观察Order状态变更，作出相应的应对事件\"]]]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":null,"slug":"observe-design-pattern-in-java","status":"published","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:58:48.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{"0":{"id":"5cb592d9cbb52007aa88ca68","name":"pattern","slug":"pattern","description":"23种设计模式结合Java编程实战分享","parent":null,"meta_title":null,"meta_description":null,"feature_image":"https://lancexlab.cn/content/images/2019/04/empathy-group-pixabay.png","visibility":"public","created_at":"2019-04-16T08:31:21.000Z","updated_at":"2019-04-16T10:10:06.000Z"}}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"3641-5U3NlsrJlOMjIt9CBDsg3/faGYY\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"119ms"},"msg":"","time":"2019-05-23T06:59:09.677Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"44f3e830-7d28-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/5ce57b5573e7b450e171317e/","method":"PUT","originalUrl":"/ghost/api/v2/admin/posts/5ce57b5573e7b450e171317e/","params":{"id":"5ce57b5573e7b450e171317e"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","content-length":"12448","origin":"https://lancexlab.cn","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{"posts":{"0":{"id":"5ce57b5573e7b450e171317e","created_at":"2019-05-22T16:39:49.000Z","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------","custom_excerpt":null,"featured":false,"feature_image":"https://images.unsplash.com/photo-1558509825-97fd4feedd88?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","canonical_url":null,"codeinjection_foot":null,"codeinjection_head":null,"custom_template":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"html":null,"locale":null,"meta_description":null,"meta_title":null,"mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-2.png\",\"caption\":\"Observer Design\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-10.png\",\"caption\":\"观察订单的生命周期\"}],[\"hr\",{}],[\"image\",{\"src\":\"https://lancexlab.cn/content/images/2019/05/image-11.png\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Order {\\n    public String id;\\n    public Status status;\\n\\n    public enum Status {\\n        RECEIVED,\\n        AWAIT_PAYMENT,\\n        PAYMENT_RECEIVED,\\n        PROCESSING,\\n        EXCEPTION,\\n        SHIPPED,\\n        DELIVERED\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic interface Observer {\\n    void observe(Event event);\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaymentNotifyObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"notify the order owner to pay for order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class PaidFinalsObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\\n            return;\\n        }\\n        System.out.println(\\\"user paid for order, notify finals to check bill\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class ReceivedPaymentObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\\n            return;\\n        }\\n        System.out.println(\\\"received the payment of order, notify to process the order\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class DeliveredObserver implements Observer {\\n    @Override\\n    public void observe(Event event) {\\n        if (event.preStatus != Order.Status.SHIPPED) {\\n            return;\\n        }\\n        System.out.println(\\\"order is delivered, notify use to check the package\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class OrderUpdateManager {\\n    private final List<Observer> observers = new ArrayList<>();\\n    private final Notifier notifier;\\n\\n    public OrderUpdateManager() {\\n        this.notifier = new Notifier(observers);\\n    }\\n\\n    public void register(Observer observer) {\\n        synchronized (observers) {\\n            observers.add(observer);\\n        }\\n    }\\n\\n    public void unregister(Observer observer) {\\n        synchronized (observers) {\\n            observers.remove(observer);\\n        }\\n    }\\n\\n    public void awaitPaidOrder(Order order) {\\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \\\"paid order\\\");\\n    }\\n\\n    public void receivedOrder(Order order) {\\n        notifier.notify(order, Order.Status.RECEIVED, \\\"await payment\\\");\\n    }\\n\\n    public void paidOrder(Order order) {\\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \\\"will process order\\\");\\n    }\\n\\n    public void delivered(Order order) {\\n        notifier.notify(order, Order.Status.SHIPPED, \\\"delivered\\\");\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class Event {\\n    public final Order order;\\n    public final Order.Status preStatus;\\n    public final String message;\\n\\n    public Event(Order order, Order.Status preStatus, String message) {\\n        this.order = order;\\n        this.preStatus = preStatus;\\n        this.message = message;\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\nimport java.util.List;\\n\\npublic class Notifier {\\n    private final List<Observer> observers;\\n\\n    public Notifier(List<Observer> observers) {\\n        this.observers = observers;\\n    }\\n\\n    public void notify(Order order, Order.Status preStatus, String subject) {\\n        for (Observer o : observers) {\\n            o.observe(new Event(order, preStatus, subject));\\n        }\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"package com.iblog.pattern.observe;\\n\\npublic class MockTest {\\n    public static void main(String[] args) {\\n        Order order = new Order();\\n        order.id = \\\"1\\\";\\n        order.status = Order.Status.RECEIVED;\\n\\n        OrderUpdateManager manager = new OrderUpdateManager();\\n        Observer observer1 = new PaymentNotifyObserver();\\n        Observer observer2 = new PaidFinalsObserver();\\n        Observer observer3 = new ReceivedPaymentObserver();\\n        Observer observer4 = new DeliveredObserver();\\n        manager.register(observer1);\\n        manager.register(observer2);\\n        manager.register(observer3);\\n        manager.register(observer4);\\n\\n        order.status = Order.Status.AWAIT_PAYMENT;\\n        manager.receivedOrder(order);\\n        order.status = Order.Status.PAYMENT_RECEIVED;\\n        manager.awaitPaidOrder(order);\\n        order.status = Order.Status.PROCESSING;\\n        manager.paidOrder(order);\\n        order.status = Order.Status.DELIVERED;\\n        manager.delivered(order);\\n    }\\n}\\n\"}],[\"code\",{\"code\":\"notify the order owner to pay for order\\nuser paid for order, notify finals to check bill\\nreceived the payment of order, notify to process the order\\norder is delivered, notify use to check the package\\n\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObserver.%E2%80%8Bhtml\",\"rel\",\"noopener\"]],[\"a\",[\"href\",\"https://docs.oracle.com/%E2%80%8Bjavase/%E2%80%8B8/%E2%80%8Bdocs/%E2%80%8Bapi/%E2%80%8Bjava/%E2%80%8Butil/%E2%80%8BObservable.%E2%80%8Bhtml\",\"rel\",\"noopener\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\"]]],[1,\"p\",[[0,[],0,\"观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\"]]],[1,\"p\",[[0,[],0,\"观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\"]]],[10,0],[1,\"blockquote\",[[0,[],0,\"什么时候使用观察者模式\"]]],[1,\"p\",[[0,[],0,\"在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\"]]],[10,1],[1,\"p\",[[0,[],0,\"首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\"]]],[10,2],[1,\"blockquote\",[[0,[],0,\"观察者模式案例\"]]],[1,\"p\",[[0,[],0,\"在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。\"]]],[10,3],[10,4],[1,\"blockquote\",[[0,[],0,\"观察者模式设计\"]]],[10,5],[3,\"ul\",[[[0,[],0,\"Order：观察者观察对象，案例围绕Order的内部状态变更来设计的发布订阅\"]],[[0,[],0,\"OrderUpdateManager：Order状态维护对象，扮演即时通知的角色\"]],[[0,[],0,\"Observer：观察者接口抽象，将其实现类对象注册与注销绑定至OrderUpdateManager\"]],[[0,[],0,\"DeliveredObserver：观察者实现，观察Order状态变更，作出相应的应对事件\"]]]],[1,\"p\",[[0,[],0,\"Order.java\"]]],[10,6],[1,\"p\",[[0,[],0,\"Observer.java\"]]],[10,7],[1,\"p\",[[0,[],0,\"PaymentNotifyObserver.java\"]]],[10,8],[1,\"p\",[[0,[],0,\"PaidFinalsObserver.java\"]]],[10,9],[1,\"p\",[[0,[],0,\"ReceivedPaymentObserver.java\"]]],[10,10],[1,\"p\",[[0,[],0,\"DeliveredObserver.java\"]]],[10,11],[1,\"p\",[[0,[],0,\"OrderUpdateManager.java\"]]],[10,12],[1,\"p\",[[0,[],0,\"Event.java\"]]],[10,13],[1,\"p\",[[0,[],0,\"Notifier.java\"]]],[10,14],[1,\"p\",[[0,[],0,\"MockTest.java\"]]],[10,15],[1,\"p\",[[0,[],0,\"输出:\"]]],[10,16],[10,17],[1,\"blockquote\",[[0,[],0,\"Jdk中观察者模式\"]]],[1,\"p\",[[0,[0],1,\"Observer Java Doc \"],[1,[],0,0],[0,[1],1,\"Observable Java Doc\"]]]]}","plaintext":null,"published_at":"2019-05-23T06:59:09.000Z","slug":"observe-design-pattern-in-java","status":"published","title":"Observer Design Pattern in Java","updated_at":"2019-05-23T06:59:09.000Z","authors":{"0":{"id":"1","name":"lance xu","slug":"lance","email":"13554225105@163.com","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"accessibility":"{\"nightShift\":false}","status":"active","locale":null,"meta_title":null,"meta_description":null,"last_seen":"2019-05-23T06:47:54.000Z","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-05-23T06:47:54.000Z","facebook":null,"twitter":null,"tour":"[\"getting-started\",\"using-the-editor\",\"featured-post\",\"upload-a-theme\"]","roles":{"0":{"id":"5c989f0d9819ed1e4cb98a8d","name":"Owner","description":"Blog Owner","created_at":"2019-03-25T09:27:41.000Z","updated_at":"2019-03-25T09:27:41.000Z"}}}},"published_by":null,"tags":{"0":{"id":"5cb592d9cbb52007aa88ca68","name":"pattern","slug":"pattern","description":"23种设计模式结合Java编程实战分享","parent":null,"meta_title":null,"meta_description":null,"feature_image":"https://lancexlab.cn/content/images/2019/04/empathy-group-pixabay.png","visibility":"public","created_at":"2019-04-16T08:31:21.000Z","updated_at":"2019-04-16T10:10:06.000Z"}}}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"https://lancexlab.cn","vary":"Origin, Accept-Encoding","content-type":"application/json; charset=utf-8","etag":"W/\"3641-5U3NlsrJlOMjIt9CBDsg3/faGYY\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"108ms"},"msg":"","time":"2019-05-23T06:59:12.163Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4916ddf0-7d28-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","upgrade-insecure-requests":"1","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3","referer":"https://lancexlab.cn/chain/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8","if-none-match":"W/\"1491b-br+IalD3BbWlsloaRZYyEhhW77A\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"152d5-F/Yt7N8Fo81P4KBE1h0/g1hbmPQ\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"299ms"},"msg":"","time":"2019-05-23T06:59:19.292Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":50,"err":{"id":"4a0a1790-7d28-11e9-9c14-5974b6bdc985","domain":"https://lancexlab.cn","code":"IMAGE_SIZE_URL","name":"InternalServerError","statusCode":500,"level":"critical","message":"Request timed out.","context":"\"https://images.unsplash.com/photo-1558509825-97fd4feedd88?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\"","stack":"InternalServerError: Request timed out.\n    at new InternalServerError (/var/www/ghost/versions/2.18.3/node_modules/ghost-ignition/lib/errors/index.js:77:23)\n    at request.then.catch.catch (/var/www/ghost/versions/2.18.3/core/server/lib/image/image-size.js:134:31)\n    at tryCatcher (/var/www/ghost/versions/2.18.3/node_modules/bluebird/js/release/util.js:16:23)\n    at /var/www/ghost/versions/2.18.3/node_modules/bluebird/js/release/catch_filter.js:34:37\n    at tryCatcher (/var/www/ghost/versions/2.18.3/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/var/www/ghost/versions/2.18.3/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/var/www/ghost/versions/2.18.3/node_modules/bluebird/js/release/promise.js:569:18)\n    at Promise._settlePromise0 (/var/www/ghost/versions/2.18.3/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/var/www/ghost/versions/2.18.3/node_modules/bluebird/js/release/promise.js:690:18)\n    at _drainQueueStep (/var/www/ghost/versions/2.18.3/node_modules/bluebird/js/release/async.js:138:12)\n    at _drainQueue (/var/www/ghost/versions/2.18.3/node_modules/bluebird/js/release/async.js:131:9)\n    at Async._drainQueues (/var/www/ghost/versions/2.18.3/node_modules/bluebird/js/release/async.js:147:5)\n    at Immediate.Async.drainQueues (/var/www/ghost/versions/2.18.3/node_modules/bluebird/js/release/async.js:17:14)\n    at runCallback (timers.js:810:20)\n    at tryOnImmediate (timers.js:768:5)\n    at processImmediate [as _immediateCallback] (timers.js:745:5)"},"msg":"Request timed out.","time":"2019-05-23T06:59:20.591Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":50,"err":{"id":"4a0a1791-7d28-11e9-9c14-5974b6bdc985","domain":"https://lancexlab.cn","code":"IMAGE_SIZE_URL","name":"InternalServerError","statusCode":500,"level":"critical","message":"Request timed out.","context":"\"https://images.unsplash.com/photo-1558509825-97fd4feedd88?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\"","stack":"InternalServerError: Request timed out.\n    at new InternalServerError (/var/www/ghost/versions/2.18.3/node_modules/ghost-ignition/lib/errors/index.js:77:23)\n    at request.then.catch.catch (/var/www/ghost/versions/2.18.3/core/server/lib/image/image-size.js:134:31)\n    at tryCatcher (/var/www/ghost/versions/2.18.3/node_modules/bluebird/js/release/util.js:16:23)\n    at /var/www/ghost/versions/2.18.3/node_modules/bluebird/js/release/catch_filter.js:34:37\n    at tryCatcher (/var/www/ghost/versions/2.18.3/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/var/www/ghost/versions/2.18.3/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/var/www/ghost/versions/2.18.3/node_modules/bluebird/js/release/promise.js:569:18)\n    at Promise._settlePromise0 (/var/www/ghost/versions/2.18.3/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/var/www/ghost/versions/2.18.3/node_modules/bluebird/js/release/promise.js:690:18)\n    at _drainQueueStep (/var/www/ghost/versions/2.18.3/node_modules/bluebird/js/release/async.js:138:12)\n    at _drainQueue (/var/www/ghost/versions/2.18.3/node_modules/bluebird/js/release/async.js:131:9)\n    at Async._drainQueues (/var/www/ghost/versions/2.18.3/node_modules/bluebird/js/release/async.js:147:5)\n    at Immediate.Async.drainQueues (/var/www/ghost/versions/2.18.3/node_modules/bluebird/js/release/async.js:17:14)\n    at runCallback (timers.js:810:20)\n    at tryOnImmediate (timers.js:768:5)\n    at processImmediate [as _immediateCallback] (timers.js:745:5)"},"msg":"Request timed out.","time":"2019-05-23T06:59:20.592Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"47053c00-7d28-11e9-9c14-5974b6bdc985","userId":null},"url":"/observe-design-pattern-in-java/","method":"GET","originalUrl":"/observe-design-pattern-in-java/","params":{"slug":"observe-design-pattern-in-java"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","upgrade-insecure-requests":"1","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"9ff4-54OIa1B+OF5tClyiwX99LazU6kc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"5086ms"},"msg":"","time":"2019-05-23T06:59:20.607Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"5241d240-7d28-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.91.252.20","x-forwarded-proto":"https","x-real-ip":"54.91.252.20","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"69ms"},"msg":"","time":"2019-05-23T06:59:34.443Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"576d3750-7d28-11e9-9c14-5974b6bdc985","userId":null},"url":"/p/957f6699-f83d-4d8a-a521-d40fe7477087/","method":"GET","originalUrl":"/p/957f6699-f83d-4d8a-a521-d40fe7477087/","params":{"uuid":"957f6699-f83d-4d8a-a521-d40fe7477087"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","upgrade-insecure-requests":"1","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3","referer":"https://lancexlab.cn/observe-design-pattern-in-java/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=31536000","location":"/jvm-class-loader/","vary":"Accept, Accept-Encoding","content-type":"text/html; charset=utf-8","content-length":"92"},"statusCode":301,"responseTime":"22ms"},"msg":"","time":"2019-05-23T06:59:43.069Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"5776d440-7d28-11e9-9c14-5974b6bdc985","userId":null},"url":"/jvm-class-loader/","method":"GET","originalUrl":"/jvm-class-loader/","params":{"slug":"jvm-class-loader"},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","upgrade-insecure-requests":"1","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3","referer":"https://lancexlab.cn/observe-design-pattern-in-java/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"8e58-xwdjmbBQBt4HkVkyB5i703EtqEs\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"109ms"},"msg":"","time":"2019-05-23T06:59:43.219Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"57b1e170-7d28-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/04/image-76.png","method":"GET","originalUrl":"/content/images/2019/04/image-76.png","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/jvm-class-loader/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Mon, 22 Apr 2019 12:14:36 GMT","etag":"W/\"3b12-16a44f82d2e\"","content-type":"image/png","content-length":15122},"statusCode":200,"responseTime":"113ms"},"msg":"","time":"2019-05-23T06:59:43.610Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"57c4a620-7d28-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/04/image-77.png","method":"GET","originalUrl":"/content/images/2019/04/image-77.png","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/jvm-class-loader/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Mon, 22 Apr 2019 13:29:35 GMT","etag":"W/\"73fe-16a453cd4eb\"","content-type":"image/png","content-length":29694},"statusCode":200,"responseTime":"18ms"},"msg":"","time":"2019-05-23T06:59:43.638Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"57c51b50-7d28-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/04/image-79.png","method":"GET","originalUrl":"/content/images/2019/04/image-79.png","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/jvm-class-loader/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Mon, 22 Apr 2019 14:06:04 GMT","etag":"W/\"3f35-16a455e3b6d\"","content-type":"image/png","content-length":16181},"statusCode":200,"responseTime":"19ms"},"msg":"","time":"2019-05-23T06:59:43.642Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"57b14530-7d28-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w2000/2019/04/depositphotos_97727260-stock-photo-building-a-house-with-wooden.jpg","method":"GET","originalUrl":"/content/images/size/w2000/2019/04/depositphotos_97727260-stock-photo-building-a-house-with-wooden.jpg","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/jvm-class-loader/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Mon, 22 Apr 2019 11:46:06 GMT","etag":"W/\"1c5b3-16a44de179f\"","content-type":"image/jpeg","content-length":116147},"statusCode":200,"responseTime":"151ms"},"msg":"","time":"2019-05-23T06:59:43.643Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"57c51b51-7d28-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/04/image-80.png","method":"GET","originalUrl":"/content/images/2019/04/image-80.png","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/jvm-class-loader/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Mon, 22 Apr 2019 14:20:56 GMT","etag":"W/\"1ad2-16a456bd6c9\"","content-type":"image/png","content-length":6866},"statusCode":200,"responseTime":"43ms"},"msg":"","time":"2019-05-23T06:59:43.665Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"57c56970-7d28-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/04/webwxgetmsgimg-1.jpg","method":"GET","originalUrl":"/content/images/2019/04/webwxgetmsgimg-1.jpg","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/jvm-class-loader/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Mon, 22 Apr 2019 15:48:28 GMT","etag":"W/\"26efc-16a45bbf9bb\"","content-type":"image/jpeg","content-length":159484},"statusCode":200,"responseTime":"67ms"},"msg":"","time":"2019-05-23T06:59:43.691Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"57cc4740-7d28-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w600/2019/03/56601E4F-A6F3-4670-A146-3EA171255A30.jpeg","method":"GET","originalUrl":"/content/images/size/w600/2019/03/56601E4F-A6F3-4670-A146-3EA171255A30.jpeg","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q=0.8","referer":"https://lancexlab.cn/jvm-class-loader/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Mon, 25 Mar 2019 11:06:30 GMT","etag":"W/\"1285b-169b487c5c4\"","content-type":"image/jpeg","content-length":75867},"statusCode":200,"responseTime":"31ms"},"msg":"","time":"2019-05-23T06:59:43.701Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"7b746420-7d28-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/05/image-11.png","method":"HEAD","originalUrl":"/content/images/2019/05/image-11.png","params":{},"headers":{"x-forwarded-for":"106.75.10.114","x-forwarded-proto":"https","x-real-ip":"106.75.10.114","host":"lancexlab.cn","connection":"close","user-agent":"Faraday v0.14.0","accept":"*/*","x-newrelic-id":"XAUOVFNACQYHVFNbAAA=","x-newrelic-transaction":"PxRTBwJQC1dWAFMGAFAAUVZQFB8EBw8RVU4aBl5cBwFXA11TVVZSVVMEVkNKQQ4LAlIEAwBQFTs="},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 23 May 2019 06:47:54 GMT","etag":"W/\"37bf-16ae3723976\"","content-type":"image/png","content-length":14271},"statusCode":200,"responseTime":"1ms"},"msg":"","time":"2019-05-23T07:00:43.492Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"7b777160-7d28-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/05/image-2.png","method":"HEAD","originalUrl":"/content/images/2019/05/image-2.png","params":{},"headers":{"x-forwarded-for":"106.75.10.114","x-forwarded-proto":"https","x-real-ip":"106.75.10.114","host":"lancexlab.cn","connection":"close","user-agent":"Faraday v0.14.0","accept":"*/*","x-newrelic-id":"XAUOVFNACQYHVFNbAAA=","x-newrelic-transaction":"PxRRU15XDgIHVQABB1QGVFEAFB8EBw8RVU4aBAoAAAQCUggAUlFWU1YDBkNKQQ4LAlIEAwBQFTs="},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 23 May 2019 05:24:29 GMT","etag":"W/\"50ac-16ae325d795\"","content-type":"image/png","content-length":20652},"statusCode":200,"responseTime":"1ms"},"msg":"","time":"2019-05-23T07:00:43.513Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"7c4807d0-7d28-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/05/image-2.png","method":"GET","originalUrl":"/content/images/2019/05/image-2.png","params":{},"headers":{"x-forwarded-for":"180.101.136.109","x-forwarded-proto":"https","x-real-ip":"180.101.136.109","host":"lancexlab.cn","connection":"close","user-agent":"qboxio/805dc80bc7 (linux/amd64; go1.12.1) jjh1064/18957","x-need-crc-encode":"1","x-reqid":"SssAAADRVqPAPaEV","x-trace":"88bee2654d5358b3/2045c2fb1ae2613a|0","accept-encoding":"gzip"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 23 May 2019 05:24:29 GMT","etag":"W/\"50ac-16ae325d795\"","content-type":"image/png","content-length":20652},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2019-05-23T07:00:44.880Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"7cdc7fa0-7d28-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/05/image-10.png","method":"HEAD","originalUrl":"/content/images/2019/05/image-10.png","params":{},"headers":{"x-forwarded-for":"106.75.10.114","x-forwarded-proto":"https","x-real-ip":"106.75.10.114","host":"lancexlab.cn","connection":"close","user-agent":"Faraday v0.14.0","accept":"*/*","x-newrelic-id":"XAUOVFNACQYHVFNbAAA=","x-newrelic-transaction":"PxRTUgJUClUJBwJSVlUEXlcBFB8EBw8RVU4aBgtcAwBVXFoCAQBXUVwFB0NKQQ4LAlIEAwBQFTs="},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 23 May 2019 06:06:28 GMT","etag":"W/\"5e92-16ae34c4966\"","content-type":"image/png","content-length":24210},"statusCode":200,"responseTime":"1ms"},"msg":"","time":"2019-05-23T07:00:45.852Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"7ce950e0-7d28-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/05/image-11.png","method":"GET","originalUrl":"/content/images/2019/05/image-11.png","params":{},"headers":{"x-forwarded-for":"115.231.100.202","x-forwarded-proto":"https","x-real-ip":"115.231.100.202","host":"lancexlab.cn","connection":"close","user-agent":"qboxio/805dc80bc7 (linux/amd64; go1.12.1) xs1519/10739","x-need-crc-encode":"1","x-reqid":"qOoAAACpy6TAPaEV","x-trace":"104fd7f7e594c044/a43c986f75e00c75|0","accept-encoding":"gzip"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 23 May 2019 06:47:54 GMT","etag":"W/\"37bf-16ae3723976\"","content-type":"image/png","content-length":14271},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2019-05-23T07:00:45.937Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"7dc44790-7d28-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/05/image-10.png","method":"GET","originalUrl":"/content/images/2019/05/image-10.png","params":{},"headers":{"x-forwarded-for":"183.131.7.21","x-forwarded-proto":"https","x-real-ip":"183.131.7.21","host":"lancexlab.cn","connection":"close","user-agent":"qboxio/805dc80bc7 (linux/amd64; go1.12.1) xs1509/18089","x-need-crc-encode":"1","x-reqid":"rNkAAABAhjDBPaEV","x-trace":"a6a17a10f80fed4e/a96229f85f54804a|0","accept-encoding":"gzip"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 23 May 2019 06:06:28 GMT","etag":"W/\"5e92-16ae34c4966\"","content-type":"image/png","content-length":24210},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2019-05-23T07:00:47.374Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"3a869360-7d29-11e9-9c14-5974b6bdc985","userId":null},"url":"/rss/","method":"GET","originalUrl":"/rss/","params":{},"headers":{"x-forwarded-for":"62.210.215.110","x-forwarded-proto":"https","x-real-ip":"62.210.215.110","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.66 Safari/537.36","cache-control":"max-age=0, no-cache","pragma":"no-cache","accept-encoding":"gzip"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/xml; charset=utf-8","etag":"W/\"24ea5-WTfFAfY3aK9MulijD/6ZRmOl98g\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"203ms"},"msg":"","time":"2019-05-23T07:06:04.258Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"3f6ed4f0-7d29-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","upgrade-insecure-requests":"1","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3","referer":"https://www.jianshu.com/go-wild?ac=2&url=https%3A%2F%2Flancexlab.cn","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8","if-none-match":"W/\"152d5-F/Yt7N8Fo81P4KBE1h0/g1hbmPQ\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","etag":"W/\"152d5-F/Yt7N8Fo81P4KBE1h0/g1hbmPQ\""},"statusCode":304,"responseTime":"191ms"},"msg":"","time":"2019-05-23T07:06:12.479Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4cf2c320-7d29-11e9-9c14-5974b6bdc985","userId":null},"url":"/observe-design-pattern-in-java/","method":"GET","originalUrl":"/observe-design-pattern-in-java/","params":{"slug":"observe-design-pattern-in-java"},"headers":{"x-forwarded-for":"178.33.155.144","x-forwarded-proto":"https","x-real-ip":"178.33.155.144","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.62 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8","accept-language":"*","cache-control":"max-age=0","accept-encoding":"gzip"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"9ff4-54OIa1B+OF5tClyiwX99LazU6kc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"93ms"},"msg":"","time":"2019-05-23T07:06:35.057Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"5bf784f0-7d29-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.84.143.192","x-forwarded-proto":"https","x-real-ip":"54.84.143.192","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"82ms"},"msg":"","time":"2019-05-23T07:07:00.242Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"a21a3b30-7d29-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.83.125.179","x-forwarded-proto":"https","x-real-ip":"54.83.125.179","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"81ms"},"msg":"","time":"2019-05-23T07:08:57.910Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"c5806d10-7d29-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","upgrade-insecure-requests":"1","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3","referer":"https://lancexlab.cn/jvm-class-loader/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8","if-none-match":"W/\"152d5-F/Yt7N8Fo81P4KBE1h0/g1hbmPQ\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","etag":"W/\"152d5-F/Yt7N8Fo81P4KBE1h0/g1hbmPQ\""},"statusCode":304,"responseTime":"230ms"},"msg":"","time":"2019-05-23T07:09:57.449Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"0c5694d0-7d2a-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?limit=30&page=1&filter=status%3A%5Bdraft%2Cscheduled%2Cpublished%5D","method":"GET","originalUrl":"/ghost/api/v2/admin/posts/?limit=30&page=1&filter=status%3A%5Bdraft%2Cscheduled%2Cpublished%5D","params":{},"headers":{"x-forwarded-for":"101.86.166.204","x-forwarded-proto":"https","x-real-ip":"101.86.166.204","host":"lancexlab.cn","connection":"close","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"2.18","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","content-type":"application/json; charset=UTF-8","referer":"https://lancexlab.cn/ghost/","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"},"body":{},"query":{"limit":"30","page":"1","filter":"status:[draft,scheduled,published]"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"4e464-oOX6761X9Ot6DuKzxzDvJQxjAnA\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"248ms"},"msg":"","time":"2019-05-23T07:11:56.311Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"62bfdbb0-7d2a-11e9-9c14-5974b6bdc985","userId":null},"url":"/robots.txt","method":"GET","originalUrl":"/robots.txt","params":{},"headers":{"x-forwarded-for":"203.208.60.66","x-forwarded-proto":"https","x-real-ip":"203.208.60.66","host":"lancexlab.cn","connection":"close","accept":"text/plain,text/html,*/*","user-agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","accept-encoding":"gzip,deflate,br"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","content-type":"text/plain","content-length":88,"etag":"\"f15f756fcf0b8854e4d47b134faf739c\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2019-05-23T07:14:21.038Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"63386710-7d2a-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"203.208.60.114","x-forwarded-proto":"https","x-real-ip":"203.208.60.114","host":"lancexlab.cn","connection":"close","amp-cache-transform":"google;v=\"1\"","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8,text/html,application/xhtml+xml,application/signed-exchange;v=b3,application/xml;q=0.9,*/*;q=0.8","from":"googlebot(at)googlebot.com","user-agent":"Mozilla/5.0 (Linux; Android 6.0.1; Nexus 5X Build/MMB29P) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.96 Mobile Safari/537.36 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","accept-encoding":"gzip,deflate,br"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"152d5-F/Yt7N8Fo81P4KBE1h0/g1hbmPQ\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"152ms"},"msg":"","time":"2019-05-23T07:14:21.978Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"a82b9e00-7d2a-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.239.148.221","x-forwarded-proto":"https","x-real-ip":"34.239.148.221","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"77ms"},"msg":"","time":"2019-05-23T07:16:17.582Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"befa8ba0-7d2a-11e9-9c14-5974b6bdc985","userId":null},"url":"/observe-design-pattern-in-java/","method":"GET","originalUrl":"/observe-design-pattern-in-java/","params":{"slug":"observe-design-pattern-in-java"},"headers":{"x-forwarded-for":"203.208.60.83","x-forwarded-proto":"https","x-real-ip":"203.208.60.83","host":"lancexlab.cn","connection":"close","amp-cache-transform":"google;v=\"1\"","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8,text/html,application/xhtml+xml,application/signed-exchange;v=b3,application/xml;q=0.9,*/*;q=0.8","from":"googlebot(at)googlebot.com","user-agent":"Mozilla/5.0 (Linux; Android 6.0.1; Nexus 5X Build/MMB29P) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.96 Mobile Safari/537.36 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","accept-encoding":"gzip,deflate,br"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"9ff4-54OIa1B+OF5tClyiwX99LazU6kc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"89ms"},"msg":"","time":"2019-05-23T07:16:55.861Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"78e74940-7d2b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"18.232.105.31","x-forwarded-proto":"https","x-real-ip":"18.232.105.31","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"203ms"},"msg":"","time":"2019-05-23T07:22:07.910Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"a4a5dd30-7d2b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.80.197.154","x-forwarded-proto":"https","x-real-ip":"3.80.197.154","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"88ms"},"msg":"","time":"2019-05-23T07:23:21.180Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"9ee40f10-7d2c-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.88.235.201","x-forwarded-proto":"https","x-real-ip":"3.88.235.201","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"69ms"},"msg":"","time":"2019-05-23T07:30:20.999Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"0bdd17b0-7d2d-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/05/image-2.png","method":"GET","originalUrl":"/content/images/2019/05/image-2.png","params":{},"headers":{"x-forwarded-for":"140.143.4.220","x-forwarded-proto":"https","x-real-ip":"140.143.4.220","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 Safari/537.36","accept-encoding":"gzip,deflate"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 23 May 2019 05:24:29 GMT","etag":"W/\"50ac-16ae325d795\"","content-type":"image/png","content-length":20652},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2019-05-23T07:33:23.758Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"0bde9e50-7d2d-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/05/image-10.png","method":"GET","originalUrl":"/content/images/2019/05/image-10.png","params":{},"headers":{"x-forwarded-for":"140.143.4.220","x-forwarded-proto":"https","x-real-ip":"140.143.4.220","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 Safari/537.36","accept-encoding":"gzip,deflate"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 23 May 2019 06:06:28 GMT","etag":"W/\"5e92-16ae34c4966\"","content-type":"image/png","content-length":24210},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2019-05-23T07:33:23.768Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"0bede090-7d2d-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/05/image-11.png","method":"GET","originalUrl":"/content/images/2019/05/image-11.png","params":{},"headers":{"x-forwarded-for":"140.143.4.220","x-forwarded-proto":"https","x-real-ip":"140.143.4.220","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 Safari/537.36","accept-encoding":"gzip,deflate"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 23 May 2019 06:47:54 GMT","etag":"W/\"37bf-16ae3723976\"","content-type":"image/png","content-length":14271},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2019-05-23T07:33:23.868Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"msg":"amp.parse https://lancexlab.cn/observe-design-pattern-in-java/ 145ms ","time":"2019-05-23T07:33:23.874Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"0bd57690-7d2d-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/observe-design-pattern-in-java/amp/","params":{},"headers":{"x-forwarded-for":"203.208.60.5","x-forwarded-proto":"https","x-real-ip":"203.208.60.5","host":"lancexlab.cn","connection":"close","amp-cache-transform":"google;v=\"1\"","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8,text/html,application/xhtml+xml,application/signed-exchange;v=b3,application/xml;q=0.9,*/*;q=0.8","from":"googlebot(at)googlebot.com","user-agent":"Mozilla/5.0 (Linux; Android 6.0.1; Nexus 5X Build/MMB29P) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.96 Mobile Safari/537.36 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","accept-encoding":"gzip,deflate,br"},"body":{"post":{"slug":"observe-design-pattern-in-java","id":"5ce57b5573e7b450e171317e","uuid":"659366bf-1709-424e-9e03-eb11322b09df","title":"Observer Design Pattern in Java","html":"<p>观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。</p><p>观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。</p><p>观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>什么时候使用观察者模式</blockquote><p>在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://lancexlab.cn/content/images/2019/05/image-2.png\" class=\"kg-image\"><figcaption>Observer Design</figcaption></figure><!--kg-card-end: image--><p>首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>观察者模式案例</blockquote><p>在电子商务领域主要围绕线上商品交易打造，其中核心的模块是订单的生命周期，这个是观察者模式应用的典型场景，因为我们的系统服务需要在订单的各个状态变更时作出即时的内部操作或者用户服务等；如果我们应用观察者模式来订阅订单状态变更事件那么会为系统降低模块之间的代码耦合度。</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://lancexlab.cn/content/images/2019/05/image-10.png\" class=\"kg-image\"><figcaption>观察订单的生命周期</figcaption></figure><!--kg-card-end: image--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>观察者模式设计</blockquote><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://lancexlab.cn/content/images/2019/05/image-11.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><ul><li>Order：观察者观察对象，案例围绕Order的内部状态变更来设计的发布订阅</li><li>OrderUpdateManager：Order状态维护对象，扮演即时通知的角色</li><li>Observer：观察者接口抽象，将其实现类对象注册与注销绑定至OrderUpdateManager</li><li>DeliveredObserver：观察者实现，观察Order状态变更，作出相应的应对事件</li></ul><p>Order.java</p><!--kg-card-begin: code--><pre><code>package com.iblog.pattern.observe;\n\npublic class Order {\n    public String id;\n    public Status status;\n\n    public enum Status {\n        RECEIVED,\n        AWAIT_PAYMENT,\n        PAYMENT_RECEIVED,\n        PROCESSING,\n        EXCEPTION,\n        SHIPPED,\n        DELIVERED\n    }\n}\n</code></pre><!--kg-card-end: code--><p>Observer.java</p><!--kg-card-begin: code--><pre><code>package com.iblog.pattern.observe;\n\npublic interface Observer {\n    void observe(Event event);\n}\n</code></pre><!--kg-card-end: code--><p>PaymentNotifyObserver.java</p><!--kg-card-begin: code--><pre><code>package com.iblog.pattern.observe;\n\npublic class PaymentNotifyObserver implements Observer {\n    @Override\n    public void observe(Event event) {\n        if (event.preStatus != Order.Status.RECEIVED) {\n            return;\n        }\n        System.out.println(\"notify the order owner to pay for order\");\n    }\n}\n</code></pre><!--kg-card-end: code--><p>PaidFinalsObserver.java</p><!--kg-card-begin: code--><pre><code>package com.iblog.pattern.observe;\n\npublic class PaidFinalsObserver implements Observer {\n    @Override\n    public void observe(Event event) {\n        if (event.preStatus != Order.Status.AWAIT_PAYMENT) {\n            return;\n        }\n        System.out.println(\"user paid for order, notify finals to check bill\");\n    }\n}\n</code></pre><!--kg-card-end: code--><p>ReceivedPaymentObserver.java</p><!--kg-card-begin: code--><pre><code>package com.iblog.pattern.observe;\n\npublic class ReceivedPaymentObserver implements Observer {\n    @Override\n    public void observe(Event event) {\n        if (event.preStatus != Order.Status.PAYMENT_RECEIVED) {\n            return;\n        }\n        System.out.println(\"received the payment of order, notify to process the order\");\n    }\n}\n</code></pre><!--kg-card-end: code--><p>DeliveredObserver.java</p><!--kg-card-begin: code--><pre><code>package com.iblog.pattern.observe;\n\npublic class DeliveredObserver implements Observer {\n    @Override\n    public void observe(Event event) {\n        if (event.preStatus != Order.Status.SHIPPED) {\n            return;\n        }\n        System.out.println(\"order is delivered, notify use to check the package\");\n    }\n}\n</code></pre><!--kg-card-end: code--><p>OrderUpdateManager.java</p><!--kg-card-begin: code--><pre><code>package com.iblog.pattern.observe;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class OrderUpdateManager {\n    private final List&lt;Observer&gt; observers = new ArrayList&lt;&gt;();\n    private final Notifier notifier;\n\n    public OrderUpdateManager() {\n        this.notifier = new Notifier(observers);\n    }\n\n    public void register(Observer observer) {\n        synchronized (observers) {\n            observers.add(observer);\n        }\n    }\n\n    public void unregister(Observer observer) {\n        synchronized (observers) {\n            observers.remove(observer);\n        }\n    }\n\n    public void awaitPaidOrder(Order order) {\n        notifier.notify(order, Order.Status.AWAIT_PAYMENT, \"paid order\");\n    }\n\n    public void receivedOrder(Order order) {\n        notifier.notify(order, Order.Status.RECEIVED, \"await payment\");\n    }\n\n    public void paidOrder(Order order) {\n        notifier.notify(order, Order.Status.PAYMENT_RECEIVED, \"will process order\");\n    }\n\n    public void delivered(Order order) {\n        notifier.notify(order, Order.Status.SHIPPED, \"delivered\");\n    }\n}\n</code></pre><!--kg-card-end: code--><p>Event.java</p><!--kg-card-begin: code--><pre><code>package com.iblog.pattern.observe;\n\npublic class Event {\n    public final Order order;\n    public final Order.Status preStatus;\n    public final String message;\n\n    public Event(Order order, Order.Status preStatus, String message) {\n        this.order = order;\n        this.preStatus = preStatus;\n        this.message = message;\n    }\n}\n</code></pre><!--kg-card-end: code--><p>Notifier.java</p><!--kg-card-begin: code--><pre><code>package com.iblog.pattern.observe;\n\nimport java.util.List;\n\npublic class Notifier {\n    private final List&lt;Observer&gt; observers;\n\n    public Notifier(List&lt;Observer&gt; observers) {\n        this.observers = observers;\n    }\n\n    public void notify(Order order, Order.Status preStatus, String subject) {\n        for (Observer o : observers) {\n            o.observe(new Event(order, preStatus, subject));\n        }\n    }\n}\n</code></pre><!--kg-card-end: code--><p>MockTest.java</p><!--kg-card-begin: code--><pre><code>package com.iblog.pattern.observe;\n\npublic class MockTest {\n    public static void main(String[] args) {\n        Order order = new Order();\n        order.id = \"1\";\n        order.status = Order.Status.RECEIVED;\n\n        OrderUpdateManager manager = new OrderUpdateManager();\n        Observer observer1 = new PaymentNotifyObserver();\n        Observer observer2 = new PaidFinalsObserver();\n        Observer observer3 = new ReceivedPaymentObserver();\n        Observer observer4 = new DeliveredObserver();\n        manager.register(observer1);\n        manager.register(observer2);\n        manager.register(observer3);\n        manager.register(observer4);\n\n        order.status = Order.Status.AWAIT_PAYMENT;\n        manager.receivedOrder(order);\n        order.status = Order.Status.PAYMENT_RECEIVED;\n        manager.awaitPaidOrder(order);\n        order.status = Order.Status.PROCESSING;\n        manager.paidOrder(order);\n        order.status = Order.Status.DELIVERED;\n        manager.delivered(order);\n    }\n}\n</code></pre><!--kg-card-end: code--><p>输出:</p><!--kg-card-begin: code--><pre><code>notify the order owner to pay for order\nuser paid for order, notify finals to check bill\nreceived the payment of order, notify to process the order\norder is delivered, notify use to check the package\n</code></pre><!--kg-card-end: code--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>Jdk中观察者模式</blockquote>","comment_id":"5ce57b5573e7b450e171317e","feature_image":"https://images.unsplash.com/photo-1558509825-97fd4feedd88?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","featured":false,"page":false,"meta_title":null,"meta_description":null,"created_at":"2019-05-23T00:39:49.000+08:00","updated_at":"2019-05-23T14:59:09.000+08:00","published_at":"2019-05-23T14:59:09.000+08:00","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null,"authors":{"0":{"id":"1","name":"lance xu","slug":"lance","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"facebook":null,"twitter":null,"meta_title":null,"meta_description":null,"url":"https://lancexlab.cn/author/lance/"}},"tags":{"0":{"id":"5cb592d9cbb52007aa88ca68","name":"pattern","slug":"pattern","description":"23种设计模式结合Java编程实战分享","feature_image":"https://lancexlab.cn/content/images/2019/04/empathy-group-pixabay.png","visibility":"public","meta_title":null,"meta_description":null,"url":"https://lancexlab.cn/tag/pattern/"}},"primary_author":{"id":"1","name":"lance xu","slug":"lance","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"facebook":null,"twitter":null,"meta_title":null,"meta_description":null,"url":"https://lancexlab.cn/author/lance/"},"primary_tag":{"id":"5cb592d9cbb52007aa88ca68","name":"pattern","slug":"pattern","description":"23种设计模式结合Java编程实战分享","feature_image":"https://lancexlab.cn/content/images/2019/04/empathy-group-pixabay.png","visibility":"public","meta_title":null,"meta_description":null,"url":"https://lancexlab.cn/tag/pattern/"},"url":"https://lancexlab.cn/observe-design-pattern-in-java/","excerpt":"观察者模式定义了对象之间的1：N的依赖关系，当一个被观察对象的状态改变时，其N个观察依赖对象都会得到通知和更新，这种设计模式在系统设计中也被称为发布-订阅模式，广泛应用于系统解偶设计。\n\n观察者设计模式中，多个观察者对象正在观察特定的主题对象，当主题对象内部状态发生变化时，观察者注册到主题对象中获得通知。\n\n观察者对象可以自由的从订阅主题中注入与注销，达到系统松耦合的设计目的。\n\n\n--------------------------------------------------------------------------------\n\n> 什么时候使用观察者模式\n在我们进行系统设计的时候，如果存在多个对象状态变化依赖某一个特定主题对象内部状态变化的时候，则可以应用观察者模式。\n\nObserver Design\n首先需要明确我们的主题对象，其次我们将观察者注入并观察其内部状态变更，我们可以采用主动观察其状态变更行为或者被动接受行为变更时的通知，观察者当观察到变更时执行各自的行为。\n\n\n------------------------------------------------"},"_locals":{"version":"2.18.3","safeVersion":"2.18","relativeUrl":"/observe-design-pattern-in-java/amp/","apiVersion":"v2","secure":true,"context":{"0":"amp","1":"post"}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"67fb-IBO9vnZtNDtXinzzVBnl5BgL9wo\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"183ms"},"msg":"","time":"2019-05-23T07:33:23.892Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"a324a980-7d2d-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.93.195.131","x-forwarded-proto":"https","x-real-ip":"3.93.195.131","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"109ms"},"msg":"","time":"2019-05-23T07:37:37.671Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"c5916030-7d2d-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.88.235.201","x-forwarded-proto":"https","x-real-ip":"3.88.235.201","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"75ms"},"msg":"","time":"2019-05-23T07:38:35.391Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"b57cbf90-7d2e-11e9-9c14-5974b6bdc985","userId":null},"url":"/sitemap-tags.xml","method":"GET","originalUrl":"/sitemap-tags.xml","params":{"resource":"tags"},"headers":{"x-forwarded-for":"207.46.13.49","x-forwarded-proto":"https","x-real-ip":"207.46.13.49","host":"lancexlab.cn","connection":"close","cache-control":"no-cache","pragma":"no-cache","accept":"*/*","accept-encoding":"gzip, deflate","user-agent":"Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm)"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=3600","content-type":"text/xml; charset=utf-8","etag":"W/\"795-//h8hxGOyEUMur5E7IkvjyEaU6Y\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2019-05-23T07:45:17.837Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"d3617d20-7d2e-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.93.195.131","x-forwarded-proto":"https","x-real-ip":"3.93.195.131","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"112ms"},"msg":"","time":"2019-05-23T07:46:08.100Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"b70c1cb0-7d2f-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.227.171.251","x-forwarded-proto":"https","x-real-ip":"34.227.171.251","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"79ms"},"msg":"","time":"2019-05-23T07:52:30.028Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"dce1a0e0-7d2f-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.227.171.251","x-forwarded-proto":"https","x-real-ip":"34.227.171.251","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"83ms"},"msg":"","time":"2019-05-23T07:53:33.506Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f314f550-7d30-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.239.148.221","x-forwarded-proto":"https","x-real-ip":"34.239.148.221","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"80ms"},"msg":"","time":"2019-05-23T08:01:20.247Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"02f02480-7d32-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.227.171.251","x-forwarded-proto":"https","x-real-ip":"34.227.171.251","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"90ms"},"msg":"","time":"2019-05-23T08:08:56.356Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"0d6b1870-7d32-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.239.148.221","x-forwarded-proto":"https","x-real-ip":"34.239.148.221","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"84ms"},"msg":"","time":"2019-05-23T08:09:13.933Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"07123a70-7d33-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.91.252.20","x-forwarded-proto":"https","x-real-ip":"54.91.252.20","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"100ms"},"msg":"","time":"2019-05-23T08:16:12.797Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"db2fae50-7d33-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.93.195.131","x-forwarded-proto":"https","x-real-ip":"3.93.195.131","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"91ms"},"msg":"","time":"2019-05-23T08:22:08.657Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"e61a05e0-7d33-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"18.232.105.31","x-forwarded-proto":"https","x-real-ip":"18.232.105.31","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"95ms"},"msg":"","time":"2019-05-23T08:22:26.975Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"631e7570-7d35-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.152.6.233","x-forwarded-proto":"https","x-real-ip":"54.152.6.233","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"83ms"},"msg":"","time":"2019-05-23T08:33:06.204Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"ca4a0ca0-7d35-11e9-9c14-5974b6bdc985","userId":null},"url":"/robots.txt","method":"GET","originalUrl":"/robots.txt","params":{},"headers":{"x-forwarded-for":"203.208.60.122","x-forwarded-proto":"https","x-real-ip":"203.208.60.122","host":"lancexlab.cn","connection":"close","accept":"text/plain,text/html,*/*","user-agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","accept-encoding":"gzip,deflate,br"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","content-type":"text/plain","content-length":88,"etag":"\"f15f756fcf0b8854e4d47b134faf739c\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2019-05-23T08:35:59.214Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"caecb540-7d35-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"203.208.60.111","x-forwarded-proto":"https","x-real-ip":"203.208.60.111","host":"lancexlab.cn","connection":"close","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","from":"googlebot(at)googlebot.com","user-agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","accept-encoding":"gzip,deflate,br"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"152d5-F/Yt7N8Fo81P4KBE1h0/g1hbmPQ\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"258ms"},"msg":"","time":"2019-05-23T08:36:00.535Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"ef24b610-7d35-11e9-9c14-5974b6bdc985","userId":null},"url":"/observe-design-pattern-in-java/","method":"GET","originalUrl":"/observe-design-pattern-in-java/","params":{"slug":"observe-design-pattern-in-java"},"headers":{"x-forwarded-for":"203.208.60.105","x-forwarded-proto":"https","x-real-ip":"203.208.60.105","host":"lancexlab.cn","connection":"close","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","from":"googlebot(at)googlebot.com","user-agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","accept-encoding":"gzip,deflate,br"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"9ff4-54OIa1B+OF5tClyiwX99LazU6kc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"102ms"},"msg":"","time":"2019-05-23T08:37:01.144Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"0c0a2c10-7d36-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.227.171.251","x-forwarded-proto":"https","x-real-ip":"34.227.171.251","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"71ms"},"msg":"","time":"2019-05-23T08:37:49.594Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"228e2e00-7d36-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.90.252.94","x-forwarded-proto":"https","x-real-ip":"54.90.252.94","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"101ms"},"msg":"","time":"2019-05-23T08:38:27.399Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"c11ac0a0-7d37-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.227.171.251","x-forwarded-proto":"https","x-real-ip":"34.227.171.251","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"142ms"},"msg":"","time":"2019-05-23T08:50:02.938Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"411ef820-7d38-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"18.232.105.31","x-forwarded-proto":"https","x-real-ip":"18.232.105.31","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"109ms"},"msg":"","time":"2019-05-23T08:53:37.681Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"543c2860-7d38-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.88.235.201","x-forwarded-proto":"https","x-real-ip":"3.88.235.201","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"96ms"},"msg":"","time":"2019-05-23T08:54:09.736Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"a4d52230-7d39-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.227.171.251","x-forwarded-proto":"https","x-real-ip":"34.227.171.251","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"97ms"},"msg":"","time":"2019-05-23T09:03:34.454Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"324e05a0-7d3a-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.90.252.94","x-forwarded-proto":"https","x-real-ip":"54.90.252.94","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"83ms"},"msg":"","time":"2019-05-23T09:07:31.790Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"70b731e0-7d3a-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.93.195.131","x-forwarded-proto":"https","x-real-ip":"3.93.195.131","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"105ms"},"msg":"","time":"2019-05-23T09:09:16.521Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"719bf720-7d3b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.90.252.94","x-forwarded-proto":"https","x-real-ip":"54.90.252.94","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"96ms"},"msg":"","time":"2019-05-23T09:16:27.508Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"337d7300-7d3c-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.90.252.94","x-forwarded-proto":"https","x-real-ip":"54.90.252.94","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"109ms"},"msg":"","time":"2019-05-23T09:21:52.799Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"6c775360-7d3c-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.93.195.131","x-forwarded-proto":"https","x-real-ip":"3.93.195.131","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"85ms"},"msg":"","time":"2019-05-23T09:23:28.365Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"aedf0800-7d3d-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.88.235.201","x-forwarded-proto":"https","x-real-ip":"3.88.235.201","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"118ms"},"msg":"","time":"2019-05-23T09:32:29.304Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4f714b20-7d3e-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.88.235.201","x-forwarded-proto":"https","x-real-ip":"3.88.235.201","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"94ms"},"msg":"","time":"2019-05-23T09:36:58.673Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"8a2ba030-7d3e-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.93.195.131","x-forwarded-proto":"https","x-real-ip":"3.93.195.131","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"142ms"},"msg":"","time":"2019-05-23T09:38:37.251Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"00a8eb40-7d40-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.227.171.251","x-forwarded-proto":"https","x-real-ip":"34.227.171.251","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"83ms"},"msg":"","time":"2019-05-23T09:49:05.480Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"66b15f30-7d40-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.216.36.251","x-forwarded-proto":"https","x-real-ip":"3.216.36.251","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"103ms"},"msg":"","time":"2019-05-23T09:51:56.683Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"767cf370-7d40-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.216.36.251","x-forwarded-proto":"https","x-real-ip":"3.216.36.251","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"85ms"},"msg":"","time":"2019-05-23T09:52:23.165Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"0d1f0100-7d42-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.80.194.193","x-forwarded-proto":"https","x-real-ip":"3.80.194.193","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"125ms"},"msg":"","time":"2019-05-23T10:03:45.423Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4389ab00-7d42-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"18.209.221.153","x-forwarded-proto":"https","x-real-ip":"18.209.221.153","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"82ms"},"msg":"","time":"2019-05-23T10:05:16.676Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"a10cb970-7d42-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.216.36.251","x-forwarded-proto":"https","x-real-ip":"3.216.36.251","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"137ms"},"msg":"","time":"2019-05-23T10:07:53.618Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"2585e1d0-7d44-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.161.205.95","x-forwarded-proto":"https","x-real-ip":"54.161.205.95","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"98ms"},"msg":"","time":"2019-05-23T10:18:45.328Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"31791de0-7d44-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.161.205.95","x-forwarded-proto":"https","x-real-ip":"54.161.205.95","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"99ms"},"msg":"","time":"2019-05-23T10:19:05.378Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"9d5014b0-7d44-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.158.192.48","x-forwarded-proto":"https","x-real-ip":"54.158.192.48","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"82ms"},"msg":"","time":"2019-05-23T10:22:06.285Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"02fe6540-7d46-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.216.36.251","x-forwarded-proto":"https","x-real-ip":"3.216.36.251","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"102ms"},"msg":"","time":"2019-05-23T10:32:06.396Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4ef20f60-7d46-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.84.187.100","x-forwarded-proto":"https","x-real-ip":"3.84.187.100","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"80ms"},"msg":"","time":"2019-05-23T10:34:13.800Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"00c325d0-7d47-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.204.177.7","x-forwarded-proto":"https","x-real-ip":"34.204.177.7","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"120ms"},"msg":"","time":"2019-05-23T10:39:12.167Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"064da560-7d48-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.158.192.48","x-forwarded-proto":"https","x-real-ip":"54.158.192.48","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"85ms"},"msg":"","time":"2019-05-23T10:46:30.925Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"72b606c0-7d48-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.216.36.251","x-forwarded-proto":"https","x-real-ip":"3.216.36.251","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"106ms"},"msg":"","time":"2019-05-23T10:49:32.824Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"5b830ab0-7d49-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.229.6.228","x-forwarded-proto":"https","x-real-ip":"34.229.6.228","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"123ms"},"msg":"","time":"2019-05-23T10:56:03.416Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"35df2860-7d4a-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.229.6.228","x-forwarded-proto":"https","x-real-ip":"34.229.6.228","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"104ms"},"msg":"","time":"2019-05-23T11:02:09.742Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"65dd88e0-7d4a-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.229.6.228","x-forwarded-proto":"https","x-real-ip":"34.229.6.228","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"84ms"},"msg":"","time":"2019-05-23T11:03:30.243Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"457956f0-7d4b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"100.24.116.255","x-forwarded-proto":"https","x-real-ip":"100.24.116.255","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"108ms"},"msg":"","time":"2019-05-23T11:09:45.420Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4d77e3c0-7d4c-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.204.177.7","x-forwarded-proto":"https","x-real-ip":"34.204.177.7","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"97ms"},"msg":"","time":"2019-05-23T11:17:08.319Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"80004a80-7d4c-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"100.24.116.255","x-forwarded-proto":"https","x-real-ip":"100.24.116.255","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"123ms"},"msg":"","time":"2019-05-23T11:18:33.126Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"61259ec0-7d4d-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.80.194.193","x-forwarded-proto":"https","x-real-ip":"3.80.194.193","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"81ms"},"msg":"","time":"2019-05-23T11:24:50.814Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"51d845c0-7d4e-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"35.173.253.243","x-forwarded-proto":"https","x-real-ip":"35.173.253.243","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"97ms"},"msg":"","time":"2019-05-23T11:31:34.655Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"59fc5160-7d4e-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"35.173.253.243","x-forwarded-proto":"https","x-real-ip":"35.173.253.243","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"87ms"},"msg":"","time":"2019-05-23T11:31:48.302Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"9b577800-7d4f-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"100.24.116.255","x-forwarded-proto":"https","x-real-ip":"100.24.116.255","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"112ms"},"msg":"","time":"2019-05-23T11:40:47.474Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f93db510-7d4f-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"140.207.236.221","x-forwarded-proto":"https","x-real-ip":"140.207.236.221","host":"lancexlab.cn","connection":"close","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","if-none-match":"W/\"1491b-9O7FpNAIEsuycG9kV3xVWmaxmII\"","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/74.0.3729.121 Mobile/15E148 Safari/605.1","accept-language":"zh-cn","accept-encoding":"br, gzip, deflate"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"152d5-F/Yt7N8Fo81P4KBE1h0/g1hbmPQ\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"203ms"},"msg":"","time":"2019-05-23T11:43:25.102Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f96a6a60-7d4f-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w1000/2019/04/depositphotos_97727260-stock-photo-building-a-house-with-wooden.jpg","method":"GET","originalUrl":"/content/images/size/w1000/2019/04/depositphotos_97727260-stock-photo-building-a-house-with-wooden.jpg","params":{},"headers":{"x-forwarded-for":"140.207.236.221","x-forwarded-proto":"https","x-real-ip":"140.207.236.221","host":"lancexlab.cn","connection":"close","accept":"image/png,image/svg+xml,image/*;q=0.8,video/*;q=0.8,*/*;q=0.5","accept-encoding":"br, gzip, deflate","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/74.0.3729.121 Mobile/15E148 Safari/605.1","accept-language":"zh-cn","referer":"https://lancexlab.cn/"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Mon, 22 Apr 2019 15:48:59 GMT","etag":"W/\"1c5b3-16a45bc750b\"","content-type":"image/jpeg","content-length":116147},"statusCode":200,"responseTime":"47ms"},"msg":"","time":"2019-05-23T11:43:25.239Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f96bc9f1-7d4f-11e9-9c14-5974b6bdc985","userId":null},"url":"/assets/built/infinitescroll.js?v=4500989add","method":"GET","originalUrl":"/assets/built/infinitescroll.js?v=4500989add","params":{},"headers":{"x-forwarded-for":"140.207.236.221","x-forwarded-proto":"https","x-real-ip":"140.207.236.221","host":"lancexlab.cn","connection":"close","accept":"*/*","accept-encoding":"br, gzip, deflate","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/74.0.3729.121 Mobile/15E148 Safari/605.1","accept-language":"zh-cn","referer":"https://lancexlab.cn/"},"body":{},"query":{"v":"4500989add"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Sat, 26 Oct 1985 08:15:00 GMT","etag":"W/\"3f0-7438674ba0\"","content-type":"application/javascript; charset=UTF-8","content-length":1008,"vary":"Accept-Encoding"},"statusCode":200,"responseTime":"46ms"},"msg":"","time":"2019-05-23T11:43:25.247Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f96a9170-7d4f-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w1000/2019/04/protobuf.png","method":"GET","originalUrl":"/content/images/size/w1000/2019/04/protobuf.png","params":{},"headers":{"x-forwarded-for":"140.207.236.221","x-forwarded-proto":"https","x-real-ip":"140.207.236.221","host":"lancexlab.cn","connection":"close","accept":"image/png,image/svg+xml,image/*;q=0.8,video/*;q=0.8,*/*;q=0.5","accept-encoding":"br, gzip, deflate","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/74.0.3729.121 Mobile/15E148 Safari/605.1","accept-language":"zh-cn","referer":"https://lancexlab.cn/"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Tue, 16 Apr 2019 06:24:15 GMT","etag":"W/\"1c601-16a24d145e4\"","content-type":"image/png","content-length":116225},"statusCode":200,"responseTime":"60ms"},"msg":"","time":"2019-05-23T11:43:25.252Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f96958f0-7d4f-11e9-9c14-5974b6bdc985","userId":null},"url":"/assets/built/screen.css?v=4500989add","method":"GET","originalUrl":"/assets/built/screen.css?v=4500989add","params":{},"headers":{"x-forwarded-for":"140.207.236.221","x-forwarded-proto":"https","x-real-ip":"140.207.236.221","host":"lancexlab.cn","connection":"close","accept":"text/css,*/*;q=0.1","accept-encoding":"br, gzip, deflate","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/74.0.3729.121 Mobile/15E148 Safari/605.1","accept-language":"zh-cn","referer":"https://lancexlab.cn/"},"body":{},"query":{"v":"4500989add"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Sat, 26 Oct 1985 08:15:00 GMT","etag":"W/\"9e68-7438674ba0\"","content-type":"text/css; charset=UTF-8","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"70ms"},"msg":"","time":"2019-05-23T11:43:25.254Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f96a6a61-7d4f-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w1000/2019/04/webwxgetmsgimg.jpg","method":"GET","originalUrl":"/content/images/size/w1000/2019/04/webwxgetmsgimg.jpg","params":{},"headers":{"x-forwarded-for":"140.207.236.221","x-forwarded-proto":"https","x-real-ip":"140.207.236.221","host":"lancexlab.cn","connection":"close","accept":"image/png,image/svg+xml,image/*;q=0.8,video/*;q=0.8,*/*;q=0.5","accept-encoding":"br, gzip, deflate","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/74.0.3729.121 Mobile/15E148 Safari/605.1","accept-language":"zh-cn","referer":"https://lancexlab.cn/"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 18 Apr 2019 07:37:01 GMT","etag":"W/\"30463-16a2f609c8b\"","content-type":"image/jpeg","content-length":197731},"statusCode":200,"responseTime":"67ms"},"msg":"","time":"2019-05-23T11:43:25.258Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f96bc9f0-7d4f-11e9-9c14-5974b6bdc985","userId":null},"url":"/assets/built/jquery.fitvids.js?v=4500989add","method":"GET","originalUrl":"/assets/built/jquery.fitvids.js?v=4500989add","params":{},"headers":{"x-forwarded-for":"140.207.236.221","x-forwarded-proto":"https","x-real-ip":"140.207.236.221","host":"lancexlab.cn","connection":"close","accept":"*/*","accept-encoding":"br, gzip, deflate","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/74.0.3729.121 Mobile/15E148 Safari/605.1","accept-language":"zh-cn","referer":"https://lancexlab.cn/"},"body":{},"query":{"v":"4500989add"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Sat, 26 Oct 1985 08:15:00 GMT","etag":"W/\"777-7438674ba0\"","content-type":"application/javascript; charset=UTF-8","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"61ms"},"msg":"","time":"2019-05-23T11:43:25.261Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f96b2db0-7d4f-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w1000/2019/04/docker-logo.png","method":"GET","originalUrl":"/content/images/size/w1000/2019/04/docker-logo.png","params":{},"headers":{"x-forwarded-for":"140.207.236.221","x-forwarded-proto":"https","x-real-ip":"140.207.236.221","host":"lancexlab.cn","connection":"close","accept":"image/png,image/svg+xml,image/*;q=0.8,video/*;q=0.8,*/*;q=0.5","accept-encoding":"br, gzip, deflate","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/74.0.3729.121 Mobile/15E148 Safari/605.1","accept-language":"zh-cn","referer":"https://lancexlab.cn/"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Fri, 05 Apr 2019 17:18:27 GMT","etag":"W/\"3bcf0-169ee823f97\"","content-type":"image/png","content-length":244976},"statusCode":200,"responseTime":"89ms"},"msg":"","time":"2019-05-23T11:43:25.285Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f96ba2e1-7d4f-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w1000/2019/03/redis-micro-logo.png","method":"GET","originalUrl":"/content/images/size/w1000/2019/03/redis-micro-logo.png","params":{},"headers":{"x-forwarded-for":"140.207.236.221","x-forwarded-proto":"https","x-real-ip":"140.207.236.221","host":"lancexlab.cn","connection":"close","accept":"image/png,image/svg+xml,image/*;q=0.8,video/*;q=0.8,*/*;q=0.5","accept-encoding":"br, gzip, deflate","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/74.0.3729.121 Mobile/15E148 Safari/605.1","accept-language":"zh-cn","referer":"https://lancexlab.cn/"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Tue, 26 Mar 2019 03:33:22 GMT","etag":"W/\"35c3f-169b80f4525\"","content-type":"image/png","content-length":220223},"statusCode":200,"responseTime":"91ms"},"msg":"","time":"2019-05-23T11:43:25.290Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f96ba2e0-7d4f-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w1000/2019/04/201904211-25-43.png","method":"GET","originalUrl":"/content/images/size/w1000/2019/04/201904211-25-43.png","params":{},"headers":{"x-forwarded-for":"140.207.236.221","x-forwarded-proto":"https","x-real-ip":"140.207.236.221","host":"lancexlab.cn","connection":"close","accept":"image/png,image/svg+xml,image/*;q=0.8,video/*;q=0.8,*/*;q=0.5","accept-encoding":"br, gzip, deflate","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/74.0.3729.121 Mobile/15E148 Safari/605.1","accept-language":"zh-cn","referer":"https://lancexlab.cn/"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Tue, 02 Apr 2019 03:26:10 GMT","etag":"W/\"ea85d-169dc153109\"","content-type":"image/png","content-length":960605},"statusCode":200,"responseTime":"97ms"},"msg":"","time":"2019-05-23T11:43:25.296Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f96b2db1-7d4f-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w1000/2019/04/201904416-25-08.png","method":"GET","originalUrl":"/content/images/size/w1000/2019/04/201904416-25-08.png","params":{},"headers":{"x-forwarded-for":"140.207.236.221","x-forwarded-proto":"https","x-real-ip":"140.207.236.221","host":"lancexlab.cn","connection":"close","accept":"image/png,image/svg+xml,image/*;q=0.8,video/*;q=0.8,*/*;q=0.5","accept-encoding":"br, gzip, deflate","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/74.0.3729.121 Mobile/15E148 Safari/605.1","accept-language":"zh-cn","referer":"https://lancexlab.cn/"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 04 Apr 2019 08:26:44 GMT","etag":"W/\"e6196-169e77518df\"","content-type":"image/png","content-length":942486},"statusCode":200,"responseTime":"105ms"},"msg":"","time":"2019-05-23T11:43:25.301Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f96b7bd0-7d4f-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w1000/2019/04/201904219-27-11.png","method":"GET","originalUrl":"/content/images/size/w1000/2019/04/201904219-27-11.png","params":{},"headers":{"x-forwarded-for":"140.207.236.221","x-forwarded-proto":"https","x-real-ip":"140.207.236.221","host":"lancexlab.cn","connection":"close","accept":"image/png,image/svg+xml,image/*;q=0.8,video/*;q=0.8,*/*;q=0.5","accept-encoding":"br, gzip, deflate","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/74.0.3729.121 Mobile/15E148 Safari/605.1","accept-language":"zh-cn","referer":"https://lancexlab.cn/"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Tue, 02 Apr 2019 11:30:37 GMT","etag":"W/\"eaa17-169ddd0b929\"","content-type":"image/png","content-length":961047},"statusCode":200,"responseTime":"118ms"},"msg":"","time":"2019-05-23T11:43:25.316Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f99fd240-7d4f-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w1000/2019/03/56601E4F-A6F3-4670-A146-3EA171255A30.jpeg","method":"GET","originalUrl":"/content/images/size/w1000/2019/03/56601E4F-A6F3-4670-A146-3EA171255A30.jpeg","params":{},"headers":{"x-forwarded-for":"140.207.236.221","x-forwarded-proto":"https","x-real-ip":"140.207.236.221","host":"lancexlab.cn","connection":"close","accept":"image/png,image/svg+xml,image/*;q=0.8,video/*;q=0.8,*/*;q=0.5","accept-encoding":"br, gzip, deflate","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/74.0.3729.121 Mobile/15E148 Safari/605.1","accept-language":"zh-cn","referer":"https://lancexlab.cn/"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Mon, 25 Mar 2019 11:02:25 GMT","etag":"W/\"2974f-169b48405e8\"","content-type":"image/jpeg","content-length":169807},"statusCode":200,"responseTime":"111ms"},"msg":"","time":"2019-05-23T11:43:25.653Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"070737c0-7d50-11e9-9c14-5974b6bdc985","userId":null},"url":"/jvm-class-loader/","method":"GET","originalUrl":"/jvm-class-loader/","params":{"slug":"jvm-class-loader"},"headers":{"x-forwarded-for":"140.207.236.221","x-forwarded-proto":"https","x-real-ip":"140.207.236.221","host":"lancexlab.cn","connection":"close","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","accept-encoding":"br, gzip, deflate","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/74.0.3729.121 Mobile/15E148 Safari/605.1","accept-language":"zh-cn","referer":"https://lancexlab.cn/"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"8e58-xwdjmbBQBt4HkVkyB5i703EtqEs\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"144ms"},"msg":"","time":"2019-05-23T11:43:48.174Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"077a6bf0-7d50-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/04/image-76.png","method":"GET","originalUrl":"/content/images/2019/04/image-76.png","params":{},"headers":{"x-forwarded-for":"140.207.236.221","x-forwarded-proto":"https","x-real-ip":"140.207.236.221","host":"lancexlab.cn","connection":"close","accept":"image/png,image/svg+xml,image/*;q=0.8,video/*;q=0.8,*/*;q=0.5","accept-encoding":"br, gzip, deflate","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/74.0.3729.121 Mobile/15E148 Safari/605.1","accept-language":"zh-cn","referer":"https://lancexlab.cn/jvm-class-loader/"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Mon, 22 Apr 2019 12:14:36 GMT","etag":"W/\"3b12-16a44f82d2e\"","content-type":"image/png","content-length":15122},"statusCode":200,"responseTime":"6ms"},"msg":"","time":"2019-05-23T11:43:48.791Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"077aba10-7d50-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/04/image-79.png","method":"GET","originalUrl":"/content/images/2019/04/image-79.png","params":{},"headers":{"x-forwarded-for":"140.207.236.221","x-forwarded-proto":"https","x-real-ip":"140.207.236.221","host":"lancexlab.cn","connection":"close","accept":"image/png,image/svg+xml,image/*;q=0.8,video/*;q=0.8,*/*;q=0.5","accept-encoding":"br, gzip, deflate","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/74.0.3729.121 Mobile/15E148 Safari/605.1","accept-language":"zh-cn","referer":"https://lancexlab.cn/jvm-class-loader/"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Mon, 22 Apr 2019 14:06:04 GMT","etag":"W/\"3f35-16a455e3b6d\"","content-type":"image/png","content-length":16181},"statusCode":200,"responseTime":"7ms"},"msg":"","time":"2019-05-23T11:43:48.793Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"077aba11-7d50-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/04/image-80.png","method":"GET","originalUrl":"/content/images/2019/04/image-80.png","params":{},"headers":{"x-forwarded-for":"140.207.236.221","x-forwarded-proto":"https","x-real-ip":"140.207.236.221","host":"lancexlab.cn","connection":"close","accept":"image/png,image/svg+xml,image/*;q=0.8,video/*;q=0.8,*/*;q=0.5","accept-encoding":"br, gzip, deflate","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/74.0.3729.121 Mobile/15E148 Safari/605.1","accept-language":"zh-cn","referer":"https://lancexlab.cn/jvm-class-loader/"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Mon, 22 Apr 2019 14:20:56 GMT","etag":"W/\"1ad2-16a456bd6c9\"","content-type":"image/png","content-length":6866},"statusCode":200,"responseTime":"9ms"},"msg":"","time":"2019-05-23T11:43:48.795Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"077a9300-7d50-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/04/image-77.png","method":"GET","originalUrl":"/content/images/2019/04/image-77.png","params":{},"headers":{"x-forwarded-for":"140.207.236.221","x-forwarded-proto":"https","x-real-ip":"140.207.236.221","host":"lancexlab.cn","connection":"close","accept":"image/png,image/svg+xml,image/*;q=0.8,video/*;q=0.8,*/*;q=0.5","accept-encoding":"br, gzip, deflate","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/74.0.3729.121 Mobile/15E148 Safari/605.1","accept-language":"zh-cn","referer":"https://lancexlab.cn/jvm-class-loader/"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Mon, 22 Apr 2019 13:29:35 GMT","etag":"W/\"73fe-16a453cd4eb\"","content-type":"image/png","content-length":29694},"statusCode":200,"responseTime":"12ms"},"msg":"","time":"2019-05-23T11:43:48.797Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"077aba12-7d50-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/04/webwxgetmsgimg-1.jpg","method":"GET","originalUrl":"/content/images/2019/04/webwxgetmsgimg-1.jpg","params":{},"headers":{"x-forwarded-for":"140.207.236.221","x-forwarded-proto":"https","x-real-ip":"140.207.236.221","host":"lancexlab.cn","connection":"close","accept":"image/png,image/svg+xml,image/*;q=0.8,video/*;q=0.8,*/*;q=0.5","accept-encoding":"br, gzip, deflate","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/74.0.3729.121 Mobile/15E148 Safari/605.1","accept-language":"zh-cn","referer":"https://lancexlab.cn/jvm-class-loader/"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Mon, 22 Apr 2019 15:48:28 GMT","etag":"W/\"26efc-16a45bbf9bb\"","content-type":"image/jpeg","content-length":159484},"statusCode":200,"responseTime":"13ms"},"msg":"","time":"2019-05-23T11:43:48.799Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"0797b7f0-7d50-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w600/2019/03/56601E4F-A6F3-4670-A146-3EA171255A30.jpeg","method":"GET","originalUrl":"/content/images/size/w600/2019/03/56601E4F-A6F3-4670-A146-3EA171255A30.jpeg","params":{},"headers":{"x-forwarded-for":"140.207.236.221","x-forwarded-proto":"https","x-real-ip":"140.207.236.221","host":"lancexlab.cn","connection":"close","accept":"image/png,image/svg+xml,image/*;q=0.8,video/*;q=0.8,*/*;q=0.5","accept-encoding":"br, gzip, deflate","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/74.0.3729.121 Mobile/15E148 Safari/605.1","accept-language":"zh-cn","referer":"https://lancexlab.cn/jvm-class-loader/"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Mon, 25 Mar 2019 11:06:30 GMT","etag":"W/\"1285b-169b487c5c4\"","content-type":"image/jpeg","content-length":75867},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2019-05-23T11:43:48.979Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"0ae890a0-7d50-11e9-9c14-5974b6bdc985","userId":null},"url":"/favicon.png","method":"GET","originalUrl":"/favicon.png","params":{},"headers":{"x-forwarded-for":"140.207.236.221","x-forwarded-proto":"https","x-real-ip":"140.207.236.221","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/74.0.3729.121 Mobile/15E148 Safari/605.1","accept-encoding":"gzip, deflate","accept-language":"zh-CN,zh;q=0.9,en;q=0.8","if-none-match":"\"b588a0bc9e25c8ee42bc7deb77f9a0c9\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","content-type":"image/png","content-length":22234,"etag":"\"b588a0bc9e25c8ee42bc7deb77f9a0c9\"","cache-control":"public, max-age=86400"},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2019-05-23T11:43:54.541Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"72764500-7d50-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"35.173.253.243","x-forwarded-proto":"https","x-real-ip":"35.173.253.243","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"136ms"},"msg":"","time":"2019-05-23T11:46:48.410Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"9fe10250-7d50-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.216.36.251","x-forwarded-proto":"https","x-real-ip":"3.216.36.251","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"136ms"},"msg":"","time":"2019-05-23T11:48:04.608Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"010a3ff0-7d52-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"184.73.97.133","x-forwarded-proto":"https","x-real-ip":"184.73.97.133","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"74ms"},"msg":"","time":"2019-05-23T11:57:57.050Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"bca1c760-7d52-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.216.36.251","x-forwarded-proto":"https","x-real-ip":"3.216.36.251","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"140ms"},"msg":"","time":"2019-05-23T12:03:11.844Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"d821e100-7d52-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.204.177.7","x-forwarded-proto":"https","x-real-ip":"34.204.177.7","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"85ms"},"msg":"","time":"2019-05-23T12:03:57.926Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"e8693f80-7d53-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"184.73.97.133","x-forwarded-proto":"https","x-real-ip":"184.73.97.133","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"91ms"},"msg":"","time":"2019-05-23T12:11:34.740Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"a8d6b900-7d54-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"35.173.253.243","x-forwarded-proto":"https","x-real-ip":"35.173.253.243","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"100ms"},"msg":"","time":"2019-05-23T12:16:57.590Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"0d352670-7d55-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.216.36.251","x-forwarded-proto":"https","x-real-ip":"3.216.36.251","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"117ms"},"msg":"","time":"2019-05-23T12:19:45.997Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"867cf8a0-7d55-11e9-9c14-5974b6bdc985","userId":null},"url":"/sunshop/index.php?l=page_view&p=advanced_search","method":"GET","originalUrl":"/sunshop/index.php?l=page_view&p=advanced_search","params":{},"headers":{"x-forwarded-for":"82.102.21.98","x-forwarded-proto":"http","x-real-ip":"82.102.21.98","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (Windows; U; Windows NT 2.0) Gecko/20091201 Firefox/3.5.6 GTB5"},"body":{},"query":{"l":"page_view","p":"advanced_search"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=31536000","location":"https://lancexlab.cn/sunshop/index.php?l=page_view&p=advanced_search","vary":"Accept, Accept-Encoding","content-type":"text/plain; charset=utf-8","content-length":"102"},"statusCode":301,"responseTime":"1ms"},"msg":"","time":"2019-05-23T12:23:09.357Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"898e5750-7d55-11e9-9c14-5974b6bdc985","userId":null},"url":"/sunshop/index.php?l=page_view&p=advanced_search","method":"GET","originalUrl":"/sunshop/index.php?l=page_view&p=advanced_search","params":{},"headers":{"x-forwarded-for":"82.102.21.98","x-forwarded-proto":"https","x-real-ip":"82.102.21.98","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (Windows; U; Windows NT 2.0) Gecko/20091201 Firefox/3.5.6 GTB5"},"body":{},"query":{"l":"page_view","p":"advanced_search"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=31536000","location":"/sunshop/index.php/?l=page_view&p=advanced_search"},"statusCode":301,"responseTime":"2ms"},"msg":"","time":"2019-05-23T12:23:14.504Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"89c25fa0-7d55-11e9-9c14-5974b6bdc985","userId":null},"url":"/sunshop/index.php/?l=page_view&p=advanced_search","method":"GET","originalUrl":"/sunshop/index.php/?l=page_view&p=advanced_search","params":{},"headers":{"x-forwarded-for":"82.102.21.98","x-forwarded-proto":"https","x-real-ip":"82.102.21.98","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (Windows; U; Windows NT 2.0) Gecko/20091201 Firefox/3.5.6 GTB5"},"body":{},"query":{"l":"page_view","p":"advanced_search"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"text/html; charset=utf-8","content-length":"12053","etag":"W/\"2f15-jIjlY22TtTGfF4bKk6TbrV9mkjQ\"","vary":"Accept-Encoding"},"statusCode":404,"responseTime":"34ms"},"msg":"","time":"2019-05-23T12:23:14.877Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"91506cd0-7d55-11e9-9c14-5974b6bdc985","userId":null},"url":"/shop/index.php?l=page_view&p=advanced_search","method":"GET","originalUrl":"/shop/index.php?l=page_view&p=advanced_search","params":{},"headers":{"x-forwarded-for":"82.102.21.98","x-forwarded-proto":"http","x-real-ip":"82.102.21.98","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (Windows; U; Windows NT 2.0) Gecko/20091201 Firefox/3.5.6 GTB5"},"body":{},"query":{"l":"page_view","p":"advanced_search"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=31536000","location":"https://lancexlab.cn/shop/index.php?l=page_view&p=advanced_search","vary":"Accept, Accept-Encoding","content-type":"text/plain; charset=utf-8","content-length":"99"},"statusCode":301,"responseTime":"1ms"},"msg":"","time":"2019-05-23T12:23:27.519Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"92f08840-7d55-11e9-9c14-5974b6bdc985","userId":null},"url":"/shop/index.php?l=page_view&p=advanced_search","method":"GET","originalUrl":"/shop/index.php?l=page_view&p=advanced_search","params":{},"headers":{"x-forwarded-for":"82.102.21.98","x-forwarded-proto":"https","x-real-ip":"82.102.21.98","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (Windows; U; Windows NT 2.0) Gecko/20091201 Firefox/3.5.6 GTB5"},"body":{},"query":{"l":"page_view","p":"advanced_search"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=31536000","location":"/shop/index.php/?l=page_view&p=advanced_search"},"statusCode":301,"responseTime":"4ms"},"msg":"","time":"2019-05-23T12:23:30.250Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"9333d2d0-7d55-11e9-9c14-5974b6bdc985","userId":null},"url":"/shop/index.php/?l=page_view&p=advanced_search","method":"GET","originalUrl":"/shop/index.php/?l=page_view&p=advanced_search","params":{},"headers":{"x-forwarded-for":"82.102.21.98","x-forwarded-proto":"https","x-real-ip":"82.102.21.98","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (Windows; U; Windows NT 2.0) Gecko/20091201 Firefox/3.5.6 GTB5"},"body":{},"query":{"l":"page_view","p":"advanced_search"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"text/html; charset=utf-8","content-length":"12053","etag":"W/\"2f15-jIjlY22TtTGfF4bKk6TbrV9mkjQ\"","vary":"Accept-Encoding"},"statusCode":404,"responseTime":"32ms"},"msg":"","time":"2019-05-23T12:23:30.721Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"989737d0-7d55-11e9-9c14-5974b6bdc985","userId":null},"url":"/index.php?l=page_view&p=advanced_search","method":"GET","originalUrl":"/index.php?l=page_view&p=advanced_search","params":{},"headers":{"x-forwarded-for":"82.102.21.98","x-forwarded-proto":"http","x-real-ip":"82.102.21.98","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (Windows; U; Windows NT 2.0) Gecko/20091201 Firefox/3.5.6 GTB5"},"body":{},"query":{"l":"page_view","p":"advanced_search"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=31536000","location":"https://lancexlab.cn/index.php?l=page_view&p=advanced_search","vary":"Accept, Accept-Encoding","content-type":"text/plain; charset=utf-8","content-length":"94"},"statusCode":301,"responseTime":"1ms"},"msg":"","time":"2019-05-23T12:23:39.727Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"9b797030-7d55-11e9-9c14-5974b6bdc985","userId":null},"url":"/index.php?l=page_view&p=advanced_search","method":"GET","originalUrl":"/index.php?l=page_view&p=advanced_search","params":{},"headers":{"x-forwarded-for":"82.102.21.98","x-forwarded-proto":"https","x-real-ip":"82.102.21.98","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (Windows; U; Windows NT 2.0) Gecko/20091201 Firefox/3.5.6 GTB5"},"body":{},"query":{"l":"page_view","p":"advanced_search"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=31536000","location":"/index.php/?l=page_view&p=advanced_search"},"statusCode":301,"responseTime":"1ms"},"msg":"","time":"2019-05-23T12:23:44.566Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":50,"err":{"id":"9c1980c0-7d55-11e9-9c14-5974b6bdc985","domain":"https://lancexlab.cn","code":null,"name":"ValidationError","statusCode":422,"level":"normal","message":"Validation (isSlug) failed for slug","stack":"ValidationError: Validation (isSlug) failed for slug\n    at new ValidationError (/var/www/ghost/versions/2.18.3/node_modules/ghost-ignition/lib/errors/index.js:121:23)\n    at each (/var/www/ghost/versions/2.18.3/core/server/data/validation/index.js:348:35)\n    at /var/www/ghost/versions/2.18.3/node_modules/lodash/lodash.js:4911:15\n    at baseForOwn (/var/www/ghost/versions/2.18.3/node_modules/lodash/lodash.js:2996:24)\n    at /var/www/ghost/versions/2.18.3/node_modules/lodash/lodash.js:4880:18\n    at Function.forEach (/var/www/ghost/versions/2.18.3/node_modules/lodash/lodash.js:9344:14)\n    at Object.validate (/var/www/ghost/versions/2.18.3/core/server/data/validation/index.js:320:7)\n    at _.each (/var/www/ghost/versions/2.18.3/core/server/api/shared/validators/input/all.js:46:47)\n    at /var/www/ghost/versions/2.18.3/node_modules/lodash/lodash.js:4911:15\n    at baseForOwn (/var/www/ghost/versions/2.18.3/node_modules/lodash/lodash.js:2996:24)\n    at /var/www/ghost/versions/2.18.3/node_modules/lodash/lodash.js:4880:18\n    at Function.forEach (/var/www/ghost/versions/2.18.3/node_modules/lodash/lodash.js:9344:14)\n    at validate (/var/www/ghost/versions/2.18.3/core/server/api/shared/validators/input/all.js:41:7)\n    at Object.browse (/var/www/ghost/versions/2.18.3/core/server/api/shared/validators/input/all.js:105:32)\n    at Object.read (/var/www/ghost/versions/2.18.3/core/server/api/shared/validators/input/all.js:115:21)\n    at allShared (/var/www/ghost/versions/2.18.3/core/server/api/shared/validators/handle.js:34:58)"},"msg":"Validation (isSlug) failed for slug","time":"2019-05-23T12:23:45.617Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":50,"err":{"id":"9c1a9230-7d55-11e9-9c14-5974b6bdc985","domain":"https://lancexlab.cn","code":null,"name":"ValidationError","statusCode":422,"level":"normal","message":"Validation (isSlug) failed for slug","stack":"ValidationError: Validation (isSlug) failed for slug\n    at new ValidationError (/var/www/ghost/versions/2.18.3/node_modules/ghost-ignition/lib/errors/index.js:121:23)\n    at each (/var/www/ghost/versions/2.18.3/core/server/data/validation/index.js:348:35)\n    at /var/www/ghost/versions/2.18.3/node_modules/lodash/lodash.js:4911:15\n    at baseForOwn (/var/www/ghost/versions/2.18.3/node_modules/lodash/lodash.js:2996:24)\n    at /var/www/ghost/versions/2.18.3/node_modules/lodash/lodash.js:4880:18\n    at Function.forEach (/var/www/ghost/versions/2.18.3/node_modules/lodash/lodash.js:9344:14)\n    at Object.validate (/var/www/ghost/versions/2.18.3/core/server/data/validation/index.js:320:7)\n    at _.each (/var/www/ghost/versions/2.18.3/core/server/api/shared/validators/input/all.js:46:47)\n    at /var/www/ghost/versions/2.18.3/node_modules/lodash/lodash.js:4911:15\n    at baseForOwn (/var/www/ghost/versions/2.18.3/node_modules/lodash/lodash.js:2996:24)\n    at /var/www/ghost/versions/2.18.3/node_modules/lodash/lodash.js:4880:18\n    at Function.forEach (/var/www/ghost/versions/2.18.3/node_modules/lodash/lodash.js:9344:14)\n    at validate (/var/www/ghost/versions/2.18.3/core/server/api/shared/validators/input/all.js:41:7)\n    at Object.browse (/var/www/ghost/versions/2.18.3/core/server/api/shared/validators/input/all.js:105:32)\n    at Object.read (/var/www/ghost/versions/2.18.3/core/server/api/shared/validators/input/all.js:115:21)\n    at allShared (/var/www/ghost/versions/2.18.3/core/server/api/shared/validators/handle.js:34:58)"},"msg":"Validation (isSlug) failed for slug","time":"2019-05-23T12:23:45.623Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"9c190b90-7d55-11e9-9c14-5974b6bdc985","userId":null},"url":"/index.php/?l=page_view&p=advanced_search","method":"GET","originalUrl":"/index.php/?l=page_view&p=advanced_search","params":{},"headers":{"x-forwarded-for":"82.102.21.98","x-forwarded-proto":"https","x-real-ip":"82.102.21.98","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (Windows; U; Windows NT 2.0) Gecko/20091201 Firefox/3.5.6 GTB5"},"body":{},"query":{"l":"page_view","p":"advanced_search"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"text/html; charset=utf-8","content-length":"12053","etag":"W/\"2f15-jIjlY22TtTGfF4bKk6TbrV9mkjQ\"","vary":"Accept-Encoding"},"statusCode":404,"responseTime":"60ms"},"msg":"","time":"2019-05-23T12:23:45.670Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"9c7905e0-7d55-11e9-9c14-5974b6bdc985","userId":null},"url":"/ss/index.php?l=page_view&p=advanced_search","method":"GET","originalUrl":"/ss/index.php?l=page_view&p=advanced_search","params":{},"headers":{"x-forwarded-for":"82.102.21.98","x-forwarded-proto":"http","x-real-ip":"82.102.21.98","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (Windows; U; Windows NT 2.0) Gecko/20091201 Firefox/3.5.6 GTB5"},"body":{},"query":{"l":"page_view","p":"advanced_search"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=31536000","location":"https://lancexlab.cn/ss/index.php?l=page_view&p=advanced_search","vary":"Accept, Accept-Encoding","content-type":"text/plain; charset=utf-8","content-length":"97"},"statusCode":301,"responseTime":"1ms"},"msg":"","time":"2019-05-23T12:23:46.240Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"9ecc6bc0-7d55-11e9-9c14-5974b6bdc985","userId":null},"url":"/ss/index.php?l=page_view&p=advanced_search","method":"GET","originalUrl":"/ss/index.php?l=page_view&p=advanced_search","params":{},"headers":{"x-forwarded-for":"82.102.21.98","x-forwarded-proto":"https","x-real-ip":"82.102.21.98","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (Windows; U; Windows NT 2.0) Gecko/20091201 Firefox/3.5.6 GTB5"},"body":{},"query":{"l":"page_view","p":"advanced_search"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=31536000","location":"/ss/index.php/?l=page_view&p=advanced_search"},"statusCode":301,"responseTime":"2ms"},"msg":"","time":"2019-05-23T12:23:50.143Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"9ef6d720-7d55-11e9-9c14-5974b6bdc985","userId":null},"url":"/ss/index.php/?l=page_view&p=advanced_search","method":"GET","originalUrl":"/ss/index.php/?l=page_view&p=advanced_search","params":{},"headers":{"x-forwarded-for":"82.102.21.98","x-forwarded-proto":"https","x-real-ip":"82.102.21.98","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (Windows; U; Windows NT 2.0) Gecko/20091201 Firefox/3.5.6 GTB5"},"body":{},"query":{"l":"page_view","p":"advanced_search"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"text/html; charset=utf-8","content-length":"12053","etag":"W/\"2f15-jIjlY22TtTGfF4bKk6TbrV9mkjQ\"","vary":"Accept-Encoding"},"statusCode":404,"responseTime":"26ms"},"msg":"","time":"2019-05-23T12:23:50.446Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"12030cc0-7d56-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"184.73.97.133","x-forwarded-proto":"https","x-real-ip":"184.73.97.133","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"104ms"},"msg":"","time":"2019-05-23T12:27:03.542Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"a8ef8640-7d56-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"35.173.253.243","x-forwarded-proto":"https","x-real-ip":"35.173.253.243","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"96ms"},"msg":"","time":"2019-05-23T12:31:16.741Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"ed39fa10-7d56-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.159.105.194","x-forwarded-proto":"https","x-real-ip":"54.159.105.194","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"79ms"},"msg":"","time":"2019-05-23T12:33:11.297Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"08c0a360-7d57-11e9-9c14-5974b6bdc985","userId":null},"url":"/robots.txt","method":"GET","originalUrl":"/robots.txt","params":{},"headers":{"x-forwarded-for":"203.208.60.24","x-forwarded-proto":"http","x-real-ip":"203.208.60.24","host":"lancexlab.cn","connection":"close","accept":"text/plain,text/html,*/*","user-agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","accept-encoding":"gzip,deflate,br"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=31536000","location":"https://lancexlab.cn/robots.txt","vary":"Accept, Accept-Encoding","content-type":"text/plain; charset=utf-8","content-length":"65"},"statusCode":301,"responseTime":"1ms"},"msg":"","time":"2019-05-23T12:33:57.400Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"09531f60-7d57-11e9-9c14-5974b6bdc985","userId":null},"url":"/robots.txt","method":"GET","originalUrl":"/robots.txt","params":{},"headers":{"x-forwarded-for":"203.208.60.26","x-forwarded-proto":"https","x-real-ip":"203.208.60.26","host":"lancexlab.cn","connection":"close","accept":"text/plain,text/html,*/*","user-agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","accept-encoding":"gzip,deflate,br"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","content-type":"text/plain","content-length":88,"etag":"\"f15f756fcf0b8854e4d47b134faf739c\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2019-05-23T12:33:58.361Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"099e0b10-7d57-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"203.208.60.90","x-forwarded-proto":"http","x-real-ip":"203.208.60.90","host":"lancexlab.cn","connection":"close","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","from":"googlebot(at)googlebot.com","user-agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","accept-encoding":"gzip,deflate,br"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=31536000","location":"https://lancexlab.cn/","vary":"Accept, Accept-Encoding","content-type":"text/html; charset=utf-8","content-length":"98"},"statusCode":301,"responseTime":"1ms"},"msg":"","time":"2019-05-23T12:33:58.851Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"ecdf6180-7d57-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.216.133.49","x-forwarded-proto":"https","x-real-ip":"3.216.133.49","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"103ms"},"msg":"","time":"2019-05-23T12:40:20.224Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f0c299b0-7d58-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.204.177.7","x-forwarded-proto":"https","x-real-ip":"34.204.177.7","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"106ms"},"msg":"","time":"2019-05-23T12:47:36.246Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"0efcf150-7d59-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.216.133.49","x-forwarded-proto":"https","x-real-ip":"3.216.133.49","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"95ms"},"msg":"","time":"2019-05-23T12:48:26.949Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"0d335f70-7d5a-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"35.173.253.243","x-forwarded-proto":"https","x-real-ip":"35.173.253.243","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"93ms"},"msg":"","time":"2019-05-23T12:55:33.446Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"c4b02e80-7d5a-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"35.173.253.243","x-forwarded-proto":"https","x-real-ip":"35.173.253.243","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"123ms"},"msg":"","time":"2019-05-23T13:00:41.316Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"20f035a0-7d5b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.216.133.49","x-forwarded-proto":"https","x-real-ip":"3.216.133.49","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"75ms"},"msg":"","time":"2019-05-23T13:03:16.038Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"2ba752c0-7d5c-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.231.243.156","x-forwarded-proto":"https","x-real-ip":"34.231.243.156","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"89ms"},"msg":"","time":"2019-05-23T13:10:43.526Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"e3b209f0-7d5c-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.159.105.194","x-forwarded-proto":"https","x-real-ip":"54.159.105.194","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"97ms"},"msg":"","time":"2019-05-23T13:15:52.305Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"1b7f9f50-7d5d-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.231.243.156","x-forwarded-proto":"https","x-real-ip":"34.231.243.156","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"101ms"},"msg":"","time":"2019-05-23T13:17:25.931Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f0df0910-7d5d-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"180.97.35.90","x-forwarded-proto":"https","x-real-ip":"180.97.35.90","host":"www.lancexlab.cn","connection":"close","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","user-agent":"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0","referer":"http://www.baidu.com/s?wd=summerz4m","accept-encoding":"gzip, deflate","accept-language":"en,*"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"152d5-F/Yt7N8Fo81P4KBE1h0/g1hbmPQ\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"220ms"},"msg":"","time":"2019-05-23T13:23:24.031Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f10c0c80-7d5d-11e9-9c14-5974b6bdc985","userId":null},"url":"/assets/built/screen.css?v=4500989add","method":"GET","originalUrl":"/assets/built/screen.css?v=4500989add","params":{},"headers":{"x-forwarded-for":"180.97.35.90","x-forwarded-proto":"https","x-real-ip":"180.97.35.90","host":"www.lancexlab.cn","connection":"close","accept":"text/css,*/*;q=0.1","referer":"https://www.lancexlab.cn/","user-agent":"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0","accept-encoding":"gzip, deflate","accept-language":"en,*"},"body":{},"query":{"v":"4500989add"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Sat, 26 Oct 1985 08:15:00 GMT","etag":"W/\"9e68-7438674ba0\"","content-type":"text/css; charset=UTF-8","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"3ms"},"msg":"","time":"2019-05-23T13:23:24.108Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f1158260-7d5d-11e9-9c14-5974b6bdc985","userId":null},"url":"/assets/built/jquery.fitvids.js?v=4500989add","method":"GET","originalUrl":"/assets/built/jquery.fitvids.js?v=4500989add","params":{},"headers":{"x-forwarded-for":"180.97.35.90","x-forwarded-proto":"https","x-real-ip":"180.97.35.90","host":"www.lancexlab.cn","connection":"close","accept":"*/*","referer":"https://www.lancexlab.cn/","user-agent":"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0","accept-encoding":"gzip, deflate","accept-language":"en,*"},"body":{},"query":{"v":"4500989add"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Sat, 26 Oct 1985 08:15:00 GMT","etag":"W/\"777-7438674ba0\"","content-type":"application/javascript; charset=UTF-8","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"3ms"},"msg":"","time":"2019-05-23T13:23:24.171Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f11b75d0-7d5d-11e9-9c14-5974b6bdc985","userId":null},"url":"/assets/built/infinitescroll.js?v=4500989add","method":"GET","originalUrl":"/assets/built/infinitescroll.js?v=4500989add","params":{},"headers":{"x-forwarded-for":"180.97.35.90","x-forwarded-proto":"https","x-real-ip":"180.97.35.90","host":"www.lancexlab.cn","connection":"close","accept":"*/*","referer":"https://www.lancexlab.cn/","user-agent":"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0","accept-encoding":"gzip, deflate","accept-language":"en,*"},"body":{},"query":{"v":"4500989add"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Sat, 26 Oct 1985 08:15:00 GMT","etag":"W/\"3f0-7438674ba0\"","content-type":"application/javascript; charset=UTF-8","content-length":1008,"vary":"Accept-Encoding"},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2019-05-23T13:23:24.208Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"55bd06c0-7d5e-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.216.133.49","x-forwarded-proto":"https","x-real-ip":"3.216.133.49","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"78ms"},"msg":"","time":"2019-05-23T13:26:13.116Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"ed856150-7d5e-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.216.133.49","x-forwarded-proto":"https","x-real-ip":"3.216.133.49","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"147ms"},"msg":"","time":"2019-05-23T13:30:27.834Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"faa165f0-7d5e-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"123.126.113.185","x-forwarded-proto":"https","x-real-ip":"123.126.113.185","host":"www.lancexlab.cn","connection":"close","accept":"*/*","accept-language":"zh-cn","accept-encoding":"gzip,deflate","user-agent":"Sogou web spider/4.0(+http://www.sogou.com/docs/help/webmasters.htm#07)"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"152d5-F/Yt7N8Fo81P4KBE1h0/g1hbmPQ\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"259ms"},"msg":"","time":"2019-05-23T13:30:49.940Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4519bab0-7d5f-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"184.73.97.133","x-forwarded-proto":"https","x-real-ip":"184.73.97.133","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"147ms"},"msg":"","time":"2019-05-23T13:32:54.767Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"ecd025a0-7d5f-11e9-9c14-5974b6bdc985","userId":null},"url":"/rss/","method":"GET","originalUrl":"/rss/","params":{},"headers":{"x-forwarded-for":"62.210.215.110","x-forwarded-proto":"https","x-real-ip":"62.210.215.110","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.66 Safari/537.36","cache-control":"max-age=0, no-cache","pragma":"no-cache","accept-encoding":"gzip"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/xml; charset=utf-8","etag":"W/\"24ea5-WTfFAfY3aK9MulijD/6ZRmOl98g\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"127ms"},"msg":"","time":"2019-05-23T13:37:36.122Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"45d944b0-7d60-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"184.73.97.133","x-forwarded-proto":"https","x-real-ip":"184.73.97.133","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"116ms"},"msg":"","time":"2019-05-23T13:40:05.489Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"bd616580-7d60-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"184.73.97.133","x-forwarded-proto":"https","x-real-ip":"184.73.97.133","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"75ms"},"msg":"","time":"2019-05-23T13:43:25.988Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"3b32b770-7d61-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.216.133.49","x-forwarded-proto":"https","x-real-ip":"3.216.133.49","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"92ms"},"msg":"","time":"2019-05-23T13:46:57.092Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"5ef82ae0-7d62-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.216.133.49","x-forwarded-proto":"https","x-real-ip":"3.216.133.49","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"96ms"},"msg":"","time":"2019-05-23T13:55:06.607Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"c72fb3d0-7d62-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.159.105.194","x-forwarded-proto":"https","x-real-ip":"54.159.105.194","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"156ms"},"msg":"","time":"2019-05-23T13:58:01.516Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"9855e0b0-7d63-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.231.243.156","x-forwarded-proto":"https","x-real-ip":"34.231.243.156","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"85ms"},"msg":"","time":"2019-05-23T14:03:52.338Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"82b54470-7d64-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.159.105.194","x-forwarded-proto":"https","x-real-ip":"54.159.105.194","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"100ms"},"msg":"","time":"2019-05-23T14:10:25.565Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"c9ff8ac0-7d64-11e9-9c14-5974b6bdc985","userId":null},"url":"/factory-pattern-in-java/","method":"GET","originalUrl":"/factory-pattern-in-java/","params":{"slug":"factory-pattern-in-java"},"headers":{"x-forwarded-for":"207.46.13.44","x-forwarded-proto":"https","x-real-ip":"207.46.13.44","host":"www.lancexlab.cn","connection":"close","cache-control":"no-cache","pragma":"no-cache","accept":"*/*","accept-encoding":"gzip, deflate","from":"bingbot(at)microsoft.com","user-agent":"Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm)"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"8ef7-cVCNso1CVe4GqtBgnrjiL6jC0Jc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"127ms"},"msg":"","time":"2019-05-23T14:12:25.198Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"d7787c70-7d64-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.159.105.194","x-forwarded-proto":"https","x-real-ip":"54.159.105.194","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"73ms"},"msg":"","time":"2019-05-23T14:12:47.745Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"1dd814a0-7d65-11e9-9c14-5974b6bdc985","userId":null},"url":"/robots.txt","method":"GET","originalUrl":"/robots.txt","params":{},"headers":{"x-forwarded-for":"203.208.60.81","x-forwarded-proto":"https","x-real-ip":"203.208.60.81","host":"lancexlab.cn","connection":"close","accept":"text/plain,text/html,*/*","user-agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","accept-encoding":"gzip,deflate,br"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","content-type":"text/plain","content-length":88,"etag":"\"f15f756fcf0b8854e4d47b134faf739c\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2019-05-23T14:14:45.742Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"1eed5530-7d65-11e9-9c14-5974b6bdc985","userId":null},"url":"/author/lance/","method":"GET","originalUrl":"/author/lance/","params":{"slug":"lance"},"headers":{"x-forwarded-for":"203.208.60.8","x-forwarded-proto":"https","x-real-ip":"203.208.60.8","host":"lancexlab.cn","connection":"close","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","from":"googlebot(at)googlebot.com","user-agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","accept-encoding":"gzip,deflate,br","if-modified-since":"Thu, 23 May 2019 00:43:09 GMT"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"137ce-94JMS9mzl9YTpWT3YHqCwGWNYGs\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"198ms"},"msg":"","time":"2019-05-23T14:14:47.754Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"8ffaad90-7d65-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.231.247.49","x-forwarded-proto":"https","x-real-ip":"34.231.247.49","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"77ms"},"msg":"","time":"2019-05-23T14:17:57.304Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"5b34bd70-7d66-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.81.207.245","x-forwarded-proto":"https","x-real-ip":"54.81.207.245","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"94ms"},"msg":"","time":"2019-05-23T14:23:38.278Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f5e320f0-7d66-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.231.247.49","x-forwarded-proto":"https","x-real-ip":"34.231.247.49","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"113ms"},"msg":"","time":"2019-05-23T14:27:57.810Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"2f180e80-7d67-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"207.46.13.44","x-forwarded-proto":"http","x-real-ip":"207.46.13.44","host":"lancexlab.cn","connection":"close","cache-control":"no-cache","pragma":"no-cache","accept":"*/*","accept-encoding":"gzip, deflate","from":"bingbot(at)microsoft.com","user-agent":"Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm)"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=31536000","location":"https://lancexlab.cn/","vary":"Accept, Accept-Encoding","content-type":"text/plain; charset=utf-8","content-length":"55"},"statusCode":301,"responseTime":"1ms"},"msg":"","time":"2019-05-23T14:29:33.677Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"648f57d0-7d67-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.231.243.156","x-forwarded-proto":"https","x-real-ip":"34.231.243.156","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"76ms"},"msg":"","time":"2019-05-23T14:31:03.451Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"a723e8d0-7d68-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.81.207.245","x-forwarded-proto":"https","x-real-ip":"54.81.207.245","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"101ms"},"msg":"","time":"2019-05-23T14:40:04.676Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"e6fc0e60-7d68-11e9-9c14-5974b6bdc985","userId":null},"url":"/protocol/","method":"GET","originalUrl":"/protocol/","params":{"slug":"protocol"},"headers":{"x-forwarded-for":"207.46.13.44","x-forwarded-proto":"https","x-real-ip":"207.46.13.44","host":"lancexlab.cn","connection":"close","cache-control":"no-cache","pragma":"no-cache","accept":"*/*","accept-encoding":"gzip, deflate","from":"bingbot(at)microsoft.com","user-agent":"Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm)"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"9af6-D2esGQ9TytFS5XNVQh3osCjQ7lA\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"120ms"},"msg":"","time":"2019-05-23T14:41:51.807Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"310c5280-7d69-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.81.207.245","x-forwarded-proto":"https","x-real-ip":"54.81.207.245","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"68ms"},"msg":"","time":"2019-05-23T14:43:56.014Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4dd19650-7d69-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.216.133.49","x-forwarded-proto":"https","x-real-ip":"3.216.133.49","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"99ms"},"msg":"","time":"2019-05-23T14:44:44.313Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"62bbfa90-7d6b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.81.207.245","x-forwarded-proto":"https","x-real-ip":"54.81.207.245","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"99ms"},"msg":"","time":"2019-05-23T14:59:38.397Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"d246b520-7d6c-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"18.210.23.4","x-forwarded-proto":"https","x-real-ip":"18.210.23.4","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"112ms"},"msg":"","time":"2019-05-23T15:09:55.044Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f9a91ae0-7d6c-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.231.247.49","x-forwarded-proto":"https","x-real-ip":"34.231.247.49","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"87ms"},"msg":"","time":"2019-05-23T15:11:01.095Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"6dc1b770-7d6d-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"18.210.23.4","x-forwarded-proto":"https","x-real-ip":"18.210.23.4","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"106ms"},"msg":"","time":"2019-05-23T15:14:15.891Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"aa966b90-7d6e-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.231.247.49","x-forwarded-proto":"https","x-real-ip":"34.231.247.49","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"145ms"},"msg":"","time":"2019-05-23T15:23:07.483Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"fd454280-7d6e-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.167.55.89","x-forwarded-proto":"https","x-real-ip":"54.167.55.89","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"104ms"},"msg":"","time":"2019-05-23T15:25:26.163Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"9bfcd230-7d6f-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.239.187.172","x-forwarded-proto":"https","x-real-ip":"34.239.187.172","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"82ms"},"msg":"","time":"2019-05-23T15:29:52.422Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"a6d496b0-7d70-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.239.187.172","x-forwarded-proto":"https","x-real-ip":"34.239.187.172","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"107ms"},"msg":"","time":"2019-05-23T15:37:20.135Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"186aa710-7d71-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.231.247.49","x-forwarded-proto":"https","x-real-ip":"34.231.247.49","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"93ms"},"msg":"","time":"2019-05-23T15:40:30.687Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"a1d443d0-7d71-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.231.247.49","x-forwarded-proto":"https","x-real-ip":"34.231.247.49","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"104ms"},"msg":"","time":"2019-05-23T15:44:21.238Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"62fc5ac0-7d72-11e9-9c14-5974b6bdc985","userId":null},"url":"/about/","method":"GET","originalUrl":"/about/","params":{"slug":"about"},"headers":{"x-forwarded-for":"220.181.108.165","x-forwarded-proto":"https","x-real-ip":"220.181.108.165","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)","accept-language":"zh-cn,zh-tw","if-none-match":"W/\"3edf-QzQnzFeLRZRKwIrJKB/a+uwdhk4\"","accept":"*/*"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","etag":"W/\"3edf-QzQnzFeLRZRKwIrJKB/a+uwdhk4\""},"statusCode":304,"responseTime":"42ms"},"msg":"","time":"2019-05-23T15:49:45.239Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"01c5ebd0-7d73-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.203.237.253","x-forwarded-proto":"https","x-real-ip":"34.203.237.253","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"132ms"},"msg":"","time":"2019-05-23T15:54:11.730Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"676b5830-7d73-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.89.201.200","x-forwarded-proto":"https","x-real-ip":"3.89.201.200","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"139ms"},"msg":"","time":"2019-05-23T15:57:02.274Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"690f4430-7d73-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.239.187.172","x-forwarded-proto":"https","x-real-ip":"34.239.187.172","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"103ms"},"msg":"","time":"2019-05-23T15:57:04.987Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"28570260-7d74-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"222.180.149.236","x-forwarded-proto":"http","x-real-ip":"222.180.149.236","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.153 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8","accept-encoding":"","accept-language":"zh-CN,zh;q=0.8","cache-control":"max-age=0"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=31536000","location":"https://lancexlab.cn/","vary":"Accept, Accept-Encoding","content-type":"text/html; charset=utf-8","content-length":"98"},"statusCode":301,"responseTime":"2ms"},"msg":"","time":"2019-05-23T16:02:25.802Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"fea9a5c0-7d74-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.203.237.253","x-forwarded-proto":"https","x-real-ip":"34.203.237.253","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"132ms"},"msg":"","time":"2019-05-23T16:08:25.506Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"9be34800-7d75-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.173.45.231","x-forwarded-proto":"https","x-real-ip":"54.173.45.231","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"82ms"},"msg":"","time":"2019-05-23T16:12:49.235Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"9c51c140-7d75-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.167.55.89","x-forwarded-proto":"https","x-real-ip":"54.167.55.89","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"99ms"},"msg":"","time":"2019-05-23T16:12:49.976Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"3880b4d0-7d77-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.239.187.172","x-forwarded-proto":"https","x-real-ip":"34.239.187.172","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"108ms"},"msg":"","time":"2019-05-23T16:24:21.516Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"807062e0-7d77-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.89.201.200","x-forwarded-proto":"https","x-real-ip":"3.89.201.200","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"77ms"},"msg":"","time":"2019-05-23T16:26:22.173Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"fd8394f0-7d77-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.167.55.89","x-forwarded-proto":"https","x-real-ip":"54.167.55.89","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"121ms"},"msg":"","time":"2019-05-23T16:29:52.058Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"698bb870-7d79-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.203.237.253","x-forwarded-proto":"https","x-real-ip":"34.203.237.253","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"95ms"},"msg":"","time":"2019-05-23T16:40:02.775Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"8356a800-7d79-11e9-9c14-5974b6bdc985","userId":null},"url":"/robots.txt","method":"GET","originalUrl":"/robots.txt","params":{},"headers":{"x-forwarded-for":"123.125.71.13","x-forwarded-proto":"https","x-real-ip":"123.125.71.13","host":"www.lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)","accept-language":"zh-cn,zh-tw","accept":"*/*"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","content-type":"text/plain","content-length":88,"etag":"\"f15f756fcf0b8854e4d47b134faf739c\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"3ms"},"msg":"","time":"2019-05-23T16:40:45.957Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"d4e541e0-7d79-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.239.187.172","x-forwarded-proto":"https","x-real-ip":"34.239.187.172","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"118ms"},"msg":"","time":"2019-05-23T16:43:02.901Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"49ca7d40-7d7a-11e9-9c14-5974b6bdc985","userId":null},"url":"/robots.txt","method":"GET","originalUrl":"/robots.txt","params":{},"headers":{"x-forwarded-for":"203.208.60.62","x-forwarded-proto":"https","x-real-ip":"203.208.60.62","host":"www.lancexlab.cn","connection":"close","accept":"text/plain,text/html,*/*","user-agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","accept-encoding":"gzip,deflate,br"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","content-type":"text/plain","content-length":88,"etag":"\"f15f756fcf0b8854e4d47b134faf739c\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2019-05-23T16:46:18.905Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4a5d9580-7d7a-11e9-9c14-5974b6bdc985","userId":null},"url":"/spring-cloud-gatewayzhi-globalfilter/","method":"GET","originalUrl":"/spring-cloud-gatewayzhi-globalfilter/","params":{"slug":"spring-cloud-gatewayzhi-globalfilter"},"headers":{"x-forwarded-for":"203.208.60.29","x-forwarded-proto":"https","x-real-ip":"203.208.60.29","host":"www.lancexlab.cn","connection":"close","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","from":"googlebot(at)googlebot.com","user-agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","accept-encoding":"gzip,deflate,br"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"abc1-IiPVL+D6ocwjYl9/WJqMrp4iwCw\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"154ms"},"msg":"","time":"2019-05-23T16:46:20.020Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"62ff9570-7d7a-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.167.55.89","x-forwarded-proto":"https","x-real-ip":"54.167.55.89","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"126ms"},"msg":"","time":"2019-05-23T16:47:01.318Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"a37c42f0-7d7b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.239.187.172","x-forwarded-proto":"https","x-real-ip":"34.239.187.172","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"121ms"},"msg":"","time":"2019-05-23T16:55:59.002Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"b6acd420-7d7b-11e9-9c14-5974b6bdc985","userId":null},"url":"/robots.txt","method":"GET","originalUrl":"/robots.txt","params":{},"headers":{"x-forwarded-for":"203.208.60.35","x-forwarded-proto":"https","x-real-ip":"203.208.60.35","host":"lancexlab.cn","connection":"close","accept":"text/plain,text/html,*/*","user-agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","accept-encoding":"gzip,deflate,br"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","content-type":"text/plain","content-length":88,"etag":"\"f15f756fcf0b8854e4d47b134faf739c\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"1ms"},"msg":"","time":"2019-05-23T16:56:31.076Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"b72893d0-7d7b-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/spring-cloud-gatewayzhi-globalfilter/amp/","params":{},"headers":{"x-forwarded-for":"203.208.60.1","x-forwarded-proto":"https","x-real-ip":"203.208.60.1","host":"lancexlab.cn","connection":"close","amp-cache-transform":"google;v=\"1\"","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8,text/html,application/xhtml+xml,application/signed-exchange;v=b3,application/xml;q=0.9,*/*;q=0.8","from":"googlebot(at)googlebot.com","user-agent":"Mozilla/5.0 (Linux; Android 6.0.1; Nexus 5X Build/MMB29P) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.96 Mobile Safari/537.36 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","accept-encoding":"gzip,deflate,br"},"body":{"post":{"slug":"spring-cloud-gatewayzhi-globalfilter","id":"5ca346c572737b08a9e9f1e3","uuid":"c3cd39fb-81ff-41ae-afe8-2da4b6bc7b89","title":"spring-cloud-gateway之GlobalFilter","html":"<!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>引言</blockquote><p>全局过滤器无疑是作用于所有经过网关转发的请求的，对于设计者来说被设计成全局过滤器实现的功能组件也即是设计者认为此功能是网关所必备的功能组件，这点非常重要的，对于引入spring-cloud-gateway做二次封装的时候，我们应该秉承作者的设计思想，即如果需要增加一个全局过滤组件的时候应该实现一个全局过滤器（即实现GlobalFilter接口）。</p><p>我们可以通过gateway内嵌的endpoint来查看GlobalFilter列表（/actuator/gateway/globalfilters）：</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://lancexlab.cn/content/images/2019/04/201904309-54-01.png\" class=\"kg-image\"><figcaption>GlobalFilters</figcaption></figure><!--kg-card-end: image--><p>从api结果可以看到一个全局过滤器列表，并且没一个过滤器都有一个排序id，gateway是通过同时实现Ordered接口来实现控制过滤器的过滤顺序的，其中id越小其代表的优先级越高。</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>预览GlobalFilter、Ordered</blockquote><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://lancexlab.cn/content/images/2019/04/201904310-18-12.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>从GlobalFilter接口的声明来看，其作用及其明确，就是定义了一个filter行为，用于拦截web请求和实现一些跨领域，与应用无关的需求，比如安全验证、超时判断和其他的一些功能性行为。</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://lancexlab.cn/content/images/2019/04/201904310-47-50.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>Ordered接口是spring框架的一个规范接口，用于元素排序或者需要有序的对象实现该接口。</p><p>从endpoint api的结果中我们将<strong>org.springframework.cloud.gateway.filter.*</strong>包下的全局过滤器罗列出来，<strong>org.iblog.enhance.gateway.filter.*</strong>包下的均是增强实现的拦截功能（本文对于自增实现只简单提及，后续章节会详细解释）。</p><!--kg-card-begin: markdown--><ul>\n<li>org.iblog.enhance.gateway.filter.MarkRequestFilter@75c589f2: -2147483647,</li>\n<li>org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@7c8f803d: -2147482648,</li>\n<li>org.iblog.enhance.gateway.filter.logging.LoggingRequestBodyFilter@6db04a6: -1000,</li>\n<li>org.iblog.enhance.gateway.filter.convert.ConvertRequestBodyFilter@1bba9862: -900,</li>\n<li>org.iblog.enhance.gateway.filter.extract.ExtractRequestBodyFilter@565c887e: -800,</li>\n<li>org.iblog.enhance.gateway.filter.async.AsyncProcessingFilter@1317ac2c: -700,</li>\n<li>org.iblog.enhance.gateway.filter.convert.ConvertResponseBodyFilter@451a4187: -25,</li>\n<li>org.iblog.enhance.gateway.filter.logging.LoggingResponseBodyFilter@8f374de: -20,</li>\n<li>org.iblog.enhance.gateway.filter.extract.ExtractResponseBodyFilter@5c215642: -10,</li>\n<li>org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4e26c308: -1,</li>\n<li>org.springframework.cloud.gateway.filter.ForwardPathFilter@7c6ab057: 0,</li>\n<li>org.springframework.cloud.gateway.filter.GatewayMetricsFilter@1f7557fe: 0,</li>\n<li>org.iblog.enhance.gateway.filter.logging.LoggingResponseStatusFilter@426913c4: 1,</li>\n<li>org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@176e839e: 10000,</li>\n<li>org.springframework.cloud.gateway.filter.LoadBalancerClientFilter@363ba634: 10100,</li>\n<li>org.iblog.enhance.gateway.filter.logging.LoggingRealPathFilter@416c1b0: 10101</li>\n<li>org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7ce4498f: 2147483646,</li>\n<li>org.springframework.cloud.gateway.filter.ForwardRoutingFilter@4ac0d49: 2147483647,</li>\n</ul>\n<!--kg-card-end: markdown--><p>展示官方的架构设计图，所有的filtter则按照图中filter模块进行工作，处于handler-proxied模块之间，而且是一个双向的工作关系：</p><!--kg-card-begin: html--><img src=\"https://lancexlab.cn/content/images/2019/04/spring_cloud_gateway_diagram.png\"><!--kg-card-end: html--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>MarkRequestFilter　|　优先级：-2147483647</blockquote><p>这是我个人实现的一个GlobalFilter，这是为自己在后续功能实现而准备的一个过滤器；为每一个request第一时间分配一个uniqueue_key，并且set到exchange的attributes属性列表当中。</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://lancexlab.cn/content/images/2019/04/201904311-24-39.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>AdaptCachedBodyGlobalFilter　|　优先级：-2147482648</blockquote><p>gateway内置的一个GlobalFilter，其作用是从exchange的attributes中或者cachedRequestBody属性值作为request的body，注意使用此功能首先必须预设cachedRequestBody属性至attributes中，这个必须要手动设置，无法通过配置来设置的，可以在优先级更高的filter中来设置cachedRequestBody；当然也可以自己写一个FilterFactory类来做成配置化；我个人觉得暂时这个过滤器作用场景还不太明确，可以不用太考虑。</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://lancexlab.cn/content/images/2019/04/201904311-57-06.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>LoggingRequestBodyFilter　|  优先级： -1000</blockquote><p>这个GlobalFilter是我自己实现的，其功能是对于gateway透传的每一个请求进行日志跟踪并且记录至持久化层，这里会将request的基础信息logging下来，初始化一个日志实体存储。</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>ConvertRequestBodyFilter　|　优先级： -900</blockquote><p>属于enhance-gateway自己的实现，这个功能在还是比较常见的，尤其是面向B端客户需求的时候，会有接口对接时报文转换的需求，在这个filter中就是实现了这种应用无感知的转换。</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>ExtractRequestBodyFilter　|　优先级：-800</blockquote><p>属于enhance-gateway自己的实现，这个功能与ConvertRequestBodyFilter类似，只不过这里不是报文转换，而是实现从报文中抽取一些关键词，这个filter从某个角度上其实可以考虑与ConvertRequestBodyFilter合并成一个filter实现，这个取决于需求的复杂性。</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>AsyncProcessingFilter　|　优先级：-700</blockquote><p>属于enhance-gateway自己的实现，这里是一种针对性的需求，接受调用方一个请求，而调用方对于处理结果的处理进度没有时间敏感或者任务处理时常过长的情况，采用即时反馈而异步作处理的方式来处理。</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>ConvertResponseBodyFilter　|　优先级：-25</blockquote><p>属于enhance-gateway自己的实现，与ConvertRequestBodyFilter对称，对于response的body做输出报文转换的需求，这个视具体应用场景来定，算是一种比较常见的开发场景。</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>LoggingResponseBodyFilter　|　优先级：-20</blockquote><p>属于enhance-gateway自己的实现，与LoggingRequestBodyFilter对称，将response的body记录进日志需求中。</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>ExtractResponseBodyFilter　|　优先级：-10</blockquote><p>　属于enhance-gateway自己的实现，与ExtractRequestBodyFilter对称，将response的body中的关键词记录进日志需求中。</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>NettyWriteResponseFilter　|　优先级：-1</blockquote><p>将Netty代理调用的response数据流写入ServerHttpResponse的body中，此外这个是一个先调用后发生的行为动作，流式编程的典型范例，也是验证了之前所说的filter的链式调用是一个对称的模型，对于优先级越高的行为定义其真实发生其实越晚，NettyWriteResponseFilter将结果数据流写入ServerHttpResponse中发生在NettyRouting获取到远程调用的结果数据流之后，当NettyRouting拿到结果数据流之后会将其写入当前请求exchange的attributes中，写入发生在return语句。建议调试阶段可以将log level设置为trace，这样可以清楚地观察请求的行为发生轨迹。</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://lancexlab.cn/content/images/2019/04/201904314-48-44.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>ForwardPathFilter　|　优先级：0</blockquote><p>这是一个条件过滤器，只有当请求的header scheme为forward的时候才会发生，否则会忽略没有任何作用，当有转发需求的时候会将request的请求path修改，从而修改了请求的目的地址。</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://lancexlab.cn/content/images/2019/04/201904315-00-56.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>GatewayMetricsFilter　|　优先级：０</blockquote><p>metrics实现，对于每个请求记录其发生时间戳，包括开始和结束时间以及请求状态，gateway集成了micrometer框架来实现的，个人觉得这个metrics实现并不是非常完美，micrometer实现其实依赖了<a href=\"https://github.com/dropwizard/metrics\">dropwizard-metrics</a>，<a href=\"https://github.com/dropwizard/metrics\">dropwizard-metrics</a>与微服务框架<a href=\"https://github.com/dropwizard/dropwizard\">dropwizard</a>之间可以无缝集成，效果非常好，监控数据是非常全面的，而micrometer实现比较精简，感兴趣的读者可以学习一下<a href=\"https://github.com/dropwizard/dropwizard\">dropwizard</a>的使用，轻量级容易上手开发。</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://lancexlab.cn/content/images/2019/04/201904315-12-54.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>LoggingResponseStatusFilter　|　优先级：１</blockquote><p>　属于enhance-gateway自己的实现，与GatewayMetricsFilter记录请求结果状态一致，不过我是基于依赖做的二次开发，无法复用已有的逻辑部分；这里有个需要注意的地方，就是其优先级必须发生在NettyWriteResponseFilter之后，也就是要大于-1才能获取到status，否则取到的会是null。</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>RouteToRequestUrlFilter　|　优先级：10000</blockquote><p>RouteToRequestUrlFilter是必须的全局过滤器，这个会在你通过注册中心配置一个下游服务的时候起作用，请求进来的时候path的前缀是gateway的服务地址（ip+port或者是域名），但是对于真实的请求调用，必须将其uri映射至服务id上；比如将path的192.168.20.134:10080映射至服务lb://{serviceId}；而对于绝对路径配置的服务exchange的<em>GATEWAY_ROUTE_ATTR属性将会是null，直接过滤到下一个过滤器，而不会发生path的真实映射。</em></p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://lancexlab.cn/content/images/2019/04/201904315-29-14.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>LoadBalancerClientFilter　|　优先级：10100</blockquote><p>LoadBalancerClientFilter负责服务真实ip的映射，主要针对对个服务节点的情况进行负载均衡，默认采用的netflix-ribbon作为负载均衡器，首先如果scheme不是服务节点映射的话直接过滤，获取服务节点，69行的choose函数是真实负载均衡发生的函数，获取一个本次选出的服务server instance（如果是单节点则无负载计算），然后将服务的真实ip+port替换掉path中的lb://{serviceId}前缀。</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://lancexlab.cn/content/images/2019/04/201904315-41-52.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>LoggingRealPathFilter　|　优先级：10101</blockquote><p>属于enhance-gateway自己的实现，发生在LoadBalancerClientFilter之后便可以获取当前请求的真实path。</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>WebsocketRoutingFilter　|　优先级：2147483646</blockquote><p>WebsocketRoutingFilter过滤器实现了gateway对于websocket的支持，内部通过websocketClient实现将一个http请求协议换转成websocket，实现调用方无感知的请求websocket的服务，只需要将schme设置成ws或者wss这么简单。</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://lancexlab.cn/content/images/2019/04/201904315-52-49.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>ForwardRoutingFilter　|　优先级：2147483647</blockquote><p>ForwardRoutingFilter是一个结束操作，经过filter chain的链式调用，最终将exchange交还给web handler做http请求处理。</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://lancexlab.cn/content/images/2019/04/201904315-58-19.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><blockquote>总结</blockquote><p>源码当中还有两个GlobalFilter，分别是WebClientHttpRoutingFilter、WebClientWriteResponseFilter，/actuator/gateway/globalfilters结果当中不包含它们原因是没有在GatewayAutoConfiguration依赖注入，作者还没启用。</p><p>整个filter的调用通过Ordered接口捆绑成一个链式结构，并且通过reactor流式编程将代码精简，这是一个非常优秀的思想，如果在自己的服务当中采用此编码模型的话，会使得代码清晰很多，感兴趣的读者可以参考学习<a href=\"https://github.com/reactor/reactor-core\">reactor-core</a>。</p><p>本文主要分析了gateway的GlobalFilter的源码实现，对于enhance-gateway实现的GlobalFilter只是提及，这个是一种前后对应的设计思想，并不是很完美，计划在后续通过一篇独立的文章探讨自己的思想，并进行优化。</p><p>注：<a href=\"https://github.com/IBlogLab/enhance-gateway\">enhance-gateway</a>参考地址</p>","comment_id":"5ca346c572737b08a9e9f1e3","feature_image":"https://lancexlab.cn/content/images/2019/04/201904219-27-11.png","featured":false,"page":false,"meta_title":null,"meta_description":null,"created_at":"2019-04-02T19:25:57.000+08:00","updated_at":"2019-04-03T16:21:01.000+08:00","published_at":"2019-04-02T19:30:34.000+08:00","custom_excerpt":"讲解关于spring-cloud-gateway全局过滤器的设计与实现，剖析代码原理。","codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null,"authors":{"0":{"id":"1","name":"lance xu","slug":"lance","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"facebook":null,"twitter":null,"meta_title":null,"meta_description":null,"url":"https://lancexlab.cn/author/lance/"}},"tags":{"0":{"id":"5c9c904072737b08a9e9f072","name":"spring-cloud-gateway","slug":"spring-cloud-gateway","description":"A little research and sharing on the open source project spring-cloud-gateway.","feature_image":"https://lancexlab.cn/content/images/2019/03/menu.saveimg.savepath20190328171657.jpg","visibility":"public","meta_title":null,"meta_description":null,"url":"https://lancexlab.cn/tag/spring-cloud-gateway/"}},"primary_author":{"id":"1","name":"lance xu","slug":"lance","profile_image":"https://lancexlab.cn/content/images/2019/03/D38D5162-C79C-4439-AB54-8B3B04129CA1.jpeg","cover_image":"https://lancexlab.cn/content/images/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","bio":"By lance, love coding.  ","website":"https://lancexlab.cn/author/lance/","location":null,"facebook":null,"twitter":null,"meta_title":null,"meta_description":null,"url":"https://lancexlab.cn/author/lance/"},"primary_tag":{"id":"5c9c904072737b08a9e9f072","name":"spring-cloud-gateway","slug":"spring-cloud-gateway","description":"A little research and sharing on the open source project spring-cloud-gateway.","feature_image":"https://lancexlab.cn/content/images/2019/03/menu.saveimg.savepath20190328171657.jpg","visibility":"public","meta_title":null,"meta_description":null,"url":"https://lancexlab.cn/tag/spring-cloud-gateway/"},"url":"https://lancexlab.cn/spring-cloud-gatewayzhi-globalfilter/","excerpt":"讲解关于spring-cloud-gateway全局过滤器的设计与实现，剖析代码原理。"},"_locals":{"version":"2.18.3","safeVersion":"2.18","relativeUrl":"/spring-cloud-gatewayzhi-globalfilter/amp/","apiVersion":"v2","secure":true,"context":{"0":"amp","1":"post"}}},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"72da-kJOtG46lHMrWpz1wizfSjUWHHnU\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"85ms"},"msg":"","time":"2019-05-23T16:56:31.976Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"020db420-7d7c-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.167.55.89","x-forwarded-proto":"https","x-real-ip":"54.167.55.89","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"115ms"},"msg":"","time":"2019-05-23T16:58:37.654Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"2b9c96d0-7d7c-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.167.55.89","x-forwarded-proto":"https","x-real-ip":"54.167.55.89","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"103ms"},"msg":"","time":"2019-05-23T16:59:47.365Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"7e330e50-7d7d-11e9-9c14-5974b6bdc985","userId":null},"url":"/author/lance/","method":"GET","originalUrl":"/author/lance/","params":{},"headers":{"x-forwarded-for":"220.181.108.162","x-forwarded-proto":"http","x-real-ip":"220.181.108.162","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)","accept-encoding":"gzip","accept-language":"zh-cn,zh-tw","accept":"*/*"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=31536000","location":"https://lancexlab.cn/author/lance/","vary":"Accept, Accept-Encoding","content-type":"text/plain; charset=utf-8","content-length":"68"},"statusCode":301,"responseTime":"1ms"},"msg":"","time":"2019-05-23T17:09:15.319Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"7e40c9f0-7d7d-11e9-9c14-5974b6bdc985","userId":null},"url":"/author/lance/","method":"GET","originalUrl":"/author/lance/","params":{"slug":"lance"},"headers":{"x-forwarded-for":"123.125.71.42","x-forwarded-proto":"https","x-real-ip":"123.125.71.42","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)","accept-language":"zh-cn,zh-tw","accept":"*/*"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","content-length":"79822","etag":"W/\"137ce-94JMS9mzl9YTpWT3YHqCwGWNYGs\"","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"195ms"},"msg":"","time":"2019-05-23T17:09:15.603Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"835a7bc0-7d7d-11e9-9c14-5974b6bdc985","userId":null},"url":"/assets/built/screen.css?v=4500989add","method":"GET","originalUrl":"/assets/built/screen.css?v=4500989add","params":{},"headers":{"x-forwarded-for":"111.206.198.96","x-forwarded-proto":"https","x-real-ip":"111.206.198.96","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1 (compatible; Baiduspider-render/2.0; +http://www.baidu.com/search/spider.html)","proxy-connection":"keep-alive","x-devtools-emulate-network-conditions-client-id":"359e91a8-4986-41df-88ce-f8f77dd6d802","accept-language":"zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3","resource-type":"2","accept":"text/css,*/*;q=0.1","cache-control":"no-cache","referer":"https://lancexlab.cn/author/lance/"},"body":{},"query":{"v":"4500989add"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Sat, 26 Oct 1985 08:15:00 GMT","etag":"W/\"9e68-7438674ba0\"","content-type":"text/css; charset=UTF-8","content-length":40552,"vary":"Accept-Encoding"},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2019-05-23T17:09:23.968Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"844e2a90-7d7d-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w600/2019/04/depositphotos_97727260-stock-photo-building-a-house-with-wooden.jpg","method":"GET","originalUrl":"/content/images/size/w600/2019/04/depositphotos_97727260-stock-photo-building-a-house-with-wooden.jpg","params":{},"headers":{"x-forwarded-for":"111.206.221.21","x-forwarded-proto":"https","x-real-ip":"111.206.221.21","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1 (compatible; Baiduspider-render/2.0; +http://www.baidu.com/search/spider.html)","proxy-connection":"keep-alive","x-devtools-emulate-network-conditions-client-id":"359e91a8-4986-41df-88ce-f8f77dd6d802","accept-language":"zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3","resource-type":"4","accept":"image/webp,image/*,*/*;q=0.8","cache-control":"no-cache","referer":"https://lancexlab.cn/author/lance/"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Tue, 23 Apr 2019 01:59:31 GMT","etag":"W/\"d165-16a47eb6a2f\"","content-type":"image/jpeg","content-length":53605},"statusCode":200,"responseTime":"15ms"},"msg":"","time":"2019-05-23T17:09:25.578Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"846e0ea0-7d7d-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/03/F026AB14-863E-47DC-9E79-7E98B24EC37A.png","method":"GET","originalUrl":"/content/images/2019/03/F026AB14-863E-47DC-9E79-7E98B24EC37A.png","params":{},"headers":{"x-forwarded-for":"111.206.221.114","x-forwarded-proto":"https","x-real-ip":"111.206.221.114","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1 (compatible; Baiduspider-render/2.0; +http://www.baidu.com/search/spider.html)","proxy-connection":"keep-alive","x-devtools-emulate-network-conditions-client-id":"359e91a8-4986-41df-88ce-f8f77dd6d802","accept-language":"zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3","resource-type":"4","accept":"image/webp,image/*,*/*;q=0.8","cache-control":"no-cache","referer":"https://lancexlab.cn/author/lance/"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Mon, 25 Mar 2019 11:01:21 GMT","etag":"W/\"1ccd-169b4830c20\"","content-type":"image/png","content-length":7373},"statusCode":200,"responseTime":"15ms"},"msg":"","time":"2019-05-23T17:09:25.786Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"84a37680-7d7d-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w600/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","method":"GET","originalUrl":"/content/images/size/w600/2019/03/4108A4F6-6264-48B0-B0BC-56A3BF582E38.jpeg","params":{},"headers":{"x-forwarded-for":"111.206.198.13","x-forwarded-proto":"https","x-real-ip":"111.206.198.13","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1 (compatible; Baiduspider-render/2.0; +http://www.baidu.com/search/spider.html)","proxy-connection":"keep-alive","x-devtools-emulate-network-conditions-client-id":"359e91a8-4986-41df-88ce-f8f77dd6d802","accept-language":"zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3","resource-type":"4","accept":"image/webp,image/*,*/*;q=0.8","cache-control":"no-cache","referer":"https://lancexlab.cn/author/lance/"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Wed, 22 May 2019 20:48:35 GMT","etag":"W/\"5b86-16ae14d8730\"","content-type":"image/jpeg","content-length":23430},"statusCode":200,"responseTime":"3ms"},"msg":"","time":"2019-05-23T17:09:26.125Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"84dada30-7d7d-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w600/2019/04/201904219-27-11.png","method":"GET","originalUrl":"/content/images/size/w600/2019/04/201904219-27-11.png","params":{},"headers":{"x-forwarded-for":"111.206.221.39","x-forwarded-proto":"https","x-real-ip":"111.206.221.39","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1 (compatible; Baiduspider-render/2.0; +http://www.baidu.com/search/spider.html)","proxy-connection":"keep-alive","x-devtools-emulate-network-conditions-client-id":"359e91a8-4986-41df-88ce-f8f77dd6d802","accept-language":"zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3","resource-type":"4","accept":"image/webp,image/*,*/*;q=0.8","cache-control":"no-cache","referer":"https://lancexlab.cn/author/lance/"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 04 Apr 2019 10:02:52 GMT","etag":"W/\"84ddc-169e7cd1cb4\"","content-type":"image/png","content-length":544220},"statusCode":200,"responseTime":"83ms"},"msg":"","time":"2019-05-23T17:09:26.568Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"be2bdb40-7d7d-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.239.187.172","x-forwarded-proto":"https","x-real-ip":"34.239.187.172","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"75ms"},"msg":"","time":"2019-05-23T17:11:02.721Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"24199b40-7d7e-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.200.235.92","x-forwarded-proto":"https","x-real-ip":"34.200.235.92","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"118ms"},"msg":"","time":"2019-05-23T17:13:53.772Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"79765420-7d7e-11e9-9c14-5974b6bdc985","userId":null},"url":"/robots.txt","method":"GET","originalUrl":"/robots.txt","params":{},"headers":{"x-forwarded-for":"123.125.67.219","x-forwarded-proto":"http","x-real-ip":"123.125.67.219","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.93 Safari/537.36","accept-encoding":"gzip","accept-language":"zh-cn,zh-tw","accept":"*/*"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=31536000","location":"https://lancexlab.cn/robots.txt","vary":"Accept, Accept-Encoding","content-type":"text/plain; charset=utf-8","content-length":"65"},"statusCode":301,"responseTime":"1ms"},"msg":"","time":"2019-05-23T17:16:16.868Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"798d85a0-7d7e-11e9-9c14-5974b6bdc985","userId":null},"url":"/robots.txt","method":"GET","originalUrl":"/robots.txt","params":{},"headers":{"x-forwarded-for":"123.125.67.226","x-forwarded-proto":"https","x-real-ip":"123.125.67.226","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.93 Safari/537.36","accept-language":"zh-cn,zh-tw","accept":"*/*"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","content-type":"text/plain","content-length":88,"etag":"\"f15f756fcf0b8854e4d47b134faf739c\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"1ms"},"msg":"","time":"2019-05-23T17:16:17.020Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"dbdb3b80-7d7e-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"71.6.143.90","x-forwarded-proto":"https","x-real-ip":"71.6.143.90","host":"140.143.4.220","connection":"close","user-agent":"Mozilla/5.0 zgrab/0.x","accept":"*/*","accept-encoding":"gzip"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"152d5-F/Yt7N8Fo81P4KBE1h0/g1hbmPQ\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"256ms"},"msg":"","time":"2019-05-23T17:19:02.201Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"8c030ec0-7d7f-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.239.187.172","x-forwarded-proto":"https","x-real-ip":"34.239.187.172","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"77ms"},"msg":"","time":"2019-05-23T17:23:57.562Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"18683840-7d80-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.89.137.240","x-forwarded-proto":"https","x-real-ip":"54.89.137.240","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"157ms"},"msg":"","time":"2019-05-23T17:27:53.187Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"39aaede0-7d80-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"207.46.13.130","x-forwarded-proto":"https","x-real-ip":"207.46.13.130","host":"www.lancexlab.cn","connection":"close","cache-control":"no-cache","pragma":"no-cache","accept":"*/*","accept-encoding":"gzip, deflate","from":"bingbot(at)microsoft.com","user-agent":"Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm)"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"152d5-F/Yt7N8Fo81P4KBE1h0/g1hbmPQ\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"204ms"},"msg":"","time":"2019-05-23T17:28:49.035Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4e56d470-7d80-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.200.235.92","x-forwarded-proto":"https","x-real-ip":"34.200.235.92","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"78ms"},"msg":"","time":"2019-05-23T17:29:23.590Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"97754910-7d81-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.167.55.89","x-forwarded-proto":"https","x-real-ip":"54.167.55.89","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"78ms"},"msg":"","time":"2019-05-23T17:38:35.760Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"30f73a80-7d82-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.200.235.92","x-forwarded-proto":"https","x-real-ip":"34.200.235.92","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"169ms"},"msg":"","time":"2019-05-23T17:42:53.394Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"5086e8f0-7d82-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.200.235.92","x-forwarded-proto":"https","x-real-ip":"34.200.235.92","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"85ms"},"msg":"","time":"2019-05-23T17:43:46.261Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"770c18a0-7d83-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.200.235.92","x-forwarded-proto":"https","x-real-ip":"34.200.235.92","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"74ms"},"msg":"","time":"2019-05-23T17:52:00.374Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4aea87b0-7d84-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.89.212.67","x-forwarded-proto":"https","x-real-ip":"54.89.212.67","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"93ms"},"msg":"","time":"2019-05-23T17:57:55.849Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"92e66ac0-7d84-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.200.235.92","x-forwarded-proto":"https","x-real-ip":"34.200.235.92","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"141ms"},"msg":"","time":"2019-05-23T17:59:56.667Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"de407780-7d85-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.85.55.207","x-forwarded-proto":"https","x-real-ip":"3.85.55.207","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"82ms"},"msg":"","time":"2019-05-23T18:09:12.523Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"a8b6e940-7d86-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"18.212.155.177","x-forwarded-proto":"https","x-real-ip":"18.212.155.177","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"105ms"},"msg":"","time":"2019-05-23T18:14:52.223Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"fc795310-7d86-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.210.204.224","x-forwarded-proto":"https","x-real-ip":"3.210.204.224","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"82ms"},"msg":"","time":"2019-05-23T18:17:12.725Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"d96d80c0-7d87-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"207.46.13.130","x-forwarded-proto":"https","x-real-ip":"207.46.13.130","host":"lancexlab.cn","connection":"close","cache-control":"no-cache","pragma":"no-cache","accept":"*/*","accept-encoding":"gzip, deflate","from":"bingbot(at)microsoft.com","user-agent":"Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm)"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"152d5-F/Yt7N8Fo81P4KBE1h0/g1hbmPQ\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"257ms"},"msg":"","time":"2019-05-23T18:23:23.602Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"005efc40-7d88-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.85.55.207","x-forwarded-proto":"https","x-real-ip":"3.85.55.207","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"94ms"},"msg":"","time":"2019-05-23T18:24:28.772Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"bcc5e1a0-7d88-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.200.235.92","x-forwarded-proto":"https","x-real-ip":"34.200.235.92","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"71ms"},"msg":"","time":"2019-05-23T18:29:44.835Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"18bc3590-7d89-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.85.55.207","x-forwarded-proto":"https","x-real-ip":"3.85.55.207","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"91ms"},"msg":"","time":"2019-05-23T18:32:19.143Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"e40f99d0-7d89-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"34.239.148.131","x-forwarded-proto":"https","x-real-ip":"34.239.148.131","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"121ms"},"msg":"","time":"2019-05-23T18:38:00.296Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"e0aa3240-7d8a-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.89.212.67","x-forwarded-proto":"https","x-real-ip":"54.89.212.67","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"147ms"},"msg":"","time":"2019-05-23T18:45:04.121Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"19e4ec30-7d8b-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"107.170.238.245","x-forwarded-proto":"https","x-real-ip":"107.170.238.245","host":"140.143.4.220","connection":"close","user-agent":"Mozilla/5.0 zgrab/0.x","accept":"*/*","accept-encoding":"gzip"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"152d5-F/Yt7N8Fo81P4KBE1h0/g1hbmPQ\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"263ms"},"msg":"","time":"2019-05-23T18:46:40.251Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"73b552e0-7d8b-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"209.17.96.26","x-forwarded-proto":"https","x-real-ip":"209.17.96.26","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (compatible; Nimbostratus-Bot/v1.3.2; http://cloudsystemnetworks.com)"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","content-length":"86741","etag":"W/\"152d5-F/Yt7N8Fo81P4KBE1h0/g1hbmPQ\"","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"169ms"},"msg":"","time":"2019-05-23T18:49:10.840Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"78626030-7d8b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.85.55.207","x-forwarded-proto":"https","x-real-ip":"3.85.55.207","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"86ms"},"msg":"","time":"2019-05-23T18:49:18.602Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"406c9770-7d8d-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.85.55.207","x-forwarded-proto":"https","x-real-ip":"3.85.55.207","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"91ms"},"msg":"","time":"2019-05-23T19:02:03.716Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4e65dcb0-7d8d-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.83.67.110","x-forwarded-proto":"https","x-real-ip":"3.83.67.110","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"73ms"},"msg":"","time":"2019-05-23T19:02:27.141Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"7b2151c0-7d8e-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.89.212.67","x-forwarded-proto":"https","x-real-ip":"54.89.212.67","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"71ms"},"msg":"","time":"2019-05-23T19:10:51.684Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"7663fb50-7d8f-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.83.67.110","x-forwarded-proto":"https","x-real-ip":"3.83.67.110","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"83ms"},"msg":"","time":"2019-05-23T19:17:53.241Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"767c1730-7d8f-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.81.85.170","x-forwarded-proto":"https","x-real-ip":"3.81.85.170","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"69ms"},"msg":"","time":"2019-05-23T19:17:53.385Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"9c707890-7d90-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.81.85.170","x-forwarded-proto":"https","x-real-ip":"3.81.85.170","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"110ms"},"msg":"","time":"2019-05-23T19:26:06.600Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"47473650-7d91-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.90.51.183","x-forwarded-proto":"https","x-real-ip":"52.90.51.183","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"88ms"},"msg":"","time":"2019-05-23T19:30:53.199Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"de27a1e0-7d91-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.83.67.110","x-forwarded-proto":"https","x-real-ip":"3.83.67.110","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"122ms"},"msg":"","time":"2019-05-23T19:35:06.362Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"5a620020-7d92-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"222.180.149.236","x-forwarded-proto":"http","x-real-ip":"222.180.149.236","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.153 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8","accept-encoding":"","accept-language":"zh-CN,zh;q=0.8","cache-control":"max-age=0"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=31536000","location":"https://lancexlab.cn/","vary":"Accept, Accept-Encoding","content-type":"text/html; charset=utf-8","content-length":"98"},"statusCode":301,"responseTime":"1ms"},"msg":"","time":"2019-05-23T19:38:34.660Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"ae71edb0-7d92-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.91.198.234","x-forwarded-proto":"https","x-real-ip":"3.91.198.234","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"104ms"},"msg":"","time":"2019-05-23T19:40:55.796Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"14289820-7d93-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"111.225.216.11","x-forwarded-proto":"https","x-real-ip":"111.225.216.11","host":"140.143.4.220","connection":"close","user-agent":"Wget/1.18 (linux-gnu)","accept":"*/*","accept-encoding":"identity"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","content-length":"86741","etag":"W/\"152d5-F/Yt7N8Fo81P4KBE1h0/g1hbmPQ\"","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"256ms"},"msg":"","time":"2019-05-23T19:43:46.596Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"325c6010-7d93-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.93.43.118","x-forwarded-proto":"https","x-real-ip":"3.93.43.118","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"87ms"},"msg":"","time":"2019-05-23T19:44:37.097Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"9621cc60-7d94-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.207.249.162","x-forwarded-proto":"https","x-real-ip":"52.207.249.162","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"90ms"},"msg":"","time":"2019-05-23T19:54:33.986Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"8fd21620-7d95-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.207.249.162","x-forwarded-proto":"https","x-real-ip":"52.207.249.162","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"121ms"},"msg":"","time":"2019-05-23T20:01:32.925Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"c35b2400-7d95-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.83.177.145","x-forwarded-proto":"https","x-real-ip":"3.83.177.145","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"93ms"},"msg":"","time":"2019-05-23T20:02:59.358Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"7849ce20-7d96-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.207.249.162","x-forwarded-proto":"https","x-real-ip":"52.207.249.162","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"146ms"},"msg":"","time":"2019-05-23T20:08:02.967Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"8dd21580-7d97-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.91.222.151","x-forwarded-proto":"https","x-real-ip":"52.91.222.151","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"81ms"},"msg":"","time":"2019-05-23T20:15:48.522Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"a7d66490-7d97-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.91.222.151","x-forwarded-proto":"https","x-real-ip":"52.91.222.151","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"105ms"},"msg":"","time":"2019-05-23T20:16:32.196Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f0941100-7d97-11e9-9c14-5974b6bdc985","userId":null},"url":"/robots.txt","method":"GET","originalUrl":"/robots.txt","params":{},"headers":{"x-forwarded-for":"199.59.150.183","x-forwarded-proto":"https","x-real-ip":"199.59.150.183","host":"lancexlab.cn","connection":"close","x-b3-spanid":"63e978ef48752a13","user-agent":"Twitterbot/1.0","x-b3-sampled":"false","x-b3-flags":"2","x-b3-parentspanid":"1863089dfdc43e2c","x-b3-traceid":"009f8c3e00b6a6b1"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","content-type":"text/plain","content-length":88,"etag":"\"f15f756fcf0b8854e4d47b134faf739c\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2019-05-23T20:18:34.131Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f0952270-7d97-11e9-9c14-5974b6bdc985","userId":null},"url":"/robots.txt","method":"GET","originalUrl":"/robots.txt","params":{},"headers":{"x-forwarded-for":"199.59.150.183","x-forwarded-proto":"https","x-real-ip":"199.59.150.183","host":"lancexlab.cn","connection":"close","x-b3-spanid":"2878f10cd1d25f07","user-agent":"Twitterbot/1.0","x-b3-sampled":"false","x-b3-flags":"2","x-b3-parentspanid":"6d058f35f57f77eb","x-b3-traceid":"009f8c3e00b6a6b1"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","content-type":"text/plain","content-length":88,"etag":"\"f15f756fcf0b8854e4d47b134faf739c\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2019-05-23T20:18:34.138Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f0ac53f0-7d97-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/04/201904211-25-43.png","method":"GET","originalUrl":"/content/images/2019/04/201904211-25-43.png","params":{},"headers":{"x-forwarded-for":"199.59.150.183","x-forwarded-proto":"https","x-real-ip":"199.59.150.183","host":"lancexlab.cn","connection":"close","x-b3-spanid":"a9bee674b93ee642","user-agent":"Twitterbot/1.0","accept":"*/*","x-b3-sampled":"false","x-b3-flags":"2","x-b3-parentspanid":"6d058f35f57f77eb","accept-encoding":"gzip, deflate","x-b3-traceid":"009f8c3e00b6a6b1"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Tue, 02 Apr 2019 03:25:56 GMT","etag":"W/\"ea85d-169dc14fb2d\"","content-type":"image/png","content-length":960605},"statusCode":200,"responseTime":"97ms"},"msg":"","time":"2019-05-23T20:18:34.386Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f0ab4280-7d97-11e9-9c14-5974b6bdc985","userId":null},"url":"/2019/04/201904211-25-43.png","method":"GET","originalUrl":"/content/images/2019/04/201904211-25-43.png","params":{},"headers":{"x-forwarded-for":"199.59.150.183","x-forwarded-proto":"https","x-real-ip":"199.59.150.183","host":"lancexlab.cn","connection":"close","x-b3-spanid":"e63826c315471cbc","user-agent":"Twitterbot/1.0","accept":"*/*","x-b3-sampled":"false","x-b3-flags":"2","x-b3-parentspanid":"1863089dfdc43e2c","accept-encoding":"gzip, deflate","x-b3-traceid":"009f8c3e00b6a6b1"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Tue, 02 Apr 2019 03:25:56 GMT","etag":"W/\"ea85d-169dc14fb2d\"","content-type":"image/png","content-length":960605},"statusCode":200,"responseTime":"106ms"},"msg":"","time":"2019-05-23T20:18:34.388Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"d636b000-7d98-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.90.51.183","x-forwarded-proto":"https","x-real-ip":"52.90.51.183","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"84ms"},"msg":"","time":"2019-05-23T20:24:59.477Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"5f0e45f0-7d99-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.91.222.151","x-forwarded-proto":"https","x-real-ip":"52.91.222.151","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"115ms"},"msg":"","time":"2019-05-23T20:28:49.092Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"926f0b50-7d99-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.83.67.110","x-forwarded-proto":"https","x-real-ip":"3.83.67.110","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"83ms"},"msg":"","time":"2019-05-23T20:30:15.257Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"b32bab90-7d9a-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.81.85.170","x-forwarded-proto":"https","x-real-ip":"3.81.85.170","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"90ms"},"msg":"","time":"2019-05-23T20:38:19.684Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"6a800b10-7d9b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"35.153.74.188","x-forwarded-proto":"https","x-real-ip":"35.153.74.188","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"79ms"},"msg":"","time":"2019-05-23T20:43:27.250Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f44a3e60-7d9b-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"35.153.74.188","x-forwarded-proto":"https","x-real-ip":"35.153.74.188","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"98ms"},"msg":"","time":"2019-05-23T20:47:18.441Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"3a225710-7d9c-11e9-9c14-5974b6bdc985","userId":null},"url":"/robots.txt","method":"GET","originalUrl":"/robots.txt","params":{},"headers":{"x-forwarded-for":"54.36.148.144","x-forwarded-proto":"https","x-real-ip":"54.36.148.144","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (compatible; AhrefsBot/6.1; +http://ahrefs.com/robot/)","accept":"*/*","accept-encoding":"deflate, gzip"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","content-type":"text/plain","content-length":88,"etag":"\"f15f756fcf0b8854e4d47b134faf739c\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2019-05-23T20:49:15.526Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"3b0e8bd0-7d9c-11e9-9c14-5974b6bdc985","userId":null},"url":"/tag/architecture/","method":"GET","originalUrl":"/tag/architecture/","params":{"slug":"architecture"},"headers":{"x-forwarded-for":"51.255.65.46","x-forwarded-proto":"https","x-real-ip":"51.255.65.46","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (compatible; AhrefsBot/6.1; +http://ahrefs.com/robot/)","accept":"*/*","accept-encoding":"deflate, gzip"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"94f0-K1r141mRnb13p7boIPdHUrbrYMA\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"98ms"},"msg":"","time":"2019-05-23T20:49:17.168Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"e9634cc0-7d9c-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.81.1.158","x-forwarded-proto":"https","x-real-ip":"3.81.1.158","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"92ms"},"msg":"","time":"2019-05-23T20:54:09.642Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"d00421e0-7d9d-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.91.222.151","x-forwarded-proto":"https","x-real-ip":"52.91.222.151","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"103ms"},"msg":"","time":"2019-05-23T21:00:36.583Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"ea441a60-7d9d-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.81.1.158","x-forwarded-proto":"https","x-real-ip":"3.81.1.158","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"97ms"},"msg":"","time":"2019-05-23T21:01:20.616Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"50b14390-7d9e-11e9-9c14-5974b6bdc985","userId":null},"url":"/rss/","method":"GET","originalUrl":"/rss/","params":{},"headers":{"x-forwarded-for":"62.210.215.110","x-forwarded-proto":"https","x-real-ip":"62.210.215.110","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.66 Safari/537.36","cache-control":"max-age=0, no-cache","pragma":"no-cache","accept-encoding":"gzip"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/xml; charset=utf-8","etag":"W/\"24ea5-WTfFAfY3aK9MulijD/6ZRmOl98g\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"144ms"},"msg":"","time":"2019-05-23T21:04:12.509Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"c4f3af40-7d9e-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.87.10.41","x-forwarded-proto":"https","x-real-ip":"3.87.10.41","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"80ms"},"msg":"","time":"2019-05-23T21:07:27.493Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f40c2720-7d9f-11e9-9c14-5974b6bdc985","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"106.120.173.81","x-forwarded-proto":"https","x-real-ip":"106.120.173.81","host":"www.lancexlab.cn","connection":"close","accept":"*/*","accept-language":"zh-cn","accept-encoding":"gzip,deflate","user-agent":"Sogou web spider/4.0(+http://www.sogou.com/docs/help/webmasters.htm#07)","if-modified-since":"Thu, 25 Apr 2019 12:35:47 GMT"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"152d5-F/Yt7N8Fo81P4KBE1h0/g1hbmPQ\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"217ms"},"msg":"","time":"2019-05-23T21:15:56.141Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f71f5a90-7d9f-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"35.153.74.188","x-forwarded-proto":"https","x-real-ip":"35.153.74.188","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"129ms"},"msg":"","time":"2019-05-23T21:16:01.211Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"21125640-7da0-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.90.51.183","x-forwarded-proto":"https","x-real-ip":"52.90.51.183","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"104ms"},"msg":"","time":"2019-05-23T21:17:11.566Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"f09a6380-7da0-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.93.168.3","x-forwarded-proto":"https","x-real-ip":"3.93.168.3","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"74ms"},"msg":"","time":"2019-05-23T21:22:59.715Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"29fd2260-7da2-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.81.1.158","x-forwarded-proto":"https","x-real-ip":"3.81.1.158","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"124ms"},"msg":"","time":"2019-05-23T21:31:45.540Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"5683c140-7da2-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.93.168.3","x-forwarded-proto":"https","x-real-ip":"3.93.168.3","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"79ms"},"msg":"","time":"2019-05-23T21:33:00.196Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"dddc5850-7da2-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.93.168.3","x-forwarded-proto":"https","x-real-ip":"3.93.168.3","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"141ms"},"msg":"","time":"2019-05-23T21:36:47.332Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"66ffa7d0-7da4-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.87.10.41","x-forwarded-proto":"https","x-real-ip":"3.87.10.41","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"90ms"},"msg":"","time":"2019-05-23T21:47:46.856Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"7a4e6f60-7da4-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.93.168.3","x-forwarded-proto":"https","x-real-ip":"3.93.168.3","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"111ms"},"msg":"","time":"2019-05-23T21:48:19.271Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"e50d6680-7da4-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.90.51.183","x-forwarded-proto":"https","x-real-ip":"52.90.51.183","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"98ms"},"msg":"","time":"2019-05-23T21:51:18.348Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"0c01c830-7da5-11e9-9c14-5974b6bdc985","userId":null},"url":"/robots.txt","method":"GET","originalUrl":"/robots.txt","params":{},"headers":{"x-forwarded-for":"157.55.39.27","x-forwarded-proto":"https","x-real-ip":"157.55.39.27","host":"www.lancexlab.cn","connection":"close","cache-control":"no-cache","pragma":"no-cache","accept":"*/*","accept-encoding":"gzip, deflate","user-agent":"Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm)"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","content-type":"text/plain","content-length":88,"etag":"\"f15f756fcf0b8854e4d47b134faf739c\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"64ms"},"msg":"","time":"2019-05-23T21:52:23.669Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"0cba69d0-7da5-11e9-9c14-5974b6bdc985","userId":null},"url":"/robots.txt","method":"GET","originalUrl":"/robots.txt","params":{},"headers":{"x-forwarded-for":"157.55.39.27","x-forwarded-proto":"https","x-real-ip":"157.55.39.27","host":"www.lancexlab.cn","connection":"close","cache-control":"no-cache","pragma":"no-cache","accept":"*/*","accept-encoding":"gzip, deflate","user-agent":"Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm)"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","content-type":"text/plain","content-length":88,"etag":"\"f15f756fcf0b8854e4d47b134faf739c\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"1ms"},"msg":"","time":"2019-05-23T21:52:24.816Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"113e1d30-7da5-11e9-9c14-5974b6bdc985","userId":null},"url":"/size/w600/2019/03/redis-micro-logo.png","method":"GET","originalUrl":"/content/images/size/w600/2019/03/redis-micro-logo.png","params":{},"headers":{"x-forwarded-for":"207.46.13.140","x-forwarded-proto":"https","x-real-ip":"207.46.13.140","host":"www.lancexlab.cn","connection":"close","cache-control":"no-cache","pragma":"no-cache","accept":"*/*","accept-encoding":"gzip, deflate","from":"bingbot(at)microsoft.com","user-agent":"Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm)"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Sat, 30 Mar 2019 22:33:23 GMT","etag":"W/\"1d558-169d0bc6bfe\"","content-type":"image/png","content-length":120152},"statusCode":200,"responseTime":"63ms"},"msg":"","time":"2019-05-23T21:52:32.451Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"5e0b41f0-7da6-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.216.36.175","x-forwarded-proto":"https","x-real-ip":"3.216.36.175","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"117ms"},"msg":"","time":"2019-05-23T22:01:50.853Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"7ff1d8b0-7da6-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"35.153.74.188","x-forwarded-proto":"https","x-real-ip":"35.153.74.188","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"117ms"},"msg":"","time":"2019-05-23T22:02:47.729Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"3c350970-7da7-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"35.153.74.188","x-forwarded-proto":"https","x-real-ip":"35.153.74.188","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"119ms"},"msg":"","time":"2019-05-23T22:08:03.584Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"56dc32c0-7da8-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.87.10.41","x-forwarded-proto":"https","x-real-ip":"3.87.10.41","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"103ms"},"msg":"","time":"2019-05-23T22:15:57.780Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"7b5e8300-7da8-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"35.172.109.254","x-forwarded-proto":"https","x-real-ip":"35.172.109.254","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"88ms"},"msg":"","time":"2019-05-23T22:16:59.018Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"11f58980-7da9-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"35.172.109.254","x-forwarded-proto":"https","x-real-ip":"35.172.109.254","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"77ms"},"msg":"","time":"2019-05-23T22:21:11.654Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"4f1f1460-7daa-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.87.10.41","x-forwarded-proto":"https","x-real-ip":"3.87.10.41","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"106ms"},"msg":"","time":"2019-05-23T22:30:03.793Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"8bb3f5d0-7daa-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.216.36.175","x-forwarded-proto":"https","x-real-ip":"3.216.36.175","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"74ms"},"msg":"","time":"2019-05-23T22:31:45.400Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"05ef9de0-7dab-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"35.172.109.254","x-forwarded-proto":"https","x-real-ip":"35.172.109.254","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"109ms"},"msg":"","time":"2019-05-23T22:35:10.509Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"422d9040-7dac-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.90.51.183","x-forwarded-proto":"https","x-real-ip":"52.90.51.183","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"82ms"},"msg":"","time":"2019-05-23T22:44:01.047Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"e83ba260-7dac-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"35.172.109.254","x-forwarded-proto":"https","x-real-ip":"35.172.109.254","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"94ms"},"msg":"","time":"2019-05-23T22:48:39.653Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"53b3fe70-7dad-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"100.24.42.100","x-forwarded-proto":"https","x-real-ip":"100.24.42.100","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"89ms"},"msg":"","time":"2019-05-23T22:51:39.954Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"2354c3d0-7dae-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.163.11.21","x-forwarded-proto":"https","x-real-ip":"54.163.11.21","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"97ms"},"msg":"","time":"2019-05-23T22:57:28.303Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"3a13dd80-7daf-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.209.185.155","x-forwarded-proto":"https","x-real-ip":"54.209.185.155","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"84ms"},"msg":"","time":"2019-05-23T23:05:15.949Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"63d4f3c0-7daf-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"54.163.11.21","x-forwarded-proto":"https","x-real-ip":"54.163.11.21","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"105ms"},"msg":"","time":"2019-05-23T23:06:26.023Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"7e1719b0-7db0-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.87.227.163","x-forwarded-proto":"https","x-real-ip":"52.87.227.163","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"77ms"},"msg":"","time":"2019-05-23T23:14:19.546Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"53f688e0-7db1-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"35.172.109.254","x-forwarded-proto":"https","x-real-ip":"35.172.109.254","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"99ms"},"msg":"","time":"2019-05-23T23:20:18.387Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"6a57e7a0-7db1-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.90.51.183","x-forwarded-proto":"https","x-real-ip":"52.90.51.183","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"89ms"},"msg":"","time":"2019-05-23T23:20:55.924Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"a3fd54d0-7db2-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"3.216.36.175","x-forwarded-proto":"https","x-real-ip":"3.216.36.175","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"124ms"},"msg":"","time":"2019-05-23T23:29:42.171Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"e9324fb0-7db2-11e9-9c14-5974b6bdc985","userId":null},"url":"/the-editor/","method":"GET","originalUrl":"/the-editor/","params":{"slug":"the-editor"},"headers":{"x-forwarded-for":"54.36.148.119","x-forwarded-proto":"https","x-real-ip":"54.36.148.119","host":"lancexlab.cn","connection":"close","user-agent":"Mozilla/5.0 (compatible; AhrefsBot/6.1; +http://ahrefs.com/robot/)","accept":"*/*","accept-encoding":"deflate, gzip"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"7555-cVME+GKXlQkUb091GsNqWr6nnSo\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"102ms"},"msg":"","time":"2019-05-23T23:31:38.258Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"464b2aa0-7db3-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"100.24.42.100","x-forwarded-proto":"https","x-real-ip":"100.24.42.100","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"69ms"},"msg":"","time":"2019-05-23T23:34:14.416Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"5cdaec60-7db3-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"100.24.42.100","x-forwarded-proto":"https","x-real-ip":"100.24.42.100","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"105ms"},"msg":"","time":"2019-05-23T23:34:52.304Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"7c0b2040-7db4-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.87.227.163","x-forwarded-proto":"https","x-real-ip":"52.87.227.163","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"104ms"},"msg":"","time":"2019-05-23T23:42:54.126Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"5952c520-7db5-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.90.51.183","x-forwarded-proto":"https","x-real-ip":"52.90.51.183","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"94ms"},"msg":"","time":"2019-05-23T23:49:05.362Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"5ad21220-7db5-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.90.51.183","x-forwarded-proto":"https","x-real-ip":"52.90.51.183","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"86ms"},"msg":"","time":"2019-05-23T23:49:07.865Z","v":0}
{"name":"Log","hostname":"VM-0-4-ubuntu","pid":20705,"level":30,"req":{"meta":{"requestId":"915334e0-7db6-11e9-9c14-5974b6bdc985","userId":"1"},"url":"/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?include=author%2Ctags&formats=mobiledoc%2Chtml%2Cplaintext&order=updated_at%20desc&status=published","params":{},"headers":{"x-forwarded-for":"52.90.51.183","x-forwarded-proto":"https","x-real-ip":"52.90.51.183","host":"lancexlab.cn","connection":"close","user-agent":"Zapier","content-type":"application/json; charset=utf-8","accept-encoding":"gzip,deflate","accept":"*/*"},"body":{},"query":{"include":"author,tags","formats":"mobiledoc,html,plaintext","order":"updated_at desc","status":"published"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"6043f-UcKKpmJs7+3+4W/VKNHBnJBOHP8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"117ms"},"msg":"","time":"2019-05-23T23:57:48.837Z","v":0}
